unit Objets100cLib_V800;

// ************************************************************************ //
// AVERTISSEMENT
// -------
// Les types déclarés dans ce fichier ont été générés à partir de données lues
// depuis la bibliothèque de types. Si cette dernière (via une autre bibliothèque de types
// s'y référant) est explicitement ou indirectement ré-importée, ou la commande "Actualiser"
// de l'éditeur de bibliothèque de types est activée lors de la modification de la bibliothèque
// de types, le contenu de ce fichier sera régénéré et toutes les modifications
// manuellement apportées seront perdues.
// ************************************************************************ //

// $Rev: 98336 $
// Fichier généré le 12/01/2022 13:17:37 depuis la bibliothèque de types ci-dessous.

// ************************************************************************  //
// Biblio. types : C:\PROGRA~2\COMMON~1\Sage\OBJETS~1\OBJETS~1.DLL (1)
// LIBID : {8B42EFD1-11DE-4AF5-8F95-2901702D7A46}
// LCID : 0
// Fichier d'aide : 
// Chaîne d'aide : Objets m�tiers Sage 100c 8.00 Type Library
// DepndLst : 
//   (1) v2.0 stdole, (C:\Windows\SysWOW64\stdole2.tlb)
// SYS_KIND: SYS_WIN32
// Errors:
//   Remarque : le symbole 'ClassName' a été renommé en '_className'
//   Remarque : le symbole 'type' a été renommé en 'type_'
//   Remarque : membre 'End' de 'IDateTimePeriod' changé en 'End_'
//   Remarque : membre 'Set' de 'IUserLot' changé en 'Set_'
//   Remarque : membre 'Set' de 'IUserEmplacement' changé en 'Set_'
//   Remarque : membre 'Set' de 'IUserColis' changé en 'Set_'
// ************************************************************************ //
{$TYPEDADDRESS OFF} // L'unité doit être compilée sans pointeur à type contrôlé.  
{$WARN SYMBOL_PLATFORM OFF}
{$WRITEABLECONST ON}
{$VARPROPSETTER ON}
{$ALIGN 4}

interface

uses Winapi.Windows, System.Classes, System.Variants, System.Win.StdVCL, Vcl.Graphics, Vcl.OleServer, Winapi.ActiveX;
  
// *********************************************************************//
// GUIDS déclarés dans la bibliothèque de types. Préfixes utilisés:        
//   Bibliothèques de types : LIBID_xxxx                                      
//   CoClasses              : CLASS_xxxx                                      
//   Interfaces DISP        : DIID_xxxx                                       
//   Interfaces Non-DISP    : IID_xxxx                                        
// *********************************************************************//
const
  // Versions mineure et majeure de la bibliothèque de types
  Objets100cLibMajorVersion = 8;
  Objets100cLibMinorVersion = 0;

  LIBID_Objets100cLib: TGUID = '{8B42EFD1-11DE-4AF5-8F95-2901702D7A46}';

  IID_IBITransactional: TGUID = '{0BD6E47B-CD15-4D44-ADAA-6364E78E5265}';
  IID_ISynchroLog: TGUID = '{1ABC2F0C-87D1-421D-94E1-66E84D970AE3}';
  IID_IPredicate: TGUID = '{795E7389-208E-4FBF-B935-5D64BEB37EC6}';
  IID_IPredicateValue: TGUID = '{CABF2ABE-3E55-4250-9424-D5600D14152A}';
  IID_IPredicateComparison: TGUID = '{19D17313-7089-4EF7-99F1-F1A4BFBD55AB}';
  IID_IBIValuesInsertable: TGUID = '{5DBB9FAF-C1EF-4326-A1A3-28F3C64656A7}';
  IID_IPredicateCompound: TGUID = '{6E2B34A2-AF12-4C21-80E9-66E96D2B09A0}';
  IID_IBICollectionPredicate: TGUID = '{CDD8F431-5305-4BB8-B8C2-224F70BE9998}';
  IID_IPredicateBuilder: TGUID = '{40B131B9-6E75-4A48-A1E4-FF903D1459F0}';
  IID_IArrondi: TGUID = '{7BCAE2C8-7BD8-4B4F-94C8-484E6F6D3AB3}';
  IID_IBIPersistObject: TGUID = '{EDB35DEF-BFE5-44FC-ACB0-41CF78E6FDDD}';
  IID_IBITypeObjectFactory: TGUID = '{9D26AC49-A0D6-4719-A19B-835168D0AAF2}';
  IID_IBICollection: TGUID = '{F4042937-945B-499A-81A1-B1B772D52032}';
  IID_IBIObjectID: TGUID = '{971FB5E1-79A8-4A51-A47E-0286E29AFAC7}';
  IID_IBICollectionDispatch: TGUID = '{4F3E5D34-5A39-4938-B9D8-A891393F39BE}';
  IID_IBIPersistStream: TGUID = '{0C19AA03-32BA-4A41-A5C7-231C922E2BDD}';
  IID_IDatabaseInfo: TGUID = '{FC26A457-2146-4035-9A0F-9A121BC5BC3E}';
  IID_ISynchroStream: TGUID = '{453C012A-E85B-4776-ACFE-C80668BE04F9}';
  IID_IBIObjectIDExternal: TGUID = '{A70874A0-E77F-4519-9354-0C3FA1787522}';
  IID_IBIMedia: TGUID = '{BD0B5F31-E6C8-48C2-A087-4668AF53E04A}';
  IID_IBICategorieCompta: TGUID = '{1EB2D07A-C0C8-497F-9D9B-323076B23643}';
  IID_IDocValorisation: TGUID = '{790843D7-1E85-45F6-B94C-BA5BD9565558}';
  IID_IDocValoTaxes: TGUID = '{7ABB0C6B-AE5E-43CE-9FC2-22294A8161A3}';
  IID_IDocValoTaxe: TGUID = '{724FD64D-A3CC-4821-A7F4-12E83E12DF60}';
  IID_IDocValoEscompte: TGUID = '{9F1D9451-2EC0-4658-85A5-E236ED9D39D3}';
  IID_IFrais2: TGUID = '{B798E501-D751-4D2B-ADFE-9C9411EA81EF}';
  IID_IFraisElem2: TGUID = '{C1A25544-B9B7-43A1-9617-7BD2321489C4}';
  IID_IRemise2: TGUID = '{11258EBC-3FC0-4461-83F1-AFFBEBF75D10}';
  IID_IRemiseElem2: TGUID = '{B87AA1B8-BEB8-4DFD-BEC4-9F25CAE433D4}';
  IID_IBPDevise2: TGUID = '{02658A6A-195E-4383-A18B-EB162ED46D5F}';
  IID_IBPDeviseFactory2: TGUID = '{A45F660A-3080-4619-9A6E-A6EB8E29DF97}';
  IID_IAdresse: TGUID = '{03E0F077-29D3-442D-A9AB-D21CE4112A9A}';
  IID_ITelecom: TGUID = '{089B1AA4-8800-4FCB-9013-2CCA6F9D9F7A}';
  IID_ITarif2: TGUID = '{54EE0721-CF74-48BB-ABE3-54A4E62A18A9}';
  IID_IDevise: TGUID = '{26555D4C-EC13-4B47-A38E-35EAAA45BECF}';
  IID_ITarifVente2: TGUID = '{18AF0D16-E2FE-4C21-B399-50B060BEC3E2}';
  IID_ITarifAchat2: TGUID = '{11D2FA93-8598-4475-A940-C5276357BCBE}';
  IID_IBPAnalytiqueRupture: TGUID = '{8FC21F33-1F4D-44A6-89A4-1F9196195BD2}';
  IID_IDocLigneValorisation: TGUID = '{1BBB8B46-588F-4718-BDCF-3E4E79F28346}';
  IID_ITransformation: TGUID = '{9CFC5621-A9C5-4CB7-8F59-5D43528CB085}';
  IID_ITransformationVente: TGUID = '{3C639ED8-ABBF-4449-9B86-510624C35C24}';
  IID_IPMProcess: TGUID = '{CA25DA28-1153-4BE1-9849-403D1D8B2A3F}';
  IID_IPMDocTransformer: TGUID = '{3B2FF624-53B6-4F75-8A34-41CFDA72646F}';
  IID_IFailInfoCol: TGUID = '{ED8391C3-A97F-4464-AFA4-D8A52DA6C558}';
  IID_IFailInfo: TGUID = '{56E46799-276B-4FAA-B64E-B98F1B245C92}';
  IID_IBODocument3: TGUID = '{32FE56B9-1E64-4A59-AE3C-EA5BEBBA2C3D}';
  IID_IBODocumentFactory: TGUID = '{B6986EB1-B7E5-47E0-A22E-B4C64A1A54B1}';
  IID_IBIFields: TGUID = '{2817DCCC-42F2-4206-835D-F46D0AD2AA0F}';
  IID_IBIField: TGUID = '{EDC1CB4E-E678-438B-B722-5BEDCCED8EF8}';
  IID_IBODocumentLigneFactory: TGUID = '{EA77FBAD-D58F-461F-9542-8F123C1D7B85}';
  IID_IBODepot3: TGUID = '{390E51AD-CC0A-4641-84D9-6B8E97906812}';
  IID_IBODepotFactory2: TGUID = '{22A6C915-8B4F-4BB0-B720-B8DA08203AE0}';
  IID_IBODepotEmplacementFactory: TGUID = '{1B59ED90-B489-4E8F-928F-CA5CA4B443F8}';
  IID_IBODepotEmplacement: TGUID = '{F9E53BA9-EBAD-462E-9AAF-3B768FD8E6F1}';
  IID_IBISouche: TGUID = '{E323C1CD-6888-42A8-8DA2-D8B66A9819B8}';
  IID_IBIValues: TGUID = '{492D8954-BF34-4EB1-A8C8-85C45454B8BF}';
  IID_IBOCollaborateur: TGUID = '{358B9088-4422-436B-88D3-66ECDF3CC622}';
  IID_IBOCollaborateurFactory: TGUID = '{37A491F2-E6F5-47BF-B7F3-2E3CDD5C4E75}';
  IID_IBOVendeursAssociesFactory: TGUID = '{6989D81B-29BD-4AD5-B97A-DE21C8E82772}';
  IID_IBOCompteA3: TGUID = '{F4A12389-C6F0-4A1A-8F6F-17D1816C7E26}';
  IID_IBOCompteAFactory3: TGUID = '{2CE84C92-B46A-4AEB-9D9B-BFA7D0C6D2C5}';
  IID_IBPAnalytique3: TGUID = '{67899AAF-D6B5-43DE-820C-630E767F30FB}';
  IID_IBPAnalytiqueFactory3: TGUID = '{E0088168-DC4B-4062-BBE5-4FAFCDF25C0A}';
  IID_IBPAnalyse: TGUID = '{3723FCFA-5384-4666-BAF8-4767E202D581}';
  IID_IBPAnalyseFactory: TGUID = '{C16CDB84-022B-4471-90EF-689793E6A560}';
  IID_IBODocumentLigne3: TGUID = '{7D3D9D90-6A4D-4174-92BA-2BEA034A9095}';
  IID_IBOArticle3: TGUID = '{E05DF99C-5D91-4A03-B9A1-5C87A92D8298}';
  IID_IBOArticleFactory3: TGUID = '{154DA331-CD29-403D-80F1-8D812FE017FB}';
  IID_IBOFamille3: TGUID = '{8F8ABB37-5FD5-4AD8-860D-30F6D8C6BF31}';
  IID_IBOFamilleFactory2: TGUID = '{B6F2B040-5FF8-439D-8888-0EF811BD5744}';
  IID_IBPProduit2: TGUID = '{FE278BBF-4234-43EB-A81B-FF0A92107279}';
  IID_IBPProduitFactory2: TGUID = '{EFB726BF-32CF-4168-9A5C-33A8E74A499C}';
  IID_IBPUnite: TGUID = '{D5E5967F-96F9-4507-816C-D3DB7157ED64}';
  IID_IBPUniteFactory: TGUID = '{17DF42EF-AB95-4200-9114-7D4E5A3ED034}';
  IID_IBOModele2: TGUID = '{DCFAB54C-F238-4B5D-A8FC-E368FB2B0CD2}';
  IID_IBOModeleFactory: TGUID = '{D4306949-E667-4D20-8A94-317296689089}';
  IID_IBOBaremeSolde: TGUID = '{DF7C73E9-09F8-4A3E-A678-37C12B0DF31F}';
  IID_IBOBaremeSoldeFactory: TGUID = '{4ADADBE9-4B6F-4451-8A97-A2C03083EBEA}';
  IID_IBOTiers3: TGUID = '{CA651533-8F26-41F2-B0D5-855956FDA70F}';
  IID_IBOTiersPart3: TGUID = '{F5C77FD4-4820-4AFD-AD17-194C8998EAFB}';
  IID_IBOFournisseur3: TGUID = '{3429256D-78D7-477B-9E0F-1DEC316C490D}';
  IID_IBOTiersFactory3: TGUID = '{87FE686C-A20E-4716-AB17-41691E470227}';
  IID_IBOTiersCompteGFactory3: TGUID = '{0636206A-E39C-4B75-AB57-1B821E65E957}';
  IID_IBOCompteG3: TGUID = '{BD1D89D6-795E-4FCC-BA51-85EFC0BC9B7A}';
  IID_IBOCompteGFactory3: TGUID = '{766FC622-F25F-45E3-8D10-8EAF2154174B}';
  IID_IBOCompteR: TGUID = '{34254DB0-A71C-4B9E-99A3-6E6B38582609}';
  IID_IBOCompteGTiersFactory3: TGUID = '{84334E10-A439-46CC-9F65-9A01E9642D77}';
  IID_IBOTaxe3: TGUID = '{99035D0A-F5E5-466E-A919-8174DE96725B}';
  IID_IBOTaxeFactory3: TGUID = '{7DFE3CA8-2D3C-4DF1-9B8F-7F28AD2B5439}';
  IID_IBPNatureCompte: TGUID = '{838ED02B-7688-430E-BDAC-C659E326FE95}';
  IID_IBPNatureCompteFactory: TGUID = '{B6942D0F-D5E1-41F7-8B80-674F0FD31172}';
  IID_IBPNatureCompteDet: TGUID = '{2D4C8625-1C83-4E1C-9B25-67E86ED2CD7E}';
  IID_IBPNatureCompteDetFactory: TGUID = '{FC127295-7674-4D27-B7D6-DE8CE60AC5EA}';
  IID_IBOTiersBanque3: TGUID = '{3AA5D2A8-7452-47AC-B0EF-D73BE63B757F}';
  IID_IBOJournal3: TGUID = '{1837F306-0725-455A-8C15-1EC716483DDC}';
  IID_IBOJournalFactory3: TGUID = '{D117B205-3ECD-47C6-BDEB-FBA2CA55B484}';
  IID_IBOModeleReglement: TGUID = '{CE004984-85E4-4CFF-9C59-94F7A2F64DB1}';
  IID_IBOModeleReglementFactory: TGUID = '{FEC25A08-6DB9-4A35-B6AC-3B8A385B7EAC}';
  IID_IBOFournisseurFactory3: TGUID = '{DCA2B175-C276-4507-B8C8-957D9C926ECA}';
  IID_IBOFournisseurTarifFactory3: TGUID = '{A215FD6B-A2D8-47D1-AE4F-40607DC18914}';
  IID_IBIArticleTarif3: TGUID = '{C83AA501-A86D-4013-9604-DB7A80CFC893}';
  IID_IBOArticleTarifFournisseur3: TGUID = '{0717F9A2-9759-4C9E-9F7B-1B4F14DEDCD9}';
  IID_IBPGamme: TGUID = '{A8D210EC-F571-4A8E-A8EA-3321FC63CEA4}';
  IID_IBPGammeFactory: TGUID = '{9B668A94-4D86-4F0E-B090-78BEE0D375C6}';
  IID_IBPExpedition3: TGUID = '{24446917-6395-47E7-AB91-3AC9EAF0EBCB}';
  IID_IBPExpeditionFactory3: TGUID = '{06CAA04C-B790-4499-B2E6-D406B5436AC5}';
  IID_IBPConditionLivraison: TGUID = '{1810CC00-BD69-4636-879F-6D8721659B26}';
  IID_IBPConditionLivraisonFactory: TGUID = '{332BD75D-11D5-4EAC-97D0-317C5A870C92}';
  IID_IBOFournisseurTarifFamilleFactory: TGUID = '{E475E6B5-3557-4AC7-ABAD-08D18EE1C85F}';
  IID_IBIFamilleTarif: TGUID = '{37E54430-C444-4A17-BE0A-33BB1D7501E4}';
  IID_IBOFamilleTarifFournisseur: TGUID = '{21B9B379-C74C-43C1-94A1-CA84B97CFC85}';
  IID_IBOArticleGlossaireFactory2: TGUID = '{3D4D334C-0678-49C3-8387-C57A62BEAE19}';
  IID_IBOGlossaire2: TGUID = '{FF14BB30-6D4C-47D2-8580-1A4F453FB1B3}';
  IID_IBOGlossaireFactory: TGUID = '{D11C2E26-63C5-4C3E-A709-02C87420B297}';
  IID_IBOArticleParamComptaFactory3: TGUID = '{A4EABB4A-6694-424D-841F-F835740942AF}';
  IID_IBIParamCompta3: TGUID = '{265553D6-F316-44CF-9A43-B03A3FC11227}';
  IID_IBOArticleParamCompta3: TGUID = '{AE8D2D0A-1E07-4E40-9C49-6749CE488E40}';
  IID_IBOArticleDepotFactory: TGUID = '{D3A62EEB-4AD8-405B-81B8-1E405B2A3388}';
  IID_IBIArticleStock3: TGUID = '{7CE6D0E2-0CD6-4E2E-8FE7-6AC17BF6C22B}';
  IID_IBOArticleDepot3: TGUID = '{2F5884FD-3A5E-4729-B00D-E801A252F938}';
  IID_IBIArticleStockEmplFactory: TGUID = '{15BEC968-6889-4E2D-99E7-6F16FCE810C2}';
  IID_IBIArticleStockEmpl: TGUID = '{CC7A5597-5EBF-4F1E-9297-1AD17CEA6469}';
  IID_IBOArticleDepotGammeFactory: TGUID = '{42612014-B818-4C79-8148-6B5865839427}';
  IID_IBOArticleGammeEnum3: TGUID = '{7B4F4FD4-510E-41E2-AB40-8675514BD227}';
  IID_IBOArticleDepotGamme3: TGUID = '{B45B336F-48B6-4667-BB61-4073BAB2396B}';
  IID_IBOArticleDepotLotFactory: TGUID = '{7D19DF66-979C-4941-A44C-1781EF1169D6}';
  IID_IBILot: TGUID = '{8F0A81DA-61F3-4E59-A517-711854C64094}';
  IID_IBOArticleDepotLot: TGUID = '{0FBEB56F-ECB1-4620-9121-7A9A19E6CA66}';
  IID_IBOArticleGammeEnumFactory: TGUID = '{D6B92633-1367-4753-BFD4-EC95C08D985D}';
  IID_IBOArticleCondFactory: TGUID = '{2A9626FB-6EB3-4F95-82BB-307CD430E9E9}';
  IID_IBOArticleCond3: TGUID = '{35A9D616-54B7-4A6B-A996-0E49C819430C}';
  IID_IBPConditionnement: TGUID = '{E88BF6B0-535D-4FF8-948C-31D1F061072D}';
  IID_IBPConditionnementFactory: TGUID = '{33DE9AD6-4F3F-4781-84C6-9821A23A3D5E}';
  IID_IBPCategorieTarif: TGUID = '{6C6002FD-4AD8-46AF-A50E-4D177150BDDA}';
  IID_IBPCategorieTarifFactory: TGUID = '{F1EC90B6-225B-4702-9A4C-73F56F0E13A7}';
  IID_IBOClient3: TGUID = '{00BD75EA-A70E-4D59-AA1F-4B7ED4CD130B}';
  IID_IBOClientFactory3: TGUID = '{6BB5E17E-287A-4B68-A365-EF1FAA811446}';
  IID_IBOClientTarifFactory3: TGUID = '{FA817628-4F1D-4710-AA2E-47449BA5FED8}';
  IID_IBIArticleTarifVente3: TGUID = '{C1B065CF-2E61-43EA-B73B-EF938F600ADC}';
  IID_IBOArticleTarifClient3: TGUID = '{59A52885-1DC4-4C57-85CD-E141875617F7}';
  IID_IBPArrondi: TGUID = '{DD4B3B8D-BF13-45B6-BC00-D9967EFE6436}';
  IID_IBPCodeRisque: TGUID = '{909942C0-ED30-41EA-9978-84EA9C00ABC2}';
  IID_IBPCodeRisqueFactory: TGUID = '{1E96E46F-32F3-4768-8858-69D5B15A4542}';
  IID_IBPPeriodicite: TGUID = '{2C9D5C91-300E-43CD-ACAD-804B92F42A66}';
  IID_IBPPeriodiciteFactory: TGUID = '{1AB0F29D-8A10-4039-98B6-7200B2298586}';
  IID_IBOClientLivraison3: TGUID = '{6F9CCCB6-C31A-4AF4-9D3C-8EEAD54DB697}';
  IID_IBOClientTarifFamilleFactory: TGUID = '{BDD6E49E-B5B4-42A6-BE56-60A4291A968D}';
  IID_IBIFamilleTarifVente: TGUID = '{B7F0BEA4-EFDF-4B4B-A85E-0B8DE3287753}';
  IID_IBOFamilleTarifClient: TGUID = '{431AE828-CED0-43E6-A464-69428A50272A}';
  IID_IBOProspectFactory: TGUID = '{2E4FEA2D-6AD0-41DB-BA80-9A730DB6CE09}';
  IID_IBOClientProspectFactory: TGUID = '{9E18E5C3-44CE-4C53-947C-279492FCDF1E}';
  IID_IBOInfoComplementClientFactory: TGUID = '{FE6F4A20-68F5-4C72-A6D3-1D2BEEB7D558}';
  IID_IBOInfoComplementClient: TGUID = '{76728E2D-42B7-4556-AFED-3267AE20D326}';
  IID_IBIRessource: TGUID = '{ADAB67DA-15B9-41FC-A28E-9B9154D761F0}';
  IID_IBIRessourceFactory: TGUID = '{0BCE62DD-2E2C-42E1-80C3-077DBB162749}';
  IID_IBIRessourceArticleFactory: TGUID = '{8BF73CA8-6C4E-4934-BF6D-DC63DD7FB254}';
  IID_IBIRessourceRessourceFactory: TGUID = '{08ACED6A-5D87-4604-9C9A-30B316F9CB89}';
  IID_IDateTimePeriod: TGUID = '{4A394899-F9AD-47FF-96DB-590CC19411BB}';
  IID_IBOArticleRessourceFactory: TGUID = '{3BE1AD20-A5F5-47E6-957D-9D4C78CF5CFC}';
  IID_ITransformationAchat: TGUID = '{ABA54143-C289-4EBD-AC4C-9CCBFF9DE305}';
  IID_IBIContact2: TGUID = '{FAE14E25-D9B3-49D6-A51A-868E34BE6F50}';
  IID_IBPServiceContact: TGUID = '{58F758D4-A72D-4C48-9CBC-A82ADCF59AD3}';
  IID_IBPServiceContactFactory: TGUID = '{C38740BB-7FBD-4EF4-817F-C0DD006A3A6A}';
  IID_IBPContact: TGUID = '{B97C4265-FF1E-41C4-9799-2E8B8ECE855F}';
  IID_IBPContactFactory: TGUID = '{681E84FA-57F9-45D6-A209-D72BD027AFFD}';
  IID_IBIArticleTarifGamme3: TGUID = '{F78AAF69-F2DF-4563-B9F2-538B1F75A8BE}';
  IID_IBIArticleTarifQte3: TGUID = '{3A83C2D4-7C03-4829-8B17-A35F3A6AA306}';
  IID_IBIArticleTarifCond3: TGUID = '{BC6D3A0F-C03E-46BC-968C-F6B61F8C0CF8}';
  IID_IBIFamilleTarifQte: TGUID = '{423BBF33-D7A9-4E38-95F9-D11AAEA8D92B}';
  IID_IBIReglement: TGUID = '{B98A6894-49A1-4D62-AA03-4352DEE1556D}';
  IID_IBPReglement3: TGUID = '{89BD76D6-0C06-4933-8010-9E694D32E23A}';
  IID_IBPReglementFactory3: TGUID = '{56E45C6A-A97E-48CA-8EE7-2B6D75D380DC}';
  IID_IBIParamDoc: TGUID = '{E145D57A-3141-4B3D-82BA-698E74C345CF}';
  IID_IDossierExercice: TGUID = '{13101937-F270-4381-8267-FF945752F147}';
  IID_IDossierExerciceReportANouveaux: TGUID = '{0720550E-B038-4F30-94FE-2C36B38F1015}';
  IID_IDossierExerciceReportANouveauxIFRS: TGUID = '{F5B9C88D-6B51-4965-B923-ECC2BA1B9445}';
  IID_IDossierTiers: TGUID = '{0D1D5B2E-39DD-4F18-B6F9-8441CEC6FC71}';
  IID_IBOClientLivraisonAllFactory: TGUID = '{E2089F5D-CF35-430C-B7AB-EEE33F63FC20}';
  IID_IRegistreRevision: TGUID = '{9F944E43-9415-408E-9CE1-28BD57964581}';
  IID_IRegistreTaxes: TGUID = '{A701965F-758D-4805-AC6C-AC88E0F1CB2D}';
  IID_IRegistreLigneTaxe: TGUID = '{EF645EEC-797D-494D-A6A3-F063498129BA}';
  IID_IBSCPTAApplication3: TGUID = '{B1746B73-A714-4275-8E61-BC4AB1B77BE0}';
  IID_ILicence: TGUID = '{A3174C49-1613-4E29-8829-E9D73DD3085A}';
  IID_ILicenceProduct: TGUID = '{70453D27-A5E7-41FB-8673-F41ECE54DAE6}';
  IID_ILicenceUserInfo: TGUID = '{DBEC83FF-AD37-40EC-BC80-DFB9A1A6C96B}';
  IID_ILicenceProducts: TGUID = '{F17E2AE1-5F9F-4CE1-AE6D-A84885C5F848}';
  IID_IBILoggable: TGUID = '{08B40F4E-D3D6-4546-AF3E-F386929F1F39}';
  IID_IBOTiersAutreFactory2: TGUID = '{51DACD11-D4DB-406F-8EDC-EE01A4DC20D2}';
  IID_IBOTiersSalarieFactory2: TGUID = '{E7DA8EAD-5ABE-416B-A688-3702DF85B8C3}';
  IID_IBOEcritureFactory3: TGUID = '{80BB0BCE-D3A5-465E-A88B-3D4B97CCC836}';
  IID_IBOEcriture3: TGUID = '{B7CB9E3C-FD42-4F46-9893-9E27B34C8B17}';
  IID_IBOEcritureAFactory2: TGUID = '{4DB1212D-1E51-4E42-A13D-3EA526FF4907}';
  IID_IBonAPayer: TGUID = '{186C0C24-47B7-468C-B7A9-BE00BE68C1CA}';
  IID_IBODossierContactFactory2: TGUID = '{D1B37523-CA98-4C53-9002-14C5C02DB2F3}';
  IID_IBODossierContact3: TGUID = '{F4DDFA25-7D82-47A6-A54A-EDC422FEC76D}';
  IID_IBOModeleEcritureFactory2: TGUID = '{FCA4724C-21EE-43DD-89DA-BD424957D8A1}';
  IID_IBOModeleEcriture3: TGUID = '{F60A3CEB-E9FE-444B-B6E3-860F8C663497}';
  IID_IBPRappelFactory: TGUID = '{A8ABA975-4096-48B6-9D17-BB567EF59ACB}';
  IID_IBPRappel: TGUID = '{1214E7B0-99C7-49AE-AAB7-7692DEC498DC}';
  IID_IBPTiersStatFactory: TGUID = '{FBB89C2B-316F-45CA-997A-E4A0492EC64B}';
  IID_IBPTiersStat: TGUID = '{8B292D79-32B2-4245-BAFE-D0E6FB87C9F1}';
  IID_IBOModeleGrilleFactory: TGUID = '{458C0B28-25F9-4C8B-B073-36F2E5376558}';
  IID_IBOModeleGrille: TGUID = '{E2155282-6020-4C72-B7D0-9EEBAFAB602C}';
  IID_IBOModeleGrilleLigneFactory: TGUID = '{4FBB9839-33B4-4C0C-B9ED-04773DFA472B}';
  IID_IBPTiersFactory: TGUID = '{A40A34F1-9B69-4A46-AB90-E7ED9FA58129}';
  IID_IBPTiers: TGUID = '{3DA85DBC-0497-43C5-91D2-EB4F39EF5CDC}';
  IID_IPMEncoder: TGUID = '{356BB216-94EE-4357-9148-EDB271166D41}';
  IID_IBOBanqueFactory: TGUID = '{09DE9B82-23C4-49F3-87CB-A0D0381584AC}';
  IID_IBOBanque: TGUID = '{105B22E1-1E39-4E1C-9882-C6DBE95F8456}';
  IID_IBOBanqueRibFactory: TGUID = '{88C7D8E1-940D-44FA-B347-B3D5E54BFF06}';
  IID_IBOBanqueRib: TGUID = '{9F917752-EA5C-40AE-AD02-4BC192B64A56}';
  IID_IBPStructBanqueFactory: TGUID = '{8259C696-BE45-44EA-81EE-8AE0223AB61A}';
  IID_IBPStructBanque: TGUID = '{46BB94A9-F5A6-442D-8C5B-42D1CF3F5BA0}';
  IID_IPMLettrer: TGUID = '{10EF176B-FC21-452C-93CA-E328D7526A16}';
  IID_IBOPaysFactory: TGUID = '{E9771CF3-E87A-497B-9C1C-8F323069758D}';
  IID_IBOPays: TGUID = '{9FB3E9A1-4853-4B1D-BEC3-4A1AC48EEB19}';
  IID_IBOCompteRFactory: TGUID = '{527CFDFC-A4F2-413A-9897-23B2F7C1A6D6}';
  IID_IBOEcritureAAllFactory: TGUID = '{1D871194-8500-46AB-924C-9B2548EBE099}';
  IID_IBOJournalAFactory: TGUID = '{6F95DCED-011E-4F1A-8284-BACBA5526DEE}';
  IID_IBOJournalA: TGUID = '{DC770506-F0B8-4523-9702-ABC21F060C0B}';
  IID_IBOEcritureODFactory: TGUID = '{51B2C00F-C2E3-4846-A57E-0554CAFAF01D}';
  IID_ICompanies: TGUID = '{D7155186-A152-452F-8D3F-5E7D0E838CF2}';
  IID_ICompany: TGUID = '{37A95BCE-A845-4557-B607-2997600DCA2C}';
  IID_IPMBonAPayer: TGUID = '{420F35AA-D2F0-4E1D-BAE1-E754AF5FD960}';
  IID_IBSCIALApplication3: TGUID = '{3FBE6898-EBB1-4D11-B5FF-09AE5301973B}';
  IID_IBPCategorieComptaVenteFactory: TGUID = '{E1F2CBDB-6CF9-4A33-A007-3E0FE21496B7}';
  IID_IBPCategorieComptaVente: TGUID = '{3D471238-B9A3-4593-B33F-D0D9F38EBFAF}';
  IID_IBPCategorieComptaAchatFactory: TGUID = '{266979EE-CBF1-4268-A9F6-4B409EFC0A71}';
  IID_IBPCategorieComptaAchat: TGUID = '{49897345-3D8F-4F09-99C7-CCBFD73969C9}';
  IID_IBPCategorieComptaStockFactory: TGUID = '{EC38C20D-EE75-4087-B42B-09FF3EE8AE43}';
  IID_IBPCategorieComptaStock: TGUID = '{892665D1-CA5A-40FD-A33B-C17B150C20DD}';
  IID_IBODocumentStockFactory3: TGUID = '{DD1ADDDD-EDDF-4FB5-A614-7BF54A5E9198}';
  IID_IBODocumentStock3: TGUID = '{D53827CA-0296-4948-AD6C-3C334145FDBD}';
  IID_IBODocumentAchatFactory3: TGUID = '{17DB8F80-222C-49EA-9424-53620A49EF4A}';
  IID_IBODocumentPart3: TGUID = '{589F1EF5-419A-46BB-BA5E-EE64B9FD1E39}';
  IID_IBODocumentAchat3: TGUID = '{A7E0B84E-3FE1-4190-9BC4-D9C92EE6D1D0}';
  IID_IBODocumentVenteFactory3: TGUID = '{E79A30D6-C657-4190-A3EB-BD04C8B48310}';
  IID_IBODocumentVente3: TGUID = '{85C765D6-E89D-4F0F-BB30-D49EB3A97660}';
  IID_IBPMotifDevis: TGUID = '{676595F6-BC67-40E9-AAE2-D1D27A85FCCD}';
  IID_IBPMotifDevisFactory: TGUID = '{23E01CDB-AF39-438A-8040-40141C445716}';
  IID_IBOInfoComplementEnteteFactory: TGUID = '{1056CEE3-ACC7-4381-B4CB-C15021766C15}';
  IID_IBOInfoComplementEntete: TGUID = '{7B6C6B17-BC01-4B0D-87AA-DEE6869A4F8F}';
  IID_IBODocumentInterneFactory3: TGUID = '{D8C4D565-F813-4DCD-A57A-87B9033B8174}';
  IID_IBODocumentInterne3: TGUID = '{7767F876-4462-45C7-84F6-6F6A28B347DA}';
  IID_IBISoucheFactory: TGUID = '{9E13020C-7A1B-4696-9CB8-CCB24B4CC2CD}';
  IID_IBIParamDocFactory: TGUID = '{F11ADFA4-73B9-4DB2-BB5C-7AB2485DCA7B}';
  IID_IBOBaremeCommissionFactory: TGUID = '{0B7E40B4-FDE0-4513-955F-AF64B3C24863}';
  IID_IBOBaremeCommission: TGUID = '{58690C03-8166-406A-920B-A3BE8A726585}';
  IID_IBOBaremeRabaisFactory: TGUID = '{F54C7FDE-C060-4583-BACC-5590E613993C}';
  IID_IBOBaremeRabais: TGUID = '{61F8D58F-51E5-4B50-8D34-542D2FD72883}';
  IID_IBPArticleStatFactory: TGUID = '{E8A78219-AC9D-4DDD-9E6D-D7C930F51A8D}';
  IID_IBPArticleStat: TGUID = '{24ADFA38-BC1F-4932-9565-470BA40243AF}';
  IID_IBPAgendaFactory: TGUID = '{C2534118-2BAB-47FA-8CF1-A40A9D587D33}';
  IID_IBPAgenda: TGUID = '{9DD61766-76EA-4C2D-8137-FAA080DB0F8A}';
  IID_IPMDocument: TGUID = '{4B1DFF26-1018-4458-9499-C4B84FC548B2}';
  IID_IPMAppliquerBareme: TGUID = '{791D12AB-8EAA-4BDA-971C-A04BC9326C48}';
  IID_IPMControlerQualite: TGUID = '{42F7A6E0-7123-434D-B9B8-28F081E90D04}';
  IID_IBODocumentLigneEmplacement: TGUID = '{668D2238-E763-4F38-8FD3-8B88C136B993}';
  IID_IPMControlerQualiteInfo: TGUID = '{0D937022-1A73-4627-B25C-B3BEC99804BF}';
  IID_IBODocumentLigneAllFactory: TGUID = '{06FEC9B3-6529-44C5-9EFA-23D1A8B9E85D}';
  IID_IBOAgendaFactory: TGUID = '{A9348A89-02D7-49DB-A006-61906BB23186}';
  IID_IBORessourceFactory: TGUID = '{CBFCC45C-78A9-4F00-AADD-AA7E7FF7DF57}';
  IID_IBORessource: TGUID = '{677C7E65-047F-4147-A575-9950816E45C2}';
  IID_IBORessourceCentreFactory: TGUID = '{C4F1A288-C230-49E7-AD37-298A071E7636}';
  IID_IBORessourceCentre: TGUID = '{F5D3BB4D-6691-4F6F-AF87-949A9EEEADDE}';
  IID_IControleQualiteStat: TGUID = '{14E6E6E2-D4D5-44B4-A841-87AD58F62118}';
  IID_IPMColiser: TGUID = '{A2D16FA5-8783-4397-9E8B-0736A97CA36F}';
  IID_IBODocumentPartLigne3: TGUID = '{96BCA363-6B12-4DB8-A50D-8692B6F66BBC}';
  IID_IBODocumentVenteLigne3: TGUID = '{5BA16B17-24FF-4FAA-BD06-D014D625E0C6}';
  IID_IBOInfoComplementDocligneFactory: TGUID = '{16A87393-CBB3-48B9-8D49-6F6FD93A4EFA}';
  IID_IBOInfoComplementDocligne: TGUID = '{D1E80162-AFAF-4F0A-9386-AE7B2EE3AA29}';
  IID_IPMPreleverLot: TGUID = '{8A2F1F8F-5A2F-4C8F-A683-7759D2E4C2A8}';
  IID_IPMDocTransferer: TGUID = '{986E664D-F4E2-4FFC-BC6A-C0747BA72BF0}';
  IID_IBOArticleDepotLotAllFactory: TGUID = '{CD93656D-E510-48EA-ABBD-0C5E39D72F8D}';
  IID_IPMDocInsererSousTotal: TGUID = '{41D5325D-174A-400E-A51A-A35E1A753086}';
  IID_IPMDocRecalculPrixCompose: TGUID = '{EBE47850-78B8-47EF-91BC-57E8CE1865BD}';
  IID_IPMSortirLots: TGUID = '{405385B1-E81A-4AAA-A887-6D4A5C37959B}';
  IID_IPMConversionClient: TGUID = '{C12C4498-BB23-4378-A10D-7D4A8CE9DDEC}';
  IID_IBODocumentReglementFactory: TGUID = '{EB19CC7E-33BD-475F-8956-4499A8465451}';
  IID_IPMReglerEcheances: TGUID = '{5859AE07-B026-4F02-8B59-05B0335D85D8}';
  IID_IBODocumentReglement: TGUID = '{592FBBA8-94E5-4388-B973-4F1FA16FC3B0}';
  IID_IBODocumentReglementEcheanceEcheanceFactory: TGUID = '{CD205E19-8AFE-4463-BBE3-612352A0B748}';
  IID_IBODocumentEcheance3: TGUID = '{CEA4D379-037A-4085-8DA9-B53C1B7FB30E}';
  IID_IBODocumentReglementEcheanceReglementFactory: TGUID = '{532E9BB3-8DB6-41F4-8347-15E50D9F15FF}';
  IID_IBODocumentReglementEcheance: TGUID = '{DBE7E4FD-EA13-467B-B253-A5416401A37B}';
  IID_IBPConditionnementEnum: TGUID = '{19135D34-742C-4715-9200-2B7F5CF89770}';
  IID_IBPDossier2: TGUID = '{A5202655-3815-4EC7-BFD1-5D9F6C7DD656}';
  IID_IBPSoucheVente: TGUID = '{F421273D-939C-4E59-9585-0471D6814506}';
  IID_IBPSoucheAchat: TGUID = '{DD7ED7B5-8337-4443-A258-CD14BC624221}';
  IID_IBPParamDocInterne: TGUID = '{D765AB8F-E436-47FA-84E8-C997DC6B671A}';
  IID_IBPDossierCial: TGUID = '{A89B56F5-26F8-4A6E-8A14-76AA6560F759}';
  IID_IBPDossierParamCial: TGUID = '{9AF841CA-59E6-4EAC-95B7-B9B8F48A3EE7}';
  IID_IBPLibelleCpta: TGUID = '{041ADEC3-DB1F-4CCD-BB99-A4970EFC0DE9}';
  IID_IBOTiersReglement3: TGUID = '{DCE180EC-1F59-47C0-AAE7-56C2A1CEC8DE}';
  IID_IBOTiersContact3: TGUID = '{AA5F6996-2DAE-4E36-9A51-26BFD1457CB9}';
  IID_IBOTiersMedia3: TGUID = '{1A5D8A40-515B-47E1-A6BD-D7F5822484F5}';
  IID_IBOEcritureA3: TGUID = '{070D4C75-2DD3-4D5D-A286-86093425C9CF}';
  IID_IBOArticleTarifQteFournisseur3: TGUID = '{3B9E7020-62B3-4A9E-9B17-F646A2B2588B}';
  IID_IBOArticleTarifGammeFournisseur3: TGUID = '{ADD705FD-9C81-492E-BD20-A38B5B05101E}';
  IID_IBOArticleMedia3: TGUID = '{D930E138-156E-4DFA-92F8-42A986242C6D}';
  IID_IBOArticleGammeEnumRef3: TGUID = '{9295FEC0-B808-492D-A768-0207A1364732}';
  IID_IBOArticleNomenclature3: TGUID = '{2D056C64-66BA-453E-A0ED-EC5DB6FFC189}';
  IID_IBOArticleTarifQteClient3: TGUID = '{91F61DDA-99C3-4DAD-86BE-4F630F9FCB3B}';
  IID_IBOArticleTarifCondClient3: TGUID = '{7C538B42-6E4C-4021-AE5B-25D4BD133FE5}';
  IID_IBOArticleTarifGammeClient3: TGUID = '{1F28C5A0-214C-4D9D-A889-28D13271889E}';
  IID_IBOArticleTarifCategorie3: TGUID = '{CD62459C-9BBB-4CC1-8E15-5124022916B9}';
  IID_IBOArticleTarifQteCategorie3: TGUID = '{15AAEFA4-1358-4005-8CBB-4E2386E1801E}';
  IID_IBOArticleTarifCondCategorie3: TGUID = '{3A3278F2-42EC-4601-9DD1-02C93112E872}';
  IID_IBOArticleTarifGammeCategorie3: TGUID = '{425F2822-D9A5-4E58-97B4-81495E9744A4}';
  IID_IBOFamilleParamCompta3: TGUID = '{296446E4-C983-4082-B6E3-E9AF2555F92A}';
  IID_IBODepotContact3: TGUID = '{2ED3CFC4-616F-44C2-829F-5DE7BDD3A040}';
  IID_IBODocumentLigneLienCM: TGUID = '{5801365B-8A41-40CE-A251-1DC6A24346BE}';
  IID_IBODocumentStockLigne3: TGUID = '{91CC00D3-8F8A-41ED-8F98-1B5AFB96CD7F}';
  IID_IBODocumentAcompte3: TGUID = '{6703E377-CF13-4F07-8675-FBEF6D668F46}';
  IID_IBODocumentAchatLigne3: TGUID = '{B8FCBA5A-B91C-469A-8FE3-3BA2A3D59275}';
  IID_IBODocumentInterneLigne3: TGUID = '{5CECD75E-537E-421D-B851-BB0EEA6C0E09}';
  IID_IBOModeleEcritureLigne3: TGUID = '{4792B8D7-633B-4133-8002-B9BB0DF4BD95}';
  IID_IBOModeleEcritureLigneA3: TGUID = '{6CFCA978-7FC5-41C1-97CA-79AF7F74B12F}';
  IID_IBOFamilleTarifCategorie: TGUID = '{6F3F0DB1-7921-45AC-B002-23AED4EA291C}';
  IID_IBOFamilleTarifQteCategorie: TGUID = '{5CFDB24E-7FB9-48FA-A4C8-F3670D80DD99}';
  IID_IBOFamilleTarifQteFournisseur: TGUID = '{B0E09EDC-DB04-4F0A-9AB4-1BB575D41C88}';
  IID_IBOModeleGrilleLigne: TGUID = '{7B17FAE8-DABF-4CFB-9567-B3BEDCED138E}';
  IID_IBOModeleReglementLigne: TGUID = '{37820001-5870-449F-981C-1BDF4C12F35A}';
  IID_IBOBaremeCommissionQte: TGUID = '{89E28BE1-2A85-460A-97DE-925D385DDB03}';
  IID_IBOBaremeRabaisQte: TGUID = '{C5223E93-5506-413B-8993-6BEAB4551E58}';
  IID_IBOEcritureMedia: TGUID = '{45D795D8-23CD-4530-BECB-BEB548FD788F}';
  IID_IBOBanqueContact: TGUID = '{72B11AB9-C89B-4764-8219-5E486D12B678}';
  IID_IBOCompteAContact: TGUID = '{29AD8292-C9B8-4FD5-8D7A-83F7D772395D}';
  IID_IBOCompteAMedia: TGUID = '{652D08CE-08D6-4799-B54B-8D65812DD776}';
  IID_IBOEcritureOD: TGUID = '{1502538D-5FF2-4771-A5CE-F767C839A0F9}';
  IID_IBODocumentMedia: TGUID = '{7176322D-DEE2-4535-BE67-6E60F46C948F}';
  IID_IBPBonAPayer: TGUID = '{6387187C-D5B6-40A7-AF5C-78275D75C255}';
  IID_IBOAgenda: TGUID = '{C0B75F00-3BAA-4943-9DCC-630A85D6B226}';
  IID_IUserLot: TGUID = '{2960B194-C946-4357-800D-9B2D21438256}';
  IID_IUserEmplacement: TGUID = '{2477FBD0-0291-4223-B866-F4AB8182153D}';
  IID_IUserColis: TGUID = '{B879AC0E-A9C4-410A-B9F2-B8781FFF523C}';
  CLASS_BSCPTAApplication100c: TGUID = '{309DE0FB-9FB8-4F4E-8295-CC60C60DAA33}';
  CLASS_BSCIALApplication100c: TGUID = '{ED0EC116-16B8-44CC-A68A-41BF6E15EB3F}';

// *********************************************************************//
// Déclaration d'énumérations définies dans la bibliothèque de types                    
// *********************************************************************//
// Constantes pour enum ePredicateType
type
  ePredicateType = TOleEnum;
const
  PredicateTypeValue = $00000000;
  PredicateTypeComparison = $00000001;
  PredicateTypeCompound = $00000002;

// Constantes pour enum ePredicateTypeComparison
type
  ePredicateTypeComparison = TOleEnum;
const
  PredicateTypeComparisonLesser = $00000000;
  PredicateTypeComparisonLesserEqual = $00000001;
  PredicateTypeComparisonGreater = $00000002;
  PredicateTypeComparisonGreaterEqual = $00000003;
  PredicateTypeComparisonEqual = $00000004;
  PredicateTypeComparisonNotEqual = $00000005;
  PredicateTypeComparisonLike = $00000006;
  PredicateTypeComparisonBegins = $00000007;
  PredicateTypeComparisonEnds = $00000008;
  PredicateTypeComparisonIn = $00000009;
  PredicateTypeComparisonContains = $0000000A;
  PredicateTypeComparisonBetween = $0000000B;

// Constantes pour enum ePredicateTypeCompound
type
  ePredicateTypeCompound = TOleEnum;
const
  PredicateTypeCompoundAnd = $00000000;
  PredicateTypeCompoundOr = $00000001;
  PredicateTypeCompoundNot = $00000002;

// Constantes pour enum ArrondiType
type
  ArrondiType = TOleEnum;
const
  ArrondiTypeProche = $00000000;
  ArrondiTypeSup = $00000001;
  ArrondiTypeInf = $00000002;
  ArrondiTypeFinProche = $00000003;
  ArrondiTypeFinSup = $00000004;
  ArrondiTypeFinInf = $00000005;

// Constantes pour enum SynchroExtractType
type
  SynchroExtractType = TOleEnum;
const
  SynchroTypeExtractNew = $00000000;
  SynchroTypeExtractSended = $00000001;
  SynchroTypeExtractNewAndSended = $00000002;
  SynchroTypeExtractAll = $00000003;

// Constantes pour enum DatabaseType
type
  DatabaseType = TOleEnum;
const
  DatabaseTypeNone = $00000000;
  DatabaseTypeSqlServer = $00000001;
  DatabaseTypeSageSql = $00000002;

// Constantes pour enum DomaineType
type
  DomaineType = TOleEnum;
const
  DomaineTypeVente = $00000000;
  DomaineTypeAchat = $00000001;
  DomaineTypeStock = $00000002;
  DomaineTypeTicket = $00000003;
  DomaineTypeInterne = $00000004;

// Constantes pour enum RemiseType
type
  RemiseType = TOleEnum;
const
  RemiseTypeMontant = $00000000;
  RemiseTypePourcent = $00000001;
  RemiseTypeUnite = $00000002;

// Constantes pour enum DeviseMode
type
  DeviseMode = TOleEnum;
const
  DeviseModeCertain = $00000000;
  DeviseModeIncertain = $00000001;

// Constantes pour enum DeviseRemise
type
  DeviseRemise = TOleEnum;
const
  DeviseRemiseAucun = $00000000;
  DeviseRemiseBlanc = $00000001;
  DeviseRemiseFranc = $00000002;
  DeviseRemiseEuro = $00000003;

// Constantes pour enum AnalytiqueRuptureType
type
  AnalytiqueRuptureType = TOleEnum;
const
  AnalytiqueRuptureTypeAucun = $00000000;
  AnalytiqueRuptureTypeZoneGeographique = $00000001;
  AnalytiqueRuptureTypeSecteurActivite = $00000002;

// Constantes pour enum FieldType
type
  FieldType = TOleEnum;
const
  FieldTypeShort = $00000000;
  FieldTypeLong = $00000001;
  FieldTypeDate = $00000002;
  FieldTypeChar = $00000003;
  FieldTypeByte = $00000004;
  FieldTypeFloat = $00000005;
  FieldTypeDouble = $00000006;
  FieldTypePStr = $00000007;
  FieldTypeCStr = $00000008;
  FieldTypeChaine = $00000009;
  FieldTypeStruct = $0000000A;
  FieldTypeNumStr = $0000000B;
  FieldTypeCptStr = $0000000C;
  FieldTypeLDate = $0000000D;
  FieldTypeTime = $0000000E;
  FieldTypeConstante = $0000000F;
  FieldTypePwdStr = $00000010;
  FieldTypeUShort = $00000011;
  FieldTypeULong = $00000012;
  FieldTypeMontant = $00000013;
  FieldTypePath = $00000014;
  FieldTypeTable = $00000015;

// Constantes pour enum eTypeInfoLibre
type
  eTypeInfoLibre = TOleEnum;
const
  eTIL_DATE = $00000000;
  eTIL_DOUBLE = $00000001;
  eTIL_CSTR = $00000002;
  eTIL_LDATE = $00000003;
  eTIL_MONTANT = $00000004;
  eTIL_TABLE = $00000005;

// Constantes pour enum DocumentType
type
  DocumentType = TOleEnum;
const
  DocumentTypeVenteDevis = $00000000;
  DocumentTypeVenteCommande = $0000000A;
  DocumentTypeVentePrepaLivraison = $00000014;
  DocumentTypeVenteLivraison = $0000001E;
  DocumentTypeVenteReprise = $00000028;
  DocumentTypeVenteAvoir = $00000032;
  DocumentTypeVenteFacture = $0000003C;
  DocumentTypeVenteFactureCpta = $00000046;
  DocumentTypeVenteArchive = $00000050;
  DocumentTypeAchatCommande = $00000064;
  DocumentTypeAchatCommandeConf = $0000006E;
  DocumentTypeAchatLivraison = $00000078;
  DocumentTypeAchatReprise = $00000082;
  DocumentTypeAchatAvoir = $0000008C;
  DocumentTypeAchatFacture = $00000096;
  DocumentTypeAchatFactureCpta = $000000A0;
  DocumentTypeAchatArchive = $000000AA;
  DocumentTypeStockMouvIn = $000000B4;
  DocumentTypeStockMouvOut = $000000BE;
  DocumentTypeStockDeprec = $000000C8;
  DocumentTypeStockVirement = $000000D2;
  DocumentTypeStockPreparation = $000000DC;
  DocumentTypeStockOrdreFabrication = $000000E6;
  DocumentTypeStockFabrication = $000000F0;
  DocumentTypeStockArchive = $000000FA;
  DocumentTypeInterne1 = $0000010E;
  DocumentTypeInterne2 = $00000118;
  DocumentTypeInterne3 = $00000122;
  DocumentTypeInterne4 = $0000012C;
  DocumentTypeInterne5 = $00000136;
  DocumentTypeInterne6 = $00000140;
  DocumentTypeInterneArchive = $0000014A;
  DocumentTypeInterne7 = $00000145;
  DocumentTypeAchatDemande = $0000005A;

// Constantes pour enum DepotEmplZone
type
  DepotEmplZone = TOleEnum;
const
  DepotEmplZoneAucune = $00000000;
  DepotEmplZoneA = $00000001;
  DepotEmplZoneB = $00000002;
  DepotEmplZoneC = $00000003;

// Constantes pour enum DepotEmplType
type
  DepotEmplType = TOleEnum;
const
  DepotEmplTypeStandard = $00000000;
  DepotEmplTypeTransit = $00000001;
  DepotEmplTypeControle = $00000002;

// Constantes pour enum DocumentProvenanceType
type
  DocumentProvenanceType = TOleEnum;
const
  DocProvenanceNormale = $00000000;
  DocProvenanceRetour = $00000001;
  DocProvenanceAvoir = $00000002;
  DocProvenanceTicket = $00000003;
  DocProvenanceAcompte = $00000004;

// Constantes pour enum CompteAType
type
  CompteAType = TOleEnum;
const
  CompteATypeDetail = $00000000;
  CompteATypeTotal = $00000001;

// Constantes pour enum CompteADomaineType
type
  CompteADomaineType = TOleEnum;
const
  CompteADomaineTypeVenteAchat = $00000000;
  CompteADomaineTypeVente = $00000001;
  CompteADomaineTypeAchat = $00000002;

// Constantes pour enum CompteAStatutType
type
  CompteAStatutType = TOleEnum;
const
  CompteAStatutProposition = $00000000;
  CompteAStatutAccepte = $00000001;
  CompteAStatutPerdu = $00000002;
  CompteAStatutEnCours = $00000003;
  CompteAStatutAttente = $00000004;
  CompteAStatutTermine = $00000005;

// Constantes pour enum CompteAModeFacturationType
type
  CompteAModeFacturationType = TOleEnum;
const
  CompteAModeFacturationForfait = $00000000;
  CompteAModeFacturationAvancement = $00000001;

// Constantes pour enum FamilleType
type
  FamilleType = TOleEnum;
const
  FamilleTypeDetail = $00000000;
  FamilleTypeTotal = $00000001;
  FamilleTypeCentral = $00000002;

// Constantes pour enum UnitePlanning
type
  UnitePlanning = TOleEnum;
const
  UnitePlanningMinute = $00000000;
  UnitePlanningHeure = $00000001;
  UnitePlanningJour = $00000002;
  UnitePlanningMois = $00000003;
  UnitePlanningTrimestre = $00000004;
  UnitePlanningSemestre = $00000005;
  UnitePlanningAnnee = $00000006;

// Constantes pour enum SuiviStockType
type
  SuiviStockType = TOleEnum;
const
  SuiviStockTypeAucun = $00000000;
  SuiviStockTypeSerie = $00000001;
  SuiviStockTypeCmup = $00000002;
  SuiviStockTypeFifo = $00000003;
  SuiviStockTypeLifo = $00000004;
  SuiviStockTypeLot = $00000005;

// Constantes pour enum UnitePoidsType
type
  UnitePoidsType = TOleEnum;
const
  UnitePoidsTypeTonne = $00000000;
  UnitePoidsTypeQuintal = $00000001;
  UnitePoidsTypeKilogramme = $00000002;
  UnitePoidsTypeGramme = $00000003;
  UnitePoidsTypeMilligramme = $00000004;

// Constantes pour enum FamilleNatureType
type
  FamilleNatureType = TOleEnum;
const
  FamilleNatureTypeComposant = $00000000;
  FamilleNatureTypePieceDetachee = $00000001;
  FamilleNatureTypeProduitFini = $00000002;
  FamilleNatureTypeProduitSemiFini = $00000003;

// Constantes pour enum FamilleCriticiteType
type
  FamilleCriticiteType = TOleEnum;
const
  FamilleCriticiteTypeMineur = $00000000;
  FamilleCriticiteTypeMajeur = $00000001;
  FamilleCriticiteTypeCritique = $00000002;

// Constantes pour enum BaremeSoldeType
type
  BaremeSoldeType = TOleEnum;
const
  BaremeSoldeTypeClient = $00000000;
  BaremeSoldeTypeFournisseur = $00000001;

// Constantes pour enum TiersType
type
  TiersType = TOleEnum;
const
  TiersTypeClient = $00000000;
  TiersTypeFournisseur = $00000001;
  TiersTypeSalarie = $00000002;
  TiersTypeAutre = $00000003;

// Constantes pour enum CompteGType
type
  CompteGType = TOleEnum;
const
  CompteGTypeDetail = $00000000;
  CompteGTypeTotal = $00000001;

// Constantes pour enum CompteRType
type
  CompteRType = TOleEnum;
const
  CompteRTypeDetail = $00000000;
  CompteRTypeTotal = $00000001;

// Constantes pour enum CompteGReportType
type
  CompteGReportType = TOleEnum;
const
  CompteGReportTypeAucun = $00000000;
  CompteGReportTypeSolde = $00000001;
  CompteGReportTypeDetail = $00000002;

// Constantes pour enum TaxeTauxType
type
  TaxeTauxType = TOleEnum;
const
  TaxeTauxTypePourcent = $00000000;
  TaxeTauxTypeMontant = $00000001;
  TaxeTauxTypeQuantite = $00000002;

// Constantes pour enum TaxeType
type
  TaxeType = TOleEnum;
const
  TaxeTypeTVADebit = $00000000;
  TaxeTypeTVAEncaiss = $00000001;
  TaxeTypeTPHT = $00000002;
  TaxeTypeTPTTC = $00000003;
  TaxeTypeTPPoids = $00000004;
  TaxeTypeCEE = $00000005;
  TaxeTypeSurtaxe = $00000006;
  TaxeTypeIRPF = $00000007;
  TaxeTypeAgraire = $00000008;
  TaxeTypeIGIC = $00000009;

// Constantes pour enum TaxeSensType
type
  TaxeSensType = TOleEnum;
const
  TaxeSensTypeDeductible = $00000000;
  TaxeSensTypeCollecte = $00000001;

// Constantes pour enum TaxeProvenanceType
type
  TaxeProvenanceType = TOleEnum;
const
  TaxeProvenanceTypeNational = $00000000;
  TaxeProvenanceTypeIntracom = $00000001;
  TaxeProvenanceTypeExport = $00000002;
  TaxeProvenanceTypeDivers1 = $00000003;
  TaxeProvenanceTypeDivers2 = $00000004;
  TaxeProvenanceTypeDivers3 = $00000005;
  TaxeProvenanceTypeDivers4 = $00000006;
  TaxeProvenanceTypeDivers5 = $00000007;

// Constantes pour enum NatureCompteType
type
  NatureCompteType = TOleEnum;
const
  NatureCompteTypeClient = $00000000;
  NatureCompteTypeFournisseur = $00000001;
  NatureCompteTypeSalarie = $00000002;
  NatureCompteTypeBanque = $00000003;
  NatureCompteTypeCaisse = $00000004;
  NatureCompteTypeAmort = $00000005;
  NatureCompteTypeResBilan = $00000006;
  NatureCompteTypeCharge = $00000007;
  NatureCompteTypeProduit = $00000008;
  NatureCompteTypeResGestion = $00000009;
  NatureCompteTypeImmo = $0000000A;
  NatureCompteTypeCapitaux = $0000000B;
  NatureCompteTypeStock = $0000000C;
  NatureCompteTypeTitre = $0000000D;

// Constantes pour enum RibType
type
  RibType = TOleEnum;
const
  RibTypeLocal = $00000000;
  RibTypeAutre = $00000001;
  RibTypeBban = $00000002;
  RibTypeIban = $00000003;

// Constantes pour enum LangueType
type
  LangueType = TOleEnum;
const
  LangueTypeAucune = $00000000;
  LangueTypeLangue1 = $00000001;
  LangueTypeLangue2 = $00000002;

// Constantes pour enum JournalType
type
  JournalType = TOleEnum;
const
  JournalTypeAchat = $00000000;
  JournalTypeVente = $00000001;
  JournalTypeTresorerie = $00000002;
  JournalTypeGeneral = $00000003;
  JournalTypeSituation = $00000004;

// Constantes pour enum JournalNumPieceType
type
  JournalNumPieceType = TOleEnum;
const
  JournalNumPieceTypeManuelle = $00000000;
  JournalNumPieceTypeContJrnl = $00000001;
  JournalNumPieceTypeContFile = $00000002;
  JournalNumPieceTypeMensuelle = $00000003;

// Constantes pour enum JournalRapproType
type
  JournalRapproType = TOleEnum;
const
  JournalRapproTypeAucun = $00000000;
  JournalRapproTypeContrepartie = $00000001;
  JournalRapproTypeTresorerie = $00000002;

// Constantes pour enum PeriodClotureType
type
  PeriodClotureType = TOleEnum;
const
  PeriodClotureNone = $00000000;
  PeriodCloturePartial = $00000001;
  PeriodClotureTotal = $00000002;

// Constantes pour enum EdiCodeType
type
  EdiCodeType = TOleEnum;
const
  EdiCodeTypeGLN = $00000000;
  EdiCodeTypeDUNS = $00000001;
  EdiCodeTypeEDIFACT = $00000002;

// Constantes pour enum GammeType
type
  GammeType = TOleEnum;
const
  GammeTypeDivers = $00000000;
  GammeTypeQtes = $00000001;
  GammeTypeMontant = $00000002;
  GammeTypePrixNet = $00000003;

// Constantes pour enum DocumentFraisType
type
  DocumentFraisType = TOleEnum;
const
  DocFraisTypeForfait = $00000000;
  DocFraisTypeQuantite = $00000001;
  DocFraisTypePoidsNet = $00000002;
  DocFraisTypePoidsBrut = $00000003;
  DocFraisTypeColisage = $00000004;

// Constantes pour enum DocumentFraisCalculType
type
  DocumentFraisCalculType = TOleEnum;
const
  DocFraisCalculTypeValeur = $00000000;
  DocFraisCalculTypeGrilleFixe = $00000001;
  DocFraisCalculTypeGrilleVariable = $00000002;

// Constantes pour enum GlossaireDomaineType
type
  GlossaireDomaineType = TOleEnum;
const
  GlossaireDomaineTypeArticle = $00000000;
  GlossaireDomaineTypeDocument = $00000001;

// Constantes pour enum NomenclatureType
type
  NomenclatureType = TOleEnum;
const
  NomenclatureTypeAucun = $00000000;
  NomenclatureTypeFabrication = $00000001;
  NomenclatureTypeCompose = $00000002;
  NomenclatureTypeComposant = $00000003;
  NomenclatureTypeLies = $00000004;

// Constantes pour enum RisqueType
type
  RisqueType = TOleEnum;
const
  RisqueTypeLivrer = $00000000;
  RisqueTypeSurveiller = $00000001;
  RisqueTypeBloquer = $00000002;

// Constantes pour enum ClientEncoursCtrlType
type
  ClientEncoursCtrlType = TOleEnum;
const
  ClientEncoursCtrlTypeAuto = $00000000;
  ClientEncoursCtrlTypeCodeRisque = $00000001;
  ClientEncoursCtrlTypeBloque = $00000002;

// Constantes pour enum InfoDomaine
type
  InfoDomaine = TOleEnum;
const
  eCDI_CLIENT = $00000000;
  eCDI_ENTETE = $00000001;
  eCDI_LIGNE = $00000002;

// Constantes pour enum InfoType
type
  InfoType = TOleEnum;
const
  eCDT_TEXTE = $00000000;
  eCDT_DATE = $00000001;
  eCDT_MONTANT = $00000002;
  eCDT_VALEUR = $00000003;

// Constantes pour enum ArticleType
type
  ArticleType = TOleEnum;
const
  ArticleTypeStandard = $00000000;
  ArticleTypeGamme = $00000001;
  ArticleTypeRessourceUnitaire = $00000002;
  ArticleTypeRessourceMultiple = $00000003;

// Constantes pour enum RessourceType
type
  RessourceType = TOleEnum;
const
  RessourceTypeRessource = $00000000;
  RessourceTypeCentreCharge = $00000001;

// Constantes pour enum RessourceProdType
type
  RessourceProdType = TOleEnum;
const
  RessourceProdTypeMachine = $00000000;
  RessourceProdTypeHomme = $00000001;
  RessourceProdTypeOutil = $00000002;
  RessourceProdTypeCentral = $00000003;

// Constantes pour enum LancementType
type
  LancementType = TOleEnum;
const
  LancementTypeStandard = $00000000;
  LancementTypeSpecifique = $00000001;

// Constantes pour enum CycleType
type
  CycleType = TOleEnum;
const
  CycleTypeLancement = $00000000;
  CycleTypeMaturite = $00000001;
  CycleTypeDeclin = $00000002;

// Constantes pour enum DocumentLigneMvtStockType
type
  DocumentLigneMvtStockType = TOleEnum;
const
  DocLigneMvtStockTypeAucun = $00000000;
  DocLigneMvtStockTypeEntreeQte = $00000001;
  DocLigneMvtStockTypeEntreeValeur = $00000002;
  DocLigneMvtStockTypeSortieQte = $00000003;
  DocLigneMvtStockTypeSortieValeur = $00000004;

// Constantes pour enum TransfoMajCoursType
type
  TransfoMajCoursType = TOleEnum;
const
  TransfoMajCoursTypeAucune = $00000000;
  TransfoMajCoursTypeDevEntete = $00000001;
  TransfoMajCoursTypeDevDossier = $00000002;
  TransfoMajCoursTypeTenueEntete = $00000003;
  TransfoMajCoursTypeTenueDossier = $00000004;

// Constantes pour enum ContactCivilite
type
  ContactCivilite = TOleEnum;
const
  ContactCiviliteMonsieur = $00000000;
  ContactCiviliteMadame = $00000001;
  ContactCiviliteMademoiselle = $00000002;

// Constantes pour enum ReglementType
type
  ReglementType = TOleEnum;
const
  ReglementTypeAucun = $00000000;
  ReglementTypeEspece = $00000001;
  ReglementTypeCheque = $00000002;
  ReglementTypeCarte = $00000003;
  ReglementTypeBonAchat = $00000004;

// Constantes pour enum ReglementConditionType
type
  ReglementConditionType = TOleEnum;
const
  ReglementConditionTypeJour = $00000000;
  ReglementConditionTypeMoisCivil = $00000001;
  ReglementConditionTypeMois = $00000002;

// Constantes pour enum ReglementRepartitionType
type
  ReglementRepartitionType = TOleEnum;
const
  ReglementRepartitionTypePourcent = $00000000;
  ReglementRepartitionTypeEquilib = $00000001;
  ReglementRepartitionTypeMontant = $00000002;

// Constantes pour enum eTypeRegistre
type
  eTypeRegistre = TOleEnum;
const
  Achat = $00000000;
  Vente = $00000001;
  GeneralAchat = $00000002;
  GeneralVente = $00000003;
  ReglementAchat = $00000004;
  ReglementVente = $00000005;

// Constantes pour enum EcritureSensType
type
  EcritureSensType = TOleEnum;
const
  EcritureSensTypeDebit = $00000000;
  EcritureSensTypeCredit = $00000001;

// Constantes pour enum EcritureImpressionType
type
  EcritureImpressionType = TOleEnum;
const
  EcritureImpressionTypeNImp = $00000000;
  EcritureImpressionTypeBrouillard = $00000001;
  EcritureImpressionTypeJournal = $00000002;

// Constantes pour enum EcritureType
type
  EcritureType = TOleEnum;
const
  EcritureTypeNormal = $00000000;
  EcritureTypeCentral = $00000001;

// Constantes pour enum EcritureANType
type
  EcritureANType = TOleEnum;
const
  EcritureANTypeNormal = $00000000;
  EcritureANTypeDetail = $00000001;
  EcritureANTypeSolde = $00000002;
  EcritureANTypeManuel = $00000003;
  EcritureANTypeResultat = $00000004;

// Constantes pour enum EcritureExpertType
type
  EcritureExpertType = TOleEnum;
const
  EcritureExpertTypeNEmis = $00000000;
  EcritureExpertTypeEmis = $00000001;
  EcritureExpertTypeReception = $00000002;

// Constantes pour enum EcritureNormeType
type
  EcritureNormeType = TOleEnum;
const
  EcritureNormeLesDeux = $00000000;
  EcritureNormeNationale = $00000001;
  EcritureNormeIFRS = $00000002;

// Constantes pour enum eTypeBAP
type
  eTypeBAP = TOleEnum;
const
  Aucun = $00000000;
  AValider = $00000001;
  NonConforme = $00000002;
  Conforme = $00000003;
  EnAttente = $00000004;
  BonAPayer = $00000005;

// Constantes pour enum ModeleGrilleType
type
  ModeleGrilleType = TOleEnum;
const
  ModeleGrilleTypeAnalytique = $00000000;
  ModeleGrilleTypeGeneral = $00000001;

// Constantes pour enum TypeTiersNumerotation
type
  TypeTiersNumerotation = TOleEnum;
const
  TypeTiersNumerotationManuel = $00000000;
  TypeTiersNumerotationAuto = $00000001;
  TypeTiersNumerotationRacine = $00000002;

// Constantes pour enum TypeTiersCompteType
type
  TypeTiersCompteType = TOleEnum;
const
  TypeTiersCompteTypeRadical = $00000000;
  TypeTiersCompteTypeCompte = $00000001;

// Constantes pour enum BanqueModeRemise
type
  BanqueModeRemise = TOleEnum;
const
  BanqueModeRemiseFichier = $00000000;
  BanqueModeRemiseTeleTrans = $00000001;
  BanqueModeRemisePapier = $00000002;
  BanqueModeRemiseInternet = $00000003;
  BanqueModeRemiseMessagerie = $00000004;

// Constantes pour enum BanqueRemise
type
  BanqueRemise = TOleEnum;
const
  BanqueRemiseMonoDevMonoDate = $00000000;
  BanqueRemiseMonoDevMultiDate = $00000001;
  BanqueRemiseMultiDevMonoDate = $00000002;
  BanqueRemiseMultiDevMultiDate = $00000003;

// Constantes pour enum BanqueFormatVirement
type
  BanqueFormatVirement = TOleEnum;
const
  BanqueFormatVirementAFB = $00000000;
  BanqueFormatVirementSEPA = $00000001;
  BanqueFormatVirement320S = $00000002;

// Constantes pour enum StructBanqueFieldType
type
  StructBanqueFieldType = TOleEnum;
const
  StructBanqueFieldTypeNumeric = $00000000;
  StructBanqueFieldTypeAlphanum = $00000001;

// Constantes pour enum StructBanqueControleRib
type
  StructBanqueControleRib = TOleEnum;
const
  StructBanqueControleRibAucun = $00000000;
  StructBanqueControleRibFrance = $00000001;
  StructBanqueControleRibEspagne = $00000002;
  StructBanqueControleRibPortugal = $00000003;
  StructBanqueControleRibBelgique = $00000004;

// Constantes pour enum LettrageType
type
  LettrageType = TOleEnum;
const
  LettrageTypeLettrageMontant = $00000000;
  LettrageTypePrelettrageMontant = $00000001;
  LettrageTypeLettrageDevise = $00000002;
  LettrageTypePrelettrageDevise = $00000003;
  LettrageTypePointageMontant = $00000004;

// Constantes pour enum DocumentStatutType
type
  DocumentStatutType = TOleEnum;
const
  DocumentStatutTypeSaisie = $00000000;
  DocumentStatutTypeConfirme = $00000001;
  DocumentStatutTypeAPrepare = $00000002;
  DocumentStatutTypeDevisPerdu = $00000003;
  DocumentStatutTypeDevisArchive = $00000004;

// Constantes pour enum DocumentConditionPaiementType
type
  DocumentConditionPaiementType = TOleEnum;
const
  DocumentConditionPaiementTiers = $00000000;
  DocumentConditionPaiementSaisie = $00000001;
  DocumentConditionPaiementModele = $00000002;

// Constantes pour enum BaremeCommissionInteresse
type
  BaremeCommissionInteresse = TOleEnum;
const
  BaremeCommissionInteresseRepresentant = $00000000;
  BaremeCommissionInteresseGlobal = $00000001;

// Constantes pour enum BaremeCommissionObjectif
type
  BaremeCommissionObjectif = TOleEnum;
const
  BaremeCommissionObjectifQuantite = $00000000;
  BaremeCommissionObjectifValeur = $00000001;
  BaremeCommissionObjectifTauxRemise = $00000002;

// Constantes pour enum BaremeCommissionBase
type
  BaremeCommissionBase = TOleEnum;
const
  BaremeCommissionBaseCaHT = $00000000;
  BaremeCommissionBaseMargeHT = $00000001;

// Constantes pour enum BaremeCommissionDomaine
type
  BaremeCommissionDomaine = TOleEnum;
const
  BaremeCommissionDomaineCommande = $00000000;
  BaremeCommissionDomainePreparation = $00000001;
  BaremeCommissionDomaineLivraison = $00000002;
  BaremeCommissionDomaineFacturation = $00000003;
  BaremeCommissionDomaineEncaissement = $00000004;

// Constantes pour enum BaremeCommissionCalcul
type
  BaremeCommissionCalcul = TOleEnum;
const
  BaremeCommissionCalculTranche = $00000000;
  BaremeCommissionCalculGlobal = $00000001;

// Constantes pour enum BaremeRabaisObjectif
type
  BaremeRabaisObjectif = TOleEnum;
const
  BaremeRabaisObjectifQuantite = $00000000;
  BaremeRabaisObjectifValeur = $00000001;

// Constantes pour enum BaremeRabaisCalcul
type
  BaremeRabaisCalcul = TOleEnum;
const
  BaremeRabaisCalculTranche = $00000000;
  BaremeRabaisCalculGlobal = $00000001;

// Constantes pour enum BaremeRabaisType
type
  BaremeRabaisType = TOleEnum;
const
  BaremeRabaisTypeClient = $00000000;
  BaremeRabaisTypeFournisseur = $00000001;

// Constantes pour enum AgendaTypeInteresse
type
  AgendaTypeInteresse = TOleEnum;
const
  AgendaTypeInteresseDepot = $00000000;
  AgendaTypeInteresseClient = $00000001;
  AgendaTypeInteresseFournisseur = $00000002;
  AgendaTypeInteresseCollaborateur = $00000003;
  AgendaTypeInteresseArticle = $00000004;
  AgendaTypeInteresseRessource = $00000005;

// Constantes pour enum DocumentLigneProvenanceType
type
  DocumentLigneProvenanceType = TOleEnum;
const
  DocLigneProvenanceNormale = $00000000;
  DocLigneProvenanceRetour = $00000001;
  DocLigneProvenanceAvoir = $00000002;
  DocLigneProvenanceAcompte = $00000003;

// Constantes pour enum DocumentInterneMvtType
type
  DocumentInterneMvtType = TOleEnum;
const
  DocumentInterneMvtTypeAucun = $00000000;
  DocumentInterneMvtTypeEntreeQte = $00000001;
  DocumentInterneMvtTypeSortieQte = $00000002;
  DocumentInterneMvtTypeGainFinancier = $00000003;
  DocumentInterneMvtTypePerteFinancier = $00000004;
  DocumentInterneMvtTypeRealise = $00000005;

// Constantes pour enum DossierParamEmplacementPriorite
type
  DossierParamEmplacementPriorite = TOleEnum;
const
  EmplacementPrioriteNonPrincipal = $00000000;
  EmplacementPrioritePrincipal = $00000001;
  EmplacementPrioriteZone = $00000002;

// Constantes pour enum DossierParamTypeZone
type
  DossierParamTypeZone = TOleEnum;
const
  DossierParamTypeZoneC39 = $00000000;
  DossierParamTypeZoneNUM = $00000001;
  DossierParamTypeZoneEAN8 = $00000002;
  DossierParamTypeZoneEAN13 = $00000003;
  DossierParamTypeZoneSSCC18 = $00000004;

// Constantes pour enum ComposantType
type
  ComposantType = TOleEnum;
const
  ComposantTypeFixe = $00000000;
  ComposantTypeVariable = $00000001;

// Constantes pour enum RepartitionType
type
  RepartitionType = TOleEnum;
const
  RepartitionTypePourcent = $00000000;
  RepartitionTypeEquilib = $00000001;
  RepartitionTypeMontant = $00000002;

// Constantes pour enum EcritureODType
type
  EcritureODType = TOleEnum;
const
  EcritureODTypeOD = $00000000;
  EcritureODTypeReport = $00000001;

// Constantes pour enum eBAPAutorisationType
type
  eBAPAutorisationType = TOleEnum;
const
  BAP_TypeAucun = $00000000;
  BAP_Financier = $00000001;
  BAP_LesDeux = $00000002;

// Constantes pour enum eBAPAValider
type
  eBAPAValider = TOleEnum;
const
  BAP_ToutesFactures = $00000000;
  BAP_SelonMontant = $00000001;

// Constantes pour enum AgendaType
type
  AgendaType = TOleEnum;
const
  AgendaInteresse = $00000000;
  AgendaDocument = $00000001;
  AgendaFabrication = $00000002;

type

// *********************************************************************//
// Déclaration Forward des types définis dans la bibliothèque de types                     
// *********************************************************************//
  IBITransactional = interface;
  IBITransactionalDisp = dispinterface;
  ISynchroLog = interface;
  ISynchroLogDisp = dispinterface;
  IPredicate = interface;
  IPredicateDisp = dispinterface;
  IPredicateValue = interface;
  IPredicateValueDisp = dispinterface;
  IPredicateComparison = interface;
  IPredicateComparisonDisp = dispinterface;
  IBIValuesInsertable = interface;
  IBIValuesInsertableDisp = dispinterface;
  IPredicateCompound = interface;
  IPredicateCompoundDisp = dispinterface;
  IBICollectionPredicate = interface;
  IBICollectionPredicateDisp = dispinterface;
  IPredicateBuilder = interface;
  IPredicateBuilderDisp = dispinterface;
  IArrondi = interface;
  IArrondiDisp = dispinterface;
  IBIPersistObject = interface;
  IBIPersistObjectDisp = dispinterface;
  IBITypeObjectFactory = interface;
  IBITypeObjectFactoryDisp = dispinterface;
  IBICollection = interface;
  IBICollectionDisp = dispinterface;
  IBIObjectID = interface;
  IBIObjectIDDisp = dispinterface;
  IBICollectionDispatch = interface;
  IBICollectionDispatchDisp = dispinterface;
  IBIPersistStream = interface;
  IBIPersistStreamDisp = dispinterface;
  IDatabaseInfo = interface;
  IDatabaseInfoDisp = dispinterface;
  ISynchroStream = interface;
  ISynchroStreamDisp = dispinterface;
  IBIObjectIDExternal = interface;
  IBIObjectIDExternalDisp = dispinterface;
  IBIMedia = interface;
  IBIMediaDisp = dispinterface;
  IBICategorieCompta = interface;
  IBICategorieComptaDisp = dispinterface;
  IDocValorisation = interface;
  IDocValorisationDisp = dispinterface;
  IDocValoTaxes = interface;
  IDocValoTaxesDisp = dispinterface;
  IDocValoTaxe = interface;
  IDocValoTaxeDisp = dispinterface;
  IDocValoEscompte = interface;
  IDocValoEscompteDisp = dispinterface;
  IFrais2 = interface;
  IFrais2Disp = dispinterface;
  IFraisElem2 = interface;
  IFraisElem2Disp = dispinterface;
  IRemise2 = interface;
  IRemise2Disp = dispinterface;
  IRemiseElem2 = interface;
  IRemiseElem2Disp = dispinterface;
  IBPDevise2 = interface;
  IBPDevise2Disp = dispinterface;
  IBPDeviseFactory2 = interface;
  IBPDeviseFactory2Disp = dispinterface;
  IAdresse = interface;
  IAdresseDisp = dispinterface;
  ITelecom = interface;
  ITelecomDisp = dispinterface;
  ITarif2 = interface;
  ITarif2Disp = dispinterface;
  IDevise = interface;
  IDeviseDisp = dispinterface;
  ITarifVente2 = interface;
  ITarifVente2Disp = dispinterface;
  ITarifAchat2 = interface;
  ITarifAchat2Disp = dispinterface;
  IBPAnalytiqueRupture = interface;
  IBPAnalytiqueRuptureDisp = dispinterface;
  IDocLigneValorisation = interface;
  IDocLigneValorisationDisp = dispinterface;
  ITransformation = interface;
  ITransformationDisp = dispinterface;
  ITransformationVente = interface;
  ITransformationVenteDisp = dispinterface;
  IPMProcess = interface;
  IPMProcessDisp = dispinterface;
  IPMDocTransformer = interface;
  IPMDocTransformerDisp = dispinterface;
  IFailInfoCol = interface;
  IFailInfoColDisp = dispinterface;
  IFailInfo = interface;
  IFailInfoDisp = dispinterface;
  IBODocument3 = interface;
  IBODocument3Disp = dispinterface;
  IBODocumentFactory = interface;
  IBODocumentFactoryDisp = dispinterface;
  IBIFields = interface;
  IBIFieldsDisp = dispinterface;
  IBIField = interface;
  IBIFieldDisp = dispinterface;
  IBODocumentLigneFactory = interface;
  IBODocumentLigneFactoryDisp = dispinterface;
  IBODepot3 = interface;
  IBODepot3Disp = dispinterface;
  IBODepotFactory2 = interface;
  IBODepotFactory2Disp = dispinterface;
  IBODepotEmplacementFactory = interface;
  IBODepotEmplacementFactoryDisp = dispinterface;
  IBODepotEmplacement = interface;
  IBODepotEmplacementDisp = dispinterface;
  IBISouche = interface;
  IBISoucheDisp = dispinterface;
  IBIValues = interface;
  IBIValuesDisp = dispinterface;
  IBOCollaborateur = interface;
  IBOCollaborateurDisp = dispinterface;
  IBOCollaborateurFactory = interface;
  IBOCollaborateurFactoryDisp = dispinterface;
  IBOVendeursAssociesFactory = interface;
  IBOVendeursAssociesFactoryDisp = dispinterface;
  IBOCompteA3 = interface;
  IBOCompteA3Disp = dispinterface;
  IBOCompteAFactory3 = interface;
  IBOCompteAFactory3Disp = dispinterface;
  IBPAnalytique3 = interface;
  IBPAnalytique3Disp = dispinterface;
  IBPAnalytiqueFactory3 = interface;
  IBPAnalytiqueFactory3Disp = dispinterface;
  IBPAnalyse = interface;
  IBPAnalyseDisp = dispinterface;
  IBPAnalyseFactory = interface;
  IBPAnalyseFactoryDisp = dispinterface;
  IBODocumentLigne3 = interface;
  IBODocumentLigne3Disp = dispinterface;
  IBOArticle3 = interface;
  IBOArticle3Disp = dispinterface;
  IBOArticleFactory3 = interface;
  IBOArticleFactory3Disp = dispinterface;
  IBOFamille3 = interface;
  IBOFamille3Disp = dispinterface;
  IBOFamilleFactory2 = interface;
  IBOFamilleFactory2Disp = dispinterface;
  IBPProduit2 = interface;
  IBPProduit2Disp = dispinterface;
  IBPProduitFactory2 = interface;
  IBPProduitFactory2Disp = dispinterface;
  IBPUnite = interface;
  IBPUniteDisp = dispinterface;
  IBPUniteFactory = interface;
  IBPUniteFactoryDisp = dispinterface;
  IBOModele2 = interface;
  IBOModele2Disp = dispinterface;
  IBOModeleFactory = interface;
  IBOModeleFactoryDisp = dispinterface;
  IBOBaremeSolde = interface;
  IBOBaremeSoldeDisp = dispinterface;
  IBOBaremeSoldeFactory = interface;
  IBOBaremeSoldeFactoryDisp = dispinterface;
  IBOTiers3 = interface;
  IBOTiers3Disp = dispinterface;
  IBOTiersPart3 = interface;
  IBOTiersPart3Disp = dispinterface;
  IBOFournisseur3 = interface;
  IBOFournisseur3Disp = dispinterface;
  IBOTiersFactory3 = interface;
  IBOTiersFactory3Disp = dispinterface;
  IBOTiersCompteGFactory3 = interface;
  IBOTiersCompteGFactory3Disp = dispinterface;
  IBOCompteG3 = interface;
  IBOCompteG3Disp = dispinterface;
  IBOCompteGFactory3 = interface;
  IBOCompteGFactory3Disp = dispinterface;
  IBOCompteR = interface;
  IBOCompteRDisp = dispinterface;
  IBOCompteGTiersFactory3 = interface;
  IBOCompteGTiersFactory3Disp = dispinterface;
  IBOTaxe3 = interface;
  IBOTaxe3Disp = dispinterface;
  IBOTaxeFactory3 = interface;
  IBOTaxeFactory3Disp = dispinterface;
  IBPNatureCompte = interface;
  IBPNatureCompteDisp = dispinterface;
  IBPNatureCompteFactory = interface;
  IBPNatureCompteFactoryDisp = dispinterface;
  IBPNatureCompteDet = interface;
  IBPNatureCompteDetDisp = dispinterface;
  IBPNatureCompteDetFactory = interface;
  IBPNatureCompteDetFactoryDisp = dispinterface;
  IBOTiersBanque3 = interface;
  IBOTiersBanque3Disp = dispinterface;
  IBOJournal3 = interface;
  IBOJournal3Disp = dispinterface;
  IBOJournalFactory3 = interface;
  IBOJournalFactory3Disp = dispinterface;
  IBOModeleReglement = interface;
  IBOModeleReglementDisp = dispinterface;
  IBOModeleReglementFactory = interface;
  IBOModeleReglementFactoryDisp = dispinterface;
  IBOFournisseurFactory3 = interface;
  IBOFournisseurFactory3Disp = dispinterface;
  IBOFournisseurTarifFactory3 = interface;
  IBOFournisseurTarifFactory3Disp = dispinterface;
  IBIArticleTarif3 = interface;
  IBIArticleTarif3Disp = dispinterface;
  IBOArticleTarifFournisseur3 = interface;
  IBOArticleTarifFournisseur3Disp = dispinterface;
  IBPGamme = interface;
  IBPGammeDisp = dispinterface;
  IBPGammeFactory = interface;
  IBPGammeFactoryDisp = dispinterface;
  IBPExpedition3 = interface;
  IBPExpedition3Disp = dispinterface;
  IBPExpeditionFactory3 = interface;
  IBPExpeditionFactory3Disp = dispinterface;
  IBPConditionLivraison = interface;
  IBPConditionLivraisonDisp = dispinterface;
  IBPConditionLivraisonFactory = interface;
  IBPConditionLivraisonFactoryDisp = dispinterface;
  IBOFournisseurTarifFamilleFactory = interface;
  IBOFournisseurTarifFamilleFactoryDisp = dispinterface;
  IBIFamilleTarif = interface;
  IBIFamilleTarifDisp = dispinterface;
  IBOFamilleTarifFournisseur = interface;
  IBOFamilleTarifFournisseurDisp = dispinterface;
  IBOArticleGlossaireFactory2 = interface;
  IBOArticleGlossaireFactory2Disp = dispinterface;
  IBOGlossaire2 = interface;
  IBOGlossaire2Disp = dispinterface;
  IBOGlossaireFactory = interface;
  IBOGlossaireFactoryDisp = dispinterface;
  IBOArticleParamComptaFactory3 = interface;
  IBOArticleParamComptaFactory3Disp = dispinterface;
  IBIParamCompta3 = interface;
  IBIParamCompta3Disp = dispinterface;
  IBOArticleParamCompta3 = interface;
  IBOArticleParamCompta3Disp = dispinterface;
  IBOArticleDepotFactory = interface;
  IBOArticleDepotFactoryDisp = dispinterface;
  IBIArticleStock3 = interface;
  IBIArticleStock3Disp = dispinterface;
  IBOArticleDepot3 = interface;
  IBOArticleDepot3Disp = dispinterface;
  IBIArticleStockEmplFactory = interface;
  IBIArticleStockEmplFactoryDisp = dispinterface;
  IBIArticleStockEmpl = interface;
  IBIArticleStockEmplDisp = dispinterface;
  IBOArticleDepotGammeFactory = interface;
  IBOArticleDepotGammeFactoryDisp = dispinterface;
  IBOArticleGammeEnum3 = interface;
  IBOArticleGammeEnum3Disp = dispinterface;
  IBOArticleDepotGamme3 = interface;
  IBOArticleDepotGamme3Disp = dispinterface;
  IBOArticleDepotLotFactory = interface;
  IBOArticleDepotLotFactoryDisp = dispinterface;
  IBILot = interface;
  IBILotDisp = dispinterface;
  IBOArticleDepotLot = interface;
  IBOArticleDepotLotDisp = dispinterface;
  IBOArticleGammeEnumFactory = interface;
  IBOArticleGammeEnumFactoryDisp = dispinterface;
  IBOArticleCondFactory = interface;
  IBOArticleCondFactoryDisp = dispinterface;
  IBOArticleCond3 = interface;
  IBOArticleCond3Disp = dispinterface;
  IBPConditionnement = interface;
  IBPConditionnementDisp = dispinterface;
  IBPConditionnementFactory = interface;
  IBPConditionnementFactoryDisp = dispinterface;
  IBPCategorieTarif = interface;
  IBPCategorieTarifDisp = dispinterface;
  IBPCategorieTarifFactory = interface;
  IBPCategorieTarifFactoryDisp = dispinterface;
  IBOClient3 = interface;
  IBOClient3Disp = dispinterface;
  IBOClientFactory3 = interface;
  IBOClientFactory3Disp = dispinterface;
  IBOClientTarifFactory3 = interface;
  IBOClientTarifFactory3Disp = dispinterface;
  IBIArticleTarifVente3 = interface;
  IBIArticleTarifVente3Disp = dispinterface;
  IBOArticleTarifClient3 = interface;
  IBOArticleTarifClient3Disp = dispinterface;
  IBPArrondi = interface;
  IBPArrondiDisp = dispinterface;
  IBPCodeRisque = interface;
  IBPCodeRisqueDisp = dispinterface;
  IBPCodeRisqueFactory = interface;
  IBPCodeRisqueFactoryDisp = dispinterface;
  IBPPeriodicite = interface;
  IBPPeriodiciteDisp = dispinterface;
  IBPPeriodiciteFactory = interface;
  IBPPeriodiciteFactoryDisp = dispinterface;
  IBOClientLivraison3 = interface;
  IBOClientLivraison3Disp = dispinterface;
  IBOClientTarifFamilleFactory = interface;
  IBOClientTarifFamilleFactoryDisp = dispinterface;
  IBIFamilleTarifVente = interface;
  IBIFamilleTarifVenteDisp = dispinterface;
  IBOFamilleTarifClient = interface;
  IBOFamilleTarifClientDisp = dispinterface;
  IBOProspectFactory = interface;
  IBOProspectFactoryDisp = dispinterface;
  IBOClientProspectFactory = interface;
  IBOClientProspectFactoryDisp = dispinterface;
  IBOInfoComplementClientFactory = interface;
  IBOInfoComplementClientFactoryDisp = dispinterface;
  IBOInfoComplementClient = interface;
  IBOInfoComplementClientDisp = dispinterface;
  IBIRessource = interface;
  IBIRessourceDisp = dispinterface;
  IBIRessourceFactory = interface;
  IBIRessourceFactoryDisp = dispinterface;
  IBIRessourceArticleFactory = interface;
  IBIRessourceArticleFactoryDisp = dispinterface;
  IBIRessourceRessourceFactory = interface;
  IBIRessourceRessourceFactoryDisp = dispinterface;
  IDateTimePeriod = interface;
  IDateTimePeriodDisp = dispinterface;
  IBOArticleRessourceFactory = interface;
  IBOArticleRessourceFactoryDisp = dispinterface;
  ITransformationAchat = interface;
  ITransformationAchatDisp = dispinterface;
  IBIContact2 = interface;
  IBIContact2Disp = dispinterface;
  IBPServiceContact = interface;
  IBPServiceContactDisp = dispinterface;
  IBPServiceContactFactory = interface;
  IBPServiceContactFactoryDisp = dispinterface;
  IBPContact = interface;
  IBPContactDisp = dispinterface;
  IBPContactFactory = interface;
  IBPContactFactoryDisp = dispinterface;
  IBIArticleTarifGamme3 = interface;
  IBIArticleTarifGamme3Disp = dispinterface;
  IBIArticleTarifQte3 = interface;
  IBIArticleTarifQte3Disp = dispinterface;
  IBIArticleTarifCond3 = interface;
  IBIArticleTarifCond3Disp = dispinterface;
  IBIFamilleTarifQte = interface;
  IBIFamilleTarifQteDisp = dispinterface;
  IBIReglement = interface;
  IBIReglementDisp = dispinterface;
  IBPReglement3 = interface;
  IBPReglement3Disp = dispinterface;
  IBPReglementFactory3 = interface;
  IBPReglementFactory3Disp = dispinterface;
  IBIParamDoc = interface;
  IBIParamDocDisp = dispinterface;
  IDossierExercice = interface;
  IDossierExerciceDisp = dispinterface;
  IDossierExerciceReportANouveaux = interface;
  IDossierExerciceReportANouveauxDisp = dispinterface;
  IDossierExerciceReportANouveauxIFRS = interface;
  IDossierExerciceReportANouveauxIFRSDisp = dispinterface;
  IDossierTiers = interface;
  IDossierTiersDisp = dispinterface;
  IBOClientLivraisonAllFactory = interface;
  IBOClientLivraisonAllFactoryDisp = dispinterface;
  IRegistreRevision = interface;
  IRegistreRevisionDisp = dispinterface;
  IRegistreTaxes = interface;
  IRegistreTaxesDisp = dispinterface;
  IRegistreLigneTaxe = interface;
  IRegistreLigneTaxeDisp = dispinterface;
  IBSCPTAApplication3 = interface;
  IBSCPTAApplication3Disp = dispinterface;
  ILicence = interface;
  ILicenceDisp = dispinterface;
  ILicenceProduct = interface;
  ILicenceProductDisp = dispinterface;
  ILicenceUserInfo = interface;
  ILicenceUserInfoDisp = dispinterface;
  ILicenceProducts = interface;
  ILicenceProductsDisp = dispinterface;
  IBILoggable = interface;
  IBILoggableDisp = dispinterface;
  IBOTiersAutreFactory2 = interface;
  IBOTiersAutreFactory2Disp = dispinterface;
  IBOTiersSalarieFactory2 = interface;
  IBOTiersSalarieFactory2Disp = dispinterface;
  IBOEcritureFactory3 = interface;
  IBOEcritureFactory3Disp = dispinterface;
  IBOEcriture3 = interface;
  IBOEcriture3Disp = dispinterface;
  IBOEcritureAFactory2 = interface;
  IBOEcritureAFactory2Disp = dispinterface;
  IBonAPayer = interface;
  IBonAPayerDisp = dispinterface;
  IBODossierContactFactory2 = interface;
  IBODossierContactFactory2Disp = dispinterface;
  IBODossierContact3 = interface;
  IBODossierContact3Disp = dispinterface;
  IBOModeleEcritureFactory2 = interface;
  IBOModeleEcritureFactory2Disp = dispinterface;
  IBOModeleEcriture3 = interface;
  IBOModeleEcriture3Disp = dispinterface;
  IBPRappelFactory = interface;
  IBPRappelFactoryDisp = dispinterface;
  IBPRappel = interface;
  IBPRappelDisp = dispinterface;
  IBPTiersStatFactory = interface;
  IBPTiersStatFactoryDisp = dispinterface;
  IBPTiersStat = interface;
  IBPTiersStatDisp = dispinterface;
  IBOModeleGrilleFactory = interface;
  IBOModeleGrilleFactoryDisp = dispinterface;
  IBOModeleGrille = interface;
  IBOModeleGrilleDisp = dispinterface;
  IBOModeleGrilleLigneFactory = interface;
  IBOModeleGrilleLigneFactoryDisp = dispinterface;
  IBPTiersFactory = interface;
  IBPTiersFactoryDisp = dispinterface;
  IBPTiers = interface;
  IBPTiersDisp = dispinterface;
  IPMEncoder = interface;
  IPMEncoderDisp = dispinterface;
  IBOBanqueFactory = interface;
  IBOBanqueFactoryDisp = dispinterface;
  IBOBanque = interface;
  IBOBanqueDisp = dispinterface;
  IBOBanqueRibFactory = interface;
  IBOBanqueRibFactoryDisp = dispinterface;
  IBOBanqueRib = interface;
  IBOBanqueRibDisp = dispinterface;
  IBPStructBanqueFactory = interface;
  IBPStructBanqueFactoryDisp = dispinterface;
  IBPStructBanque = interface;
  IBPStructBanqueDisp = dispinterface;
  IPMLettrer = interface;
  IPMLettrerDisp = dispinterface;
  IBOPaysFactory = interface;
  IBOPaysFactoryDisp = dispinterface;
  IBOPays = interface;
  IBOPaysDisp = dispinterface;
  IBOCompteRFactory = interface;
  IBOCompteRFactoryDisp = dispinterface;
  IBOEcritureAAllFactory = interface;
  IBOEcritureAAllFactoryDisp = dispinterface;
  IBOJournalAFactory = interface;
  IBOJournalAFactoryDisp = dispinterface;
  IBOJournalA = interface;
  IBOJournalADisp = dispinterface;
  IBOEcritureODFactory = interface;
  IBOEcritureODFactoryDisp = dispinterface;
  ICompanies = interface;
  ICompaniesDisp = dispinterface;
  ICompany = interface;
  ICompanyDisp = dispinterface;
  IPMBonAPayer = interface;
  IPMBonAPayerDisp = dispinterface;
  IBSCIALApplication3 = interface;
  IBSCIALApplication3Disp = dispinterface;
  IBPCategorieComptaVenteFactory = interface;
  IBPCategorieComptaVenteFactoryDisp = dispinterface;
  IBPCategorieComptaVente = interface;
  IBPCategorieComptaVenteDisp = dispinterface;
  IBPCategorieComptaAchatFactory = interface;
  IBPCategorieComptaAchatFactoryDisp = dispinterface;
  IBPCategorieComptaAchat = interface;
  IBPCategorieComptaAchatDisp = dispinterface;
  IBPCategorieComptaStockFactory = interface;
  IBPCategorieComptaStockFactoryDisp = dispinterface;
  IBPCategorieComptaStock = interface;
  IBPCategorieComptaStockDisp = dispinterface;
  IBODocumentStockFactory3 = interface;
  IBODocumentStockFactory3Disp = dispinterface;
  IBODocumentStock3 = interface;
  IBODocumentStock3Disp = dispinterface;
  IBODocumentAchatFactory3 = interface;
  IBODocumentAchatFactory3Disp = dispinterface;
  IBODocumentPart3 = interface;
  IBODocumentPart3Disp = dispinterface;
  IBODocumentAchat3 = interface;
  IBODocumentAchat3Disp = dispinterface;
  IBODocumentVenteFactory3 = interface;
  IBODocumentVenteFactory3Disp = dispinterface;
  IBODocumentVente3 = interface;
  IBODocumentVente3Disp = dispinterface;
  IBPMotifDevis = interface;
  IBPMotifDevisDisp = dispinterface;
  IBPMotifDevisFactory = interface;
  IBPMotifDevisFactoryDisp = dispinterface;
  IBOInfoComplementEnteteFactory = interface;
  IBOInfoComplementEnteteFactoryDisp = dispinterface;
  IBOInfoComplementEntete = interface;
  IBOInfoComplementEnteteDisp = dispinterface;
  IBODocumentInterneFactory3 = interface;
  IBODocumentInterneFactory3Disp = dispinterface;
  IBODocumentInterne3 = interface;
  IBODocumentInterne3Disp = dispinterface;
  IBISoucheFactory = interface;
  IBISoucheFactoryDisp = dispinterface;
  IBIParamDocFactory = interface;
  IBIParamDocFactoryDisp = dispinterface;
  IBOBaremeCommissionFactory = interface;
  IBOBaremeCommissionFactoryDisp = dispinterface;
  IBOBaremeCommission = interface;
  IBOBaremeCommissionDisp = dispinterface;
  IBOBaremeRabaisFactory = interface;
  IBOBaremeRabaisFactoryDisp = dispinterface;
  IBOBaremeRabais = interface;
  IBOBaremeRabaisDisp = dispinterface;
  IBPArticleStatFactory = interface;
  IBPArticleStatFactoryDisp = dispinterface;
  IBPArticleStat = interface;
  IBPArticleStatDisp = dispinterface;
  IBPAgendaFactory = interface;
  IBPAgendaFactoryDisp = dispinterface;
  IBPAgenda = interface;
  IBPAgendaDisp = dispinterface;
  IPMDocument = interface;
  IPMDocumentDisp = dispinterface;
  IPMAppliquerBareme = interface;
  IPMAppliquerBaremeDisp = dispinterface;
  IPMControlerQualite = interface;
  IPMControlerQualiteDisp = dispinterface;
  IBODocumentLigneEmplacement = interface;
  IBODocumentLigneEmplacementDisp = dispinterface;
  IPMControlerQualiteInfo = interface;
  IPMControlerQualiteInfoDisp = dispinterface;
  IBODocumentLigneAllFactory = interface;
  IBODocumentLigneAllFactoryDisp = dispinterface;
  IBOAgendaFactory = interface;
  IBOAgendaFactoryDisp = dispinterface;
  IBORessourceFactory = interface;
  IBORessourceFactoryDisp = dispinterface;
  IBORessource = interface;
  IBORessourceDisp = dispinterface;
  IBORessourceCentreFactory = interface;
  IBORessourceCentreFactoryDisp = dispinterface;
  IBORessourceCentre = interface;
  IBORessourceCentreDisp = dispinterface;
  IControleQualiteStat = interface;
  IControleQualiteStatDisp = dispinterface;
  IPMColiser = interface;
  IPMColiserDisp = dispinterface;
  IBODocumentPartLigne3 = interface;
  IBODocumentPartLigne3Disp = dispinterface;
  IBODocumentVenteLigne3 = interface;
  IBODocumentVenteLigne3Disp = dispinterface;
  IBOInfoComplementDocligneFactory = interface;
  IBOInfoComplementDocligneFactoryDisp = dispinterface;
  IBOInfoComplementDocligne = interface;
  IBOInfoComplementDocligneDisp = dispinterface;
  IPMPreleverLot = interface;
  IPMPreleverLotDisp = dispinterface;
  IPMDocTransferer = interface;
  IPMDocTransfererDisp = dispinterface;
  IBOArticleDepotLotAllFactory = interface;
  IBOArticleDepotLotAllFactoryDisp = dispinterface;
  IPMDocInsererSousTotal = interface;
  IPMDocInsererSousTotalDisp = dispinterface;
  IPMDocRecalculPrixCompose = interface;
  IPMDocRecalculPrixComposeDisp = dispinterface;
  IPMSortirLots = interface;
  IPMSortirLotsDisp = dispinterface;
  IPMConversionClient = interface;
  IPMConversionClientDisp = dispinterface;
  IBODocumentReglementFactory = interface;
  IBODocumentReglementFactoryDisp = dispinterface;
  IPMReglerEcheances = interface;
  IPMReglerEcheancesDisp = dispinterface;
  IBODocumentReglement = interface;
  IBODocumentReglementDisp = dispinterface;
  IBODocumentReglementEcheanceEcheanceFactory = interface;
  IBODocumentReglementEcheanceEcheanceFactoryDisp = dispinterface;
  IBODocumentEcheance3 = interface;
  IBODocumentEcheance3Disp = dispinterface;
  IBODocumentReglementEcheanceReglementFactory = interface;
  IBODocumentReglementEcheanceReglementFactoryDisp = dispinterface;
  IBODocumentReglementEcheance = interface;
  IBODocumentReglementEcheanceDisp = dispinterface;
  IBPConditionnementEnum = interface;
  IBPConditionnementEnumDisp = dispinterface;
  IBPDossier2 = interface;
  IBPDossier2Disp = dispinterface;
  IBPSoucheVente = interface;
  IBPSoucheVenteDisp = dispinterface;
  IBPSoucheAchat = interface;
  IBPSoucheAchatDisp = dispinterface;
  IBPParamDocInterne = interface;
  IBPParamDocInterneDisp = dispinterface;
  IBPDossierCial = interface;
  IBPDossierCialDisp = dispinterface;
  IBPDossierParamCial = interface;
  IBPDossierParamCialDisp = dispinterface;
  IBPLibelleCpta = interface;
  IBPLibelleCptaDisp = dispinterface;
  IBOTiersReglement3 = interface;
  IBOTiersReglement3Disp = dispinterface;
  IBOTiersContact3 = interface;
  IBOTiersContact3Disp = dispinterface;
  IBOTiersMedia3 = interface;
  IBOTiersMedia3Disp = dispinterface;
  IBOEcritureA3 = interface;
  IBOEcritureA3Disp = dispinterface;
  IBOArticleTarifQteFournisseur3 = interface;
  IBOArticleTarifQteFournisseur3Disp = dispinterface;
  IBOArticleTarifGammeFournisseur3 = interface;
  IBOArticleTarifGammeFournisseur3Disp = dispinterface;
  IBOArticleMedia3 = interface;
  IBOArticleMedia3Disp = dispinterface;
  IBOArticleGammeEnumRef3 = interface;
  IBOArticleGammeEnumRef3Disp = dispinterface;
  IBOArticleNomenclature3 = interface;
  IBOArticleNomenclature3Disp = dispinterface;
  IBOArticleTarifQteClient3 = interface;
  IBOArticleTarifQteClient3Disp = dispinterface;
  IBOArticleTarifCondClient3 = interface;
  IBOArticleTarifCondClient3Disp = dispinterface;
  IBOArticleTarifGammeClient3 = interface;
  IBOArticleTarifGammeClient3Disp = dispinterface;
  IBOArticleTarifCategorie3 = interface;
  IBOArticleTarifCategorie3Disp = dispinterface;
  IBOArticleTarifQteCategorie3 = interface;
  IBOArticleTarifQteCategorie3Disp = dispinterface;
  IBOArticleTarifCondCategorie3 = interface;
  IBOArticleTarifCondCategorie3Disp = dispinterface;
  IBOArticleTarifGammeCategorie3 = interface;
  IBOArticleTarifGammeCategorie3Disp = dispinterface;
  IBOFamilleParamCompta3 = interface;
  IBOFamilleParamCompta3Disp = dispinterface;
  IBODepotContact3 = interface;
  IBODepotContact3Disp = dispinterface;
  IBODocumentLigneLienCM = interface;
  IBODocumentLigneLienCMDisp = dispinterface;
  IBODocumentStockLigne3 = interface;
  IBODocumentStockLigne3Disp = dispinterface;
  IBODocumentAcompte3 = interface;
  IBODocumentAcompte3Disp = dispinterface;
  IBODocumentAchatLigne3 = interface;
  IBODocumentAchatLigne3Disp = dispinterface;
  IBODocumentInterneLigne3 = interface;
  IBODocumentInterneLigne3Disp = dispinterface;
  IBOModeleEcritureLigne3 = interface;
  IBOModeleEcritureLigne3Disp = dispinterface;
  IBOModeleEcritureLigneA3 = interface;
  IBOModeleEcritureLigneA3Disp = dispinterface;
  IBOFamilleTarifCategorie = interface;
  IBOFamilleTarifCategorieDisp = dispinterface;
  IBOFamilleTarifQteCategorie = interface;
  IBOFamilleTarifQteCategorieDisp = dispinterface;
  IBOFamilleTarifQteFournisseur = interface;
  IBOFamilleTarifQteFournisseurDisp = dispinterface;
  IBOModeleGrilleLigne = interface;
  IBOModeleGrilleLigneDisp = dispinterface;
  IBOModeleReglementLigne = interface;
  IBOModeleReglementLigneDisp = dispinterface;
  IBOBaremeCommissionQte = interface;
  IBOBaremeCommissionQteDisp = dispinterface;
  IBOBaremeRabaisQte = interface;
  IBOBaremeRabaisQteDisp = dispinterface;
  IBOEcritureMedia = interface;
  IBOEcritureMediaDisp = dispinterface;
  IBOBanqueContact = interface;
  IBOBanqueContactDisp = dispinterface;
  IBOCompteAContact = interface;
  IBOCompteAContactDisp = dispinterface;
  IBOCompteAMedia = interface;
  IBOCompteAMediaDisp = dispinterface;
  IBOEcritureOD = interface;
  IBOEcritureODDisp = dispinterface;
  IBODocumentMedia = interface;
  IBODocumentMediaDisp = dispinterface;
  IBPBonAPayer = interface;
  IBPBonAPayerDisp = dispinterface;
  IBOAgenda = interface;
  IBOAgendaDisp = dispinterface;
  IUserLot = interface;
  IUserLotDisp = dispinterface;
  IUserEmplacement = interface;
  IUserEmplacementDisp = dispinterface;
  IUserColis = interface;
  IUserColisDisp = dispinterface;

// *********************************************************************//
// Déclaration de CoClasses définies dans la bibliothèque de types        
// (REMARQUE: On affecte chaque CoClasse à son Interface par défaut)      
// *********************************************************************//
  BSCPTAApplication100c = IBSCPTAApplication3;
  BSCIALApplication100c = IBSCIALApplication3;


// *********************************************************************//
// Déclaration de structures, d'unions et d'alias.                         
// *********************************************************************//
  PByte1 = ^Byte; {*}

{$ALIGN 8}
  _LARGE_INTEGER = record
    QuadPart: Int64;
  end;

  _ULARGE_INTEGER = record
    QuadPart: Largeuint;
  end;

{$ALIGN 4}
  _FILETIME = record
    dwLowDateTime: LongWord;
    dwHighDateTime: LongWord;
  end;

{$ALIGN 8}
  tagSTATSTG = record
    pwcsName: PWideChar;
    type_: LongWord;
    cbSize: _ULARGE_INTEGER;
    mtime: _FILETIME;
    ctime: _FILETIME;
    atime: _FILETIME;
    grfMode: LongWord;
    grfLocksSupported: LongWord;
    clsid: TGUID;
    grfStateBits: LongWord;
    reserved: LongWord;
  end;


// *********************************************************************//
// Interface :   IBITransactional
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {0BD6E47B-CD15-4D44-ADAA-6364E78E5265}
// *********************************************************************//
  IBITransactional = interface(IDispatch)
    ['{0BD6E47B-CD15-4D44-ADAA-6364E78E5265}']
    function Get_IsActiveTransaction: WordBool; safecall;
    procedure BeginTransaction; safecall;
    procedure CommitTransaction; safecall;
    procedure RollbackTransaction; safecall;
    property IsActiveTransaction: WordBool read Get_IsActiveTransaction;
  end;

// *********************************************************************//
// DispIntf :    IBITransactionalDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {0BD6E47B-CD15-4D44-ADAA-6364E78E5265}
// *********************************************************************//
  IBITransactionalDisp = dispinterface
    ['{0BD6E47B-CD15-4D44-ADAA-6364E78E5265}']
    property IsActiveTransaction: WordBool readonly dispid 1;
    procedure BeginTransaction; dispid 2;
    procedure CommitTransaction; dispid 3;
    procedure RollbackTransaction; dispid 4;
  end;

// *********************************************************************//
// Interface :   ISynchroLog
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {1ABC2F0C-87D1-421D-94E1-66E84D970AE3}
// *********************************************************************//
  ISynchroLog = interface(IDispatch)
    ['{1ABC2F0C-87D1-421D-94E1-66E84D970AE3}']
    function Get_ExternalIdentifiant: WideString; safecall;
    function Get_UIDSiteModifier: WideString; safecall;
    function Get_DateModif: TDateTime; safecall;
    property ExternalIdentifiant: WideString read Get_ExternalIdentifiant;
    property UIDSiteModifier: WideString read Get_UIDSiteModifier;
    property DateModif: TDateTime read Get_DateModif;
  end;

// *********************************************************************//
// DispIntf :    ISynchroLogDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {1ABC2F0C-87D1-421D-94E1-66E84D970AE3}
// *********************************************************************//
  ISynchroLogDisp = dispinterface
    ['{1ABC2F0C-87D1-421D-94E1-66E84D970AE3}']
    property ExternalIdentifiant: WideString readonly dispid 10;
    property UIDSiteModifier: WideString readonly dispid 11;
    property DateModif: TDateTime readonly dispid 12;
  end;

// *********************************************************************//
// Interface :   IPredicate
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {795E7389-208E-4FBF-B935-5D64BEB37EC6}
// *********************************************************************//
  IPredicate = interface(IDispatch)
    ['{795E7389-208E-4FBF-B935-5D64BEB37EC6}']
    function Get_PredicateType: ePredicateType; safecall;
    function Evaluate(const pObj: IDispatch): WordBool; safecall;
    property PredicateType: ePredicateType read Get_PredicateType;
  end;

// *********************************************************************//
// DispIntf :    IPredicateDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {795E7389-208E-4FBF-B935-5D64BEB37EC6}
// *********************************************************************//
  IPredicateDisp = dispinterface
    ['{795E7389-208E-4FBF-B935-5D64BEB37EC6}']
    property PredicateType: ePredicateType readonly dispid 10;
    function Evaluate(const pObj: IDispatch): WordBool; dispid 11;
  end;

// *********************************************************************//
// Interface :   IPredicateValue
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {CABF2ABE-3E55-4250-9424-D5600D14152A}
// *********************************************************************//
  IPredicateValue = interface(IPredicate)
    ['{CABF2ABE-3E55-4250-9424-D5600D14152A}']
    function Get_Value: WordBool; safecall;
    procedure Set_Value(pVal: WordBool); safecall;
    property Value: WordBool read Get_Value write Set_Value;
  end;

// *********************************************************************//
// DispIntf :    IPredicateValueDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {CABF2ABE-3E55-4250-9424-D5600D14152A}
// *********************************************************************//
  IPredicateValueDisp = dispinterface
    ['{CABF2ABE-3E55-4250-9424-D5600D14152A}']
    property Value: WordBool dispid 100;
    property PredicateType: ePredicateType readonly dispid 10;
    function Evaluate(const pObj: IDispatch): WordBool; dispid 11;
  end;

// *********************************************************************//
// Interface :   IPredicateComparison
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {19D17313-7089-4EF7-99F1-F1A4BFBD55AB}
// *********************************************************************//
  IPredicateComparison = interface(IPredicate)
    ['{19D17313-7089-4EF7-99F1-F1A4BFBD55AB}']
    function Get_PredicateTypeComparison: ePredicateTypeComparison; safecall;
    procedure Set_PredicateTypeComparison(pVal: ePredicateTypeComparison); safecall;
    function Get_Key: WideString; safecall;
    procedure Set_Key(const pVal: WideString); safecall;
    function Get_Values: IBIValuesInsertable; safecall;
    property PredicateTypeComparison: ePredicateTypeComparison read Get_PredicateTypeComparison write Set_PredicateTypeComparison;
    property Key: WideString read Get_Key write Set_Key;
    property Values: IBIValuesInsertable read Get_Values;
  end;

// *********************************************************************//
// DispIntf :    IPredicateComparisonDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {19D17313-7089-4EF7-99F1-F1A4BFBD55AB}
// *********************************************************************//
  IPredicateComparisonDisp = dispinterface
    ['{19D17313-7089-4EF7-99F1-F1A4BFBD55AB}']
    property PredicateTypeComparison: ePredicateTypeComparison dispid 100;
    property Key: WideString dispid 101;
    property Values: IBIValuesInsertable readonly dispid 102;
    property PredicateType: ePredicateType readonly dispid 10;
    function Evaluate(const pObj: IDispatch): WordBool; dispid 11;
  end;

// *********************************************************************//
// Interface :   IBIValuesInsertable
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {5DBB9FAF-C1EF-4326-A1A3-28F3C64656A7}
// *********************************************************************//
  IBIValuesInsertable = interface(IDispatch)
    ['{5DBB9FAF-C1EF-4326-A1A3-28F3C64656A7}']
    function Get__NewEnum: IUnknown; safecall;
    function Get_Item(vIndex: OleVariant): OleVariant; safecall;
    function Get_Count: Integer; safecall;
    procedure Add(vVal: OleVariant); safecall;
    procedure Remove(vVal: OleVariant); safecall;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Item[vIndex: OleVariant]: OleVariant read Get_Item; default;
    property Count: Integer read Get_Count;
  end;

// *********************************************************************//
// DispIntf :    IBIValuesInsertableDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {5DBB9FAF-C1EF-4326-A1A3-28F3C64656A7}
// *********************************************************************//
  IBIValuesInsertableDisp = dispinterface
    ['{5DBB9FAF-C1EF-4326-A1A3-28F3C64656A7}']
    property _NewEnum: IUnknown readonly dispid -4;
    property Item[vIndex: OleVariant]: OleVariant readonly dispid 0; default;
    property Count: Integer readonly dispid 1;
    procedure Add(vVal: OleVariant); dispid 2;
    procedure Remove(vVal: OleVariant); dispid 3;
  end;

// *********************************************************************//
// Interface :   IPredicateCompound
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {6E2B34A2-AF12-4C21-80E9-66E96D2B09A0}
// *********************************************************************//
  IPredicateCompound = interface(IPredicate)
    ['{6E2B34A2-AF12-4C21-80E9-66E96D2B09A0}']
    function Get_PredicateTypeCompound: ePredicateTypeCompound; safecall;
    procedure Set_PredicateTypeCompound(pVal: ePredicateTypeCompound); safecall;
    function Get_Predicates: IBICollectionPredicate; safecall;
    property PredicateTypeCompound: ePredicateTypeCompound read Get_PredicateTypeCompound write Set_PredicateTypeCompound;
    property Predicates: IBICollectionPredicate read Get_Predicates;
  end;

// *********************************************************************//
// DispIntf :    IPredicateCompoundDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {6E2B34A2-AF12-4C21-80E9-66E96D2B09A0}
// *********************************************************************//
  IPredicateCompoundDisp = dispinterface
    ['{6E2B34A2-AF12-4C21-80E9-66E96D2B09A0}']
    property PredicateTypeCompound: ePredicateTypeCompound dispid 100;
    property Predicates: IBICollectionPredicate readonly dispid 101;
    property PredicateType: ePredicateType readonly dispid 10;
    function Evaluate(const pObj: IDispatch): WordBool; dispid 11;
  end;

// *********************************************************************//
// Interface :   IBICollectionPredicate
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {CDD8F431-5305-4BB8-B8C2-224F70BE9998}
// *********************************************************************//
  IBICollectionPredicate = interface(IDispatch)
    ['{CDD8F431-5305-4BB8-B8C2-224F70BE9998}']
    function Get__NewEnum: IUnknown; safecall;
    function Get_Item(vIndex: OleVariant): IPredicate; safecall;
    function Get_Count: Integer; safecall;
    function AddNew(TypePredicat: ePredicateType): IPredicate; safecall;
    procedure Remove(const pObject: IPredicate); safecall;
    procedure RemoveAll; safecall;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Item[vIndex: OleVariant]: IPredicate read Get_Item; default;
    property Count: Integer read Get_Count;
  end;

// *********************************************************************//
// DispIntf :    IBICollectionPredicateDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {CDD8F431-5305-4BB8-B8C2-224F70BE9998}
// *********************************************************************//
  IBICollectionPredicateDisp = dispinterface
    ['{CDD8F431-5305-4BB8-B8C2-224F70BE9998}']
    property _NewEnum: IUnknown readonly dispid -4;
    property Item[vIndex: OleVariant]: IPredicate readonly dispid 0; default;
    property Count: Integer readonly dispid 1;
    function AddNew(TypePredicat: ePredicateType): IPredicate; dispid 2;
    procedure Remove(const pObject: IPredicate); dispid 3;
    procedure RemoveAll; dispid 4;
  end;

// *********************************************************************//
// Interface :   IPredicateBuilder
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {40B131B9-6E75-4A48-A1E4-FF903D1459F0}
// *********************************************************************//
  IPredicateBuilder = interface(IDispatch)
    ['{40B131B9-6E75-4A48-A1E4-FF903D1459F0}']
    function Create(TypePredicat: ePredicateType): IPredicate; safecall;
  end;

// *********************************************************************//
// DispIntf :    IPredicateBuilderDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {40B131B9-6E75-4A48-A1E4-FF903D1459F0}
// *********************************************************************//
  IPredicateBuilderDisp = dispinterface
    ['{40B131B9-6E75-4A48-A1E4-FF903D1459F0}']
    function Create(TypePredicat: ePredicateType): IPredicate; dispid 2;
  end;

// *********************************************************************//
// Interface :   IArrondi
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {7BCAE2C8-7BD8-4B4F-94C8-484E6F6D3AB3}
// *********************************************************************//
  IArrondi = interface(IDispatch)
    ['{7BCAE2C8-7BD8-4B4F-94C8-484E6F6D3AB3}']
    function Get_AR_Valeur: Double; safecall;
    function Get_AR_Type: ArrondiType; safecall;
    function Arrondir(dVal: Double): Double; safecall;
    property AR_Valeur: Double read Get_AR_Valeur;
    property AR_Type: ArrondiType read Get_AR_Type;
  end;

// *********************************************************************//
// DispIntf :    IArrondiDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {7BCAE2C8-7BD8-4B4F-94C8-484E6F6D3AB3}
// *********************************************************************//
  IArrondiDisp = dispinterface
    ['{7BCAE2C8-7BD8-4B4F-94C8-484E6F6D3AB3}']
    property AR_Valeur: Double readonly dispid 1;
    property AR_Type: ArrondiType readonly dispid 2;
    function Arrondir(dVal: Double): Double; dispid 3;
  end;

// *********************************************************************//
// Interface :   IBIPersistObject
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {EDB35DEF-BFE5-44FC-ACB0-41CF78E6FDDD}
// *********************************************************************//
  IBIPersistObject = interface(IDispatch)
    ['{EDB35DEF-BFE5-44FC-ACB0-41CF78E6FDDD}']
    function Get_Factory: IBITypeObjectFactory; safecall;
    function Get_OID: IBIObjectID; safecall;
    function Get_IsModified: WordBool; safecall;
    function Get_IsPersistant: WordBool; safecall;
    function Get_Stream: IBIPersistStream; safecall;
    function Cmp(const pObj: IBIPersistObject): Smallint; safecall;
    procedure Remove; safecall;
    procedure Write; safecall;
    procedure WriteDefault; safecall;
    procedure Read; safecall;
    procedure CouldModified; safecall;
    procedure SetDefault; safecall;
    procedure Refresh; safecall;
    function Get_OIDExternal: IBIObjectIDExternal; safecall;
    procedure _SetSynchronized; safecall;
    procedure WriteTo(const pStream: IStream); safecall;
    function Get_DateCreation: TDateTime; safecall;
    function Get_DateModification: TDateTime; safecall;
    property Factory: IBITypeObjectFactory read Get_Factory;
    property OID: IBIObjectID read Get_OID;
    property IsModified: WordBool read Get_IsModified;
    property IsPersistant: WordBool read Get_IsPersistant;
    property Stream: IBIPersistStream read Get_Stream;
    property OIDExternal: IBIObjectIDExternal read Get_OIDExternal;
    property DateCreation: TDateTime read Get_DateCreation;
    property DateModification: TDateTime read Get_DateModification;
  end;

// *********************************************************************//
// DispIntf :    IBIPersistObjectDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {EDB35DEF-BFE5-44FC-ACB0-41CF78E6FDDD}
// *********************************************************************//
  IBIPersistObjectDisp = dispinterface
    ['{EDB35DEF-BFE5-44FC-ACB0-41CF78E6FDDD}']
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IBITypeObjectFactory
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {9D26AC49-A0D6-4719-A19B-835168D0AAF2}
// *********************************************************************//
  IBITypeObjectFactory = interface(IDispatch)
    ['{9D26AC49-A0D6-4719-A19B-835168D0AAF2}']
    function Get_List: IBICollection; safecall;
    function Create: IBIPersistObject; safecall;
    function Read(const pOID: IBIObjectID): IBIPersistObject; safecall;
    function _QuerySynchro(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                           TypeExtraction: SynchroExtractType): IBICollection; safecall;
    function _QuerySynchroRemoved(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                                  TypeExtraction: SynchroExtractType): IBICollectionDispatch; safecall;
    function ReadFrom(const pStream: IStream): IBIPersistObject; safecall;
    function Get_ListForward: IBICollection; safecall;
    function QueryPredicate(const pPredicate: IDispatch; const sSortDescriptors: WideString): IBICollection; safecall;
    property List: IBICollection read Get_List;
    property ListForward: IBICollection read Get_ListForward;
  end;

// *********************************************************************//
// DispIntf :    IBITypeObjectFactoryDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {9D26AC49-A0D6-4719-A19B-835168D0AAF2}
// *********************************************************************//
  IBITypeObjectFactoryDisp = dispinterface
    ['{9D26AC49-A0D6-4719-A19B-835168D0AAF2}']
    property List: IBICollection readonly dispid 1;
    function Create: IBIPersistObject; dispid 2;
    function Read(const pOID: IBIObjectID): IBIPersistObject; dispid 3;
    function _QuerySynchro(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                           TypeExtraction: SynchroExtractType): IBICollection; dispid 4;
    function _QuerySynchroRemoved(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                                  TypeExtraction: SynchroExtractType): IBICollectionDispatch; dispid 5;
    function ReadFrom(const pStream: IStream): IBIPersistObject; dispid 6;
    property ListForward: IBICollection readonly dispid 7;
    function QueryPredicate(const pPredicate: IDispatch; const sSortDescriptors: WideString): IBICollection; dispid 8;
  end;

// *********************************************************************//
// Interface :   IBICollection
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {F4042937-945B-499A-81A1-B1B772D52032}
// *********************************************************************//
  IBICollection = interface(IDispatch)
    ['{F4042937-945B-499A-81A1-B1B772D52032}']
    function Get__NewEnum: IUnknown; safecall;
    function Get_Item(lIndex: Integer): IBIPersistObject; safecall;
    function Get_Count: Integer; safecall;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Item[lIndex: Integer]: IBIPersistObject read Get_Item; default;
    property Count: Integer read Get_Count;
  end;

// *********************************************************************//
// DispIntf :    IBICollectionDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {F4042937-945B-499A-81A1-B1B772D52032}
// *********************************************************************//
  IBICollectionDisp = dispinterface
    ['{F4042937-945B-499A-81A1-B1B772D52032}']
    property _NewEnum: IUnknown readonly dispid -4;
    property Item[lIndex: Integer]: IBIPersistObject readonly dispid 0; default;
    property Count: Integer readonly dispid 1;
  end;

// *********************************************************************//
// Interface :   IBIObjectID
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {971FB5E1-79A8-4A51-A47E-0286E29AFAC7}
// *********************************************************************//
  IBIObjectID = interface(IDispatch)
    ['{971FB5E1-79A8-4A51-A47E-0286E29AFAC7}']
    function Get__className: WideString; safecall;
    function Cmp(const pId: IBIObjectID): Smallint; safecall;
    function _Detach: IBIObjectID; safecall;
    property _className: WideString read Get__className;
  end;

// *********************************************************************//
// DispIntf :    IBIObjectIDDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {971FB5E1-79A8-4A51-A47E-0286E29AFAC7}
// *********************************************************************//
  IBIObjectIDDisp = dispinterface
    ['{971FB5E1-79A8-4A51-A47E-0286E29AFAC7}']
    property _className: WideString readonly dispid 1;
    function Cmp(const pId: IBIObjectID): Smallint; dispid 2;
    function _Detach: IBIObjectID; dispid 3;
  end;

// *********************************************************************//
// Interface :   IBICollectionDispatch
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {4F3E5D34-5A39-4938-B9D8-A891393F39BE}
// *********************************************************************//
  IBICollectionDispatch = interface(IDispatch)
    ['{4F3E5D34-5A39-4938-B9D8-A891393F39BE}']
    function Get__NewEnum: IUnknown; safecall;
    function Get_Item(vIndex: OleVariant): IDispatch; safecall;
    function Get_Count: Integer; safecall;
    function AddNew: IDispatch; safecall;
    procedure Remove(const pObject: IDispatch); safecall;
    procedure RemoveAll; safecall;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Item[vIndex: OleVariant]: IDispatch read Get_Item; default;
    property Count: Integer read Get_Count;
  end;

// *********************************************************************//
// DispIntf :    IBICollectionDispatchDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {4F3E5D34-5A39-4938-B9D8-A891393F39BE}
// *********************************************************************//
  IBICollectionDispatchDisp = dispinterface
    ['{4F3E5D34-5A39-4938-B9D8-A891393F39BE}']
    property _NewEnum: IUnknown readonly dispid -4;
    property Item[vIndex: OleVariant]: IDispatch readonly dispid 0; default;
    property Count: Integer readonly dispid 1;
    function AddNew: IDispatch; dispid 2;
    procedure Remove(const pObject: IDispatch); dispid 3;
    procedure RemoveAll; dispid 4;
  end;

// *********************************************************************//
// Interface :   IBIPersistStream
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {0C19AA03-32BA-4A41-A5C7-231C922E2BDD}
// *********************************************************************//
  IBIPersistStream = interface(IDispatch)
    ['{0C19AA03-32BA-4A41-A5C7-231C922E2BDD}']
    function Get_IsOpen: WordBool; safecall;
    procedure Open; safecall;
    procedure Close; safecall;
    procedure Create; safecall;
    function Get_DatabaseInfo: IDatabaseInfo; safecall;
    function Get_Synchro: ISynchroStream; safecall;
    function ReadFrom(const pStream: IStream): IBIPersistObject; safecall;
    property IsOpen: WordBool read Get_IsOpen;
    property DatabaseInfo: IDatabaseInfo read Get_DatabaseInfo;
    property Synchro: ISynchroStream read Get_Synchro;
  end;

// *********************************************************************//
// DispIntf :    IBIPersistStreamDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {0C19AA03-32BA-4A41-A5C7-231C922E2BDD}
// *********************************************************************//
  IBIPersistStreamDisp = dispinterface
    ['{0C19AA03-32BA-4A41-A5C7-231C922E2BDD}']
    property IsOpen: WordBool readonly dispid 1;
    procedure Open; dispid 2;
    procedure Close; dispid 3;
    procedure Create; dispid 4;
    property DatabaseInfo: IDatabaseInfo readonly dispid 5;
    property Synchro: ISynchroStream readonly dispid 6;
    function ReadFrom(const pStream: IStream): IBIPersistObject; dispid 7;
  end;

// *********************************************************************//
// Interface :   IDatabaseInfo
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {FC26A457-2146-4035-9A0F-9A121BC5BC3E}
// *********************************************************************//
  IDatabaseInfo = interface(IDispatch)
    ['{FC26A457-2146-4035-9A0F-9A121BC5BC3E}']
    function Get_ServerName: WideString; safecall;
    function Get_DatabaseType: DatabaseType; safecall;
    function Get_DatabaseName: WideString; safecall;
    property ServerName: WideString read Get_ServerName;
    property DatabaseType: DatabaseType read Get_DatabaseType;
    property DatabaseName: WideString read Get_DatabaseName;
  end;

// *********************************************************************//
// DispIntf :    IDatabaseInfoDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {FC26A457-2146-4035-9A0F-9A121BC5BC3E}
// *********************************************************************//
  IDatabaseInfoDisp = dispinterface
    ['{FC26A457-2146-4035-9A0F-9A121BC5BC3E}']
    property ServerName: WideString readonly dispid 10;
    property DatabaseType: DatabaseType readonly dispid 11;
    property DatabaseName: WideString readonly dispid 12;
  end;

// *********************************************************************//
// Interface :   ISynchroStream
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {453C012A-E85B-4776-ACFE-C80668BE04F9}
// *********************************************************************//
  ISynchroStream = interface(IDispatch)
    ['{453C012A-E85B-4776-ACFE-C80668BE04F9}']
    procedure BeginExtraction(const uidSiteDistant: WideString; tAbonnement: PSafeArray); safecall;
    procedure EndExtraction(bCancel: WordBool); safecall;
    function Get_IsInExtraction: WordBool; safecall;
    function Get_IdReplication: Integer; safecall;
    function Get_Guid: WideString; safecall;
    function GetAbonnementLastReplication(const UIDSideDistant: WideString; TypeAbonnement: Word): Integer; safecall;
    property IsInExtraction: WordBool read Get_IsInExtraction;
    property IdReplication: Integer read Get_IdReplication;
    property Guid: WideString read Get_Guid;
  end;

// *********************************************************************//
// DispIntf :    ISynchroStreamDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {453C012A-E85B-4776-ACFE-C80668BE04F9}
// *********************************************************************//
  ISynchroStreamDisp = dispinterface
    ['{453C012A-E85B-4776-ACFE-C80668BE04F9}']
    procedure BeginExtraction(const uidSiteDistant: WideString; 
                              tAbonnement: {NOT_OLEAUTO(PSafeArray)}OleVariant); dispid 10;
    procedure EndExtraction(bCancel: WordBool); dispid 11;
    property IsInExtraction: WordBool readonly dispid 12;
    property IdReplication: Integer readonly dispid 13;
    property Guid: WideString readonly dispid 14;
    function GetAbonnementLastReplication(const UIDSideDistant: WideString; TypeAbonnement: Word): Integer; dispid 15;
  end;

// *********************************************************************//
// Interface :   IBIObjectIDExternal
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {A70874A0-E77F-4519-9354-0C3FA1787522}
// *********************************************************************//
  IBIObjectIDExternal = interface(IDispatch)
    ['{A70874A0-E77F-4519-9354-0C3FA1787522}']
    function Get__className: WideString; safecall;
    function ToString: WideString; safecall;
    property _className: WideString read Get__className;
  end;

// *********************************************************************//
// DispIntf :    IBIObjectIDExternalDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {A70874A0-E77F-4519-9354-0C3FA1787522}
// *********************************************************************//
  IBIObjectIDExternalDisp = dispinterface
    ['{A70874A0-E77F-4519-9354-0C3FA1787522}']
    property _className: WideString readonly dispid 10;
    function ToString: WideString; dispid 11;
  end;

// *********************************************************************//
// Interface :   IBIMedia
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {BD0B5F31-E6C8-48C2-A087-4668AF53E04A}
// *********************************************************************//
  IBIMedia = interface(IBIPersistObject)
    ['{BD0B5F31-E6C8-48C2-A087-4668AF53E04A}']
    function Get_ME_Commentaire: WideString; safecall;
    procedure Set_ME_Commentaire(const pVal: WideString); safecall;
    function Get_ME_Fichier: WideString; safecall;
    procedure Set_ME_Fichier(const pVal: WideString); safecall;
    function Get_ME_TypeMIME: WideString; safecall;
    function Get_ME_Origine: WideString; safecall;
    procedure Set_ME_Origine(const pVal: WideString); safecall;
    property ME_Commentaire: WideString read Get_ME_Commentaire write Set_ME_Commentaire;
    property ME_Fichier: WideString read Get_ME_Fichier write Set_ME_Fichier;
    property ME_TypeMIME: WideString read Get_ME_TypeMIME;
    property ME_Origine: WideString read Get_ME_Origine write Set_ME_Origine;
  end;

// *********************************************************************//
// DispIntf :    IBIMediaDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {BD0B5F31-E6C8-48C2-A087-4668AF53E04A}
// *********************************************************************//
  IBIMediaDisp = dispinterface
    ['{BD0B5F31-E6C8-48C2-A087-4668AF53E04A}']
    property ME_Commentaire: WideString dispid 100;
    property ME_Fichier: WideString dispid 101;
    property ME_TypeMIME: WideString readonly dispid 102;
    property ME_Origine: WideString dispid 103;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IBICategorieCompta
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {1EB2D07A-C0C8-497F-9D9B-323076B23643}
// *********************************************************************//
  IBICategorieCompta = interface(IBIPersistObject)
    ['{1EB2D07A-C0C8-497F-9D9B-323076B23643}']
    function Get_Intitule: WideString; safecall;
    procedure Set_Intitule(const pVal: WideString); safecall;
    function Get_Domaine: DomaineType; safecall;
    property Intitule: WideString read Get_Intitule write Set_Intitule;
    property Domaine: DomaineType read Get_Domaine;
  end;

// *********************************************************************//
// DispIntf :    IBICategorieComptaDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {1EB2D07A-C0C8-497F-9D9B-323076B23643}
// *********************************************************************//
  IBICategorieComptaDisp = dispinterface
    ['{1EB2D07A-C0C8-497F-9D9B-323076B23643}']
    property Intitule: WideString dispid 100;
    property Domaine: DomaineType readonly dispid 101;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IDocValorisation
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {790843D7-1E85-45F6-B94C-BA5BD9565558}
// *********************************************************************//
  IDocValorisation = interface(IDispatch)
    ['{790843D7-1E85-45F6-B94C-BA5BD9565558}']
    function Get_TotalHT: Double; safecall;
    function Get_TotalHTBrut: Double; safecall;
    function Get_TotalHTNet: Double; safecall;
    function Get_TotalTTC: Double; safecall;
    function Get_TotalTTC_Brut: Double; safecall;
    function Get_TotalTTC_HorsEscompte: Double; safecall;
    function Get_TotalPrixRevient: Double; safecall;
    function Get_TotalQte: Double; safecall;
    function Get_TotalQteColisee: Double; safecall;
    function Get_TotalPoidsNet: Double; safecall;
    function Get_TotalPoidsBrut: Double; safecall;
    function Get_TotalHTDev: Double; safecall;
    function Get_TotalHTNetDev: Double; safecall;
    function Get_TotalTTCDev: Double; safecall;
    function Get_TotalTaxes: Double; safecall;
    function Get_TotalTaxesDev: Double; safecall;
    function Get_NetAPayer: Double; safecall;
    function Get_NetAPayerDev: Double; safecall;
    function Get_TotalAcomptes: Double; safecall;
    function Get_TotalAcomptesDev: Double; safecall;
    function Get_TotalEcheance: Double; safecall;
    function Get_TotalEcheanceDev: Double; safecall;
    function Get_TotalBonsAchat: Double; safecall;
    function Get_TotalBonsAchatDev: Double; safecall;
    function Get_Taxes: IDocValoTaxes; safecall;
    function Get_Escompte: IDocValoEscompte; safecall;
    function Get_TotalMarge: Double; safecall;
    property TotalHT: Double read Get_TotalHT;
    property TotalHTBrut: Double read Get_TotalHTBrut;
    property TotalHTNet: Double read Get_TotalHTNet;
    property TotalTTC: Double read Get_TotalTTC;
    property TotalTTC_Brut: Double read Get_TotalTTC_Brut;
    property TotalTTC_HorsEscompte: Double read Get_TotalTTC_HorsEscompte;
    property TotalPrixRevient: Double read Get_TotalPrixRevient;
    property TotalQte: Double read Get_TotalQte;
    property TotalQteColisee: Double read Get_TotalQteColisee;
    property TotalPoidsNet: Double read Get_TotalPoidsNet;
    property TotalPoidsBrut: Double read Get_TotalPoidsBrut;
    property TotalHTDev: Double read Get_TotalHTDev;
    property TotalHTNetDev: Double read Get_TotalHTNetDev;
    property TotalTTCDev: Double read Get_TotalTTCDev;
    property TotalTaxes: Double read Get_TotalTaxes;
    property TotalTaxesDev: Double read Get_TotalTaxesDev;
    property NetAPayer: Double read Get_NetAPayer;
    property NetAPayerDev: Double read Get_NetAPayerDev;
    property TotalAcomptes: Double read Get_TotalAcomptes;
    property TotalAcomptesDev: Double read Get_TotalAcomptesDev;
    property TotalEcheance: Double read Get_TotalEcheance;
    property TotalEcheanceDev: Double read Get_TotalEcheanceDev;
    property TotalBonsAchat: Double read Get_TotalBonsAchat;
    property TotalBonsAchatDev: Double read Get_TotalBonsAchatDev;
    property Taxes: IDocValoTaxes read Get_Taxes;
    property Escompte: IDocValoEscompte read Get_Escompte;
    property TotalMarge: Double read Get_TotalMarge;
  end;

// *********************************************************************//
// DispIntf :    IDocValorisationDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {790843D7-1E85-45F6-B94C-BA5BD9565558}
// *********************************************************************//
  IDocValorisationDisp = dispinterface
    ['{790843D7-1E85-45F6-B94C-BA5BD9565558}']
    property TotalHT: Double readonly dispid 1;
    property TotalHTBrut: Double readonly dispid 2;
    property TotalHTNet: Double readonly dispid 3;
    property TotalTTC: Double readonly dispid 4;
    property TotalTTC_Brut: Double readonly dispid 5;
    property TotalTTC_HorsEscompte: Double readonly dispid 6;
    property TotalPrixRevient: Double readonly dispid 7;
    property TotalQte: Double readonly dispid 8;
    property TotalQteColisee: Double readonly dispid 9;
    property TotalPoidsNet: Double readonly dispid 10;
    property TotalPoidsBrut: Double readonly dispid 11;
    property TotalHTDev: Double readonly dispid 12;
    property TotalHTNetDev: Double readonly dispid 13;
    property TotalTTCDev: Double readonly dispid 14;
    property TotalTaxes: Double readonly dispid 15;
    property TotalTaxesDev: Double readonly dispid 16;
    property NetAPayer: Double readonly dispid 17;
    property NetAPayerDev: Double readonly dispid 18;
    property TotalAcomptes: Double readonly dispid 19;
    property TotalAcomptesDev: Double readonly dispid 20;
    property TotalEcheance: Double readonly dispid 21;
    property TotalEcheanceDev: Double readonly dispid 22;
    property TotalBonsAchat: Double readonly dispid 23;
    property TotalBonsAchatDev: Double readonly dispid 24;
    property Taxes: IDocValoTaxes readonly dispid 25;
    property Escompte: IDocValoEscompte readonly dispid 26;
    property TotalMarge: Double readonly dispid 27;
  end;

// *********************************************************************//
// Interface :   IDocValoTaxes
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {7ABB0C6B-AE5E-43CE-9FC2-22294A8161A3}
// *********************************************************************//
  IDocValoTaxes = interface(IDispatch)
    ['{7ABB0C6B-AE5E-43CE-9FC2-22294A8161A3}']
    function Get__NewEnum: IUnknown; safecall;
    function Get_Item(lIndex: Integer): IDocValoTaxe; safecall;
    function Get_Count: Integer; safecall;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Item[lIndex: Integer]: IDocValoTaxe read Get_Item; default;
    property Count: Integer read Get_Count;
  end;

// *********************************************************************//
// DispIntf :    IDocValoTaxesDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {7ABB0C6B-AE5E-43CE-9FC2-22294A8161A3}
// *********************************************************************//
  IDocValoTaxesDisp = dispinterface
    ['{7ABB0C6B-AE5E-43CE-9FC2-22294A8161A3}']
    property _NewEnum: IUnknown readonly dispid -4;
    property Item[lIndex: Integer]: IDocValoTaxe readonly dispid 0; default;
    property Count: Integer readonly dispid 1;
  end;

// *********************************************************************//
// Interface :   IDocValoTaxe
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {724FD64D-A3CC-4821-A7F4-12E83E12DF60}
// *********************************************************************//
  IDocValoTaxe = interface(IDispatch)
    ['{724FD64D-A3CC-4821-A7F4-12E83E12DF60}']
    function Get_Code: WideString; safecall;
    function Get_Taux: Double; safecall;
    function Get_BaseCalcul: Double; safecall;
    function Get_Montant: Double; safecall;
    function Get_BaseCalculDev: Double; safecall;
    function Get_MontantDev: Double; safecall;
    property Code: WideString read Get_Code;
    property Taux: Double read Get_Taux;
    property BaseCalcul: Double read Get_BaseCalcul;
    property Montant: Double read Get_Montant;
    property BaseCalculDev: Double read Get_BaseCalculDev;
    property MontantDev: Double read Get_MontantDev;
  end;

// *********************************************************************//
// DispIntf :    IDocValoTaxeDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {724FD64D-A3CC-4821-A7F4-12E83E12DF60}
// *********************************************************************//
  IDocValoTaxeDisp = dispinterface
    ['{724FD64D-A3CC-4821-A7F4-12E83E12DF60}']
    property Code: WideString readonly dispid 1;
    property Taux: Double readonly dispid 2;
    property BaseCalcul: Double readonly dispid 3;
    property Montant: Double readonly dispid 4;
    property BaseCalculDev: Double readonly dispid 5;
    property MontantDev: Double readonly dispid 6;
  end;

// *********************************************************************//
// Interface :   IDocValoEscompte
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {9F1D9451-2EC0-4658-85A5-E236ED9D39D3}
// *********************************************************************//
  IDocValoEscompte = interface(IDispatch)
    ['{9F1D9451-2EC0-4658-85A5-E236ED9D39D3}']
    function Get_Taux: Double; safecall;
    function Get_BaseCalcul: Double; safecall;
    function Get_Montant: Double; safecall;
    property Taux: Double read Get_Taux;
    property BaseCalcul: Double read Get_BaseCalcul;
    property Montant: Double read Get_Montant;
  end;

// *********************************************************************//
// DispIntf :    IDocValoEscompteDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {9F1D9451-2EC0-4658-85A5-E236ED9D39D3}
// *********************************************************************//
  IDocValoEscompteDisp = dispinterface
    ['{9F1D9451-2EC0-4658-85A5-E236ED9D39D3}']
    property Taux: Double readonly dispid 1;
    property BaseCalcul: Double readonly dispid 2;
    property Montant: Double readonly dispid 3;
  end;

// *********************************************************************//
// Interface :   IFrais2
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {B798E501-D751-4D2B-ADFE-9C9411EA81EF}
// *********************************************************************//
  IFrais2 = interface(IDispatch)
    ['{B798E501-D751-4D2B-ADFE-9C9411EA81EF}']
    function Get_Frais(sElt: Smallint): IFraisElem2; safecall;
    procedure Set_Frais(sElt: Smallint; const pObject: IFraisElem2); safecall;
    function Calcul(dMontantUnitaire: Double; dQte: Double; NbDecimalResult: Smallint): Double; safecall;
    property Frais[sElt: Smallint]: IFraisElem2 read Get_Frais write Set_Frais;
  end;

// *********************************************************************//
// DispIntf :    IFrais2Disp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {B798E501-D751-4D2B-ADFE-9C9411EA81EF}
// *********************************************************************//
  IFrais2Disp = dispinterface
    ['{B798E501-D751-4D2B-ADFE-9C9411EA81EF}']
    property Frais[sElt: Smallint]: IFraisElem2 dispid 1;
    function Calcul(dMontantUnitaire: Double; dQte: Double; NbDecimalResult: Smallint): Double; dispid 2;
  end;

// *********************************************************************//
// Interface :   IFraisElem2
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {C1A25544-B9B7-43A1-9617-7BD2321489C4}
// *********************************************************************//
  IFraisElem2 = interface(IDispatch)
    ['{C1A25544-B9B7-43A1-9617-7BD2321489C4}']
    function Get_FR_Denomination: WideString; safecall;
    procedure Set_FR_Denomination(const pVal: WideString); safecall;
    function Get_Remise: IRemise2; safecall;
    procedure Set_Remise(const pObject: IRemise2); safecall;
    function Calcul(dMontantUnitaire: Double; dQte: Double; NbDecimalResult: Smallint): Double; safecall;
    property FR_Denomination: WideString read Get_FR_Denomination write Set_FR_Denomination;
    property Remise: IRemise2 read Get_Remise write Set_Remise;
  end;

// *********************************************************************//
// DispIntf :    IFraisElem2Disp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {C1A25544-B9B7-43A1-9617-7BD2321489C4}
// *********************************************************************//
  IFraisElem2Disp = dispinterface
    ['{C1A25544-B9B7-43A1-9617-7BD2321489C4}']
    property FR_Denomination: WideString dispid 1;
    property Remise: IRemise2 dispid 2;
    function Calcul(dMontantUnitaire: Double; dQte: Double; NbDecimalResult: Smallint): Double; dispid 3;
  end;

// *********************************************************************//
// Interface :   IRemise2
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {11258EBC-3FC0-4461-83F1-AFFBEBF75D10}
// *********************************************************************//
  IRemise2 = interface(IDispatch)
    ['{11258EBC-3FC0-4461-83F1-AFFBEBF75D10}']
    function Get_Remise(sElt: Smallint): IRemiseElem2; safecall;
    procedure Set_Remise(sElt: Smallint; const pObject: IRemiseElem2); safecall;
    function Calcul(dVal: Double; dQte: Double; NbDecimalResult: Smallint): Double; safecall;
    function CalculDevise(dVal: Double; dQte: Double; sDate: TDateTime; const pDevise: IBPDevise2): Double; safecall;
    function ToString: WideString; safecall;
    procedure FromString(const bVal: WideString); safecall;
    property Remise[sElt: Smallint]: IRemiseElem2 read Get_Remise write Set_Remise;
  end;

// *********************************************************************//
// DispIntf :    IRemise2Disp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {11258EBC-3FC0-4461-83F1-AFFBEBF75D10}
// *********************************************************************//
  IRemise2Disp = dispinterface
    ['{11258EBC-3FC0-4461-83F1-AFFBEBF75D10}']
    property Remise[sElt: Smallint]: IRemiseElem2 dispid 1;
    function Calcul(dVal: Double; dQte: Double; NbDecimalResult: Smallint): Double; dispid 2;
    function CalculDevise(dVal: Double; dQte: Double; sDate: TDateTime; const pDevise: IBPDevise2): Double; dispid 3;
    function ToString: WideString; dispid 4;
    procedure FromString(const bVal: WideString); dispid 5;
  end;

// *********************************************************************//
// Interface :   IRemiseElem2
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {B87AA1B8-BEB8-4DFD-BEC4-9F25CAE433D4}
// *********************************************************************//
  IRemiseElem2 = interface(IDispatch)
    ['{B87AA1B8-BEB8-4DFD-BEC4-9F25CAE433D4}']
    function Get_REM_Valeur: Double; safecall;
    procedure Set_REM_Valeur(pVal: Double); safecall;
    function Get_REM_Type: RemiseType; safecall;
    procedure Set_REM_Type(pVal: RemiseType); safecall;
    function Calcul(dVal: Double; dQte: Double; NbDecimalResult: Smallint): Double; safecall;
    function CalculDevise(dVal: Double; dQte: Double; sDate: TDateTime; const pDevise: IBPDevise2): Double; safecall;
    function ToString: WideString; safecall;
    procedure FromString(const sVal: WideString); safecall;
    property REM_Valeur: Double read Get_REM_Valeur write Set_REM_Valeur;
    property REM_Type: RemiseType read Get_REM_Type write Set_REM_Type;
  end;

// *********************************************************************//
// DispIntf :    IRemiseElem2Disp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {B87AA1B8-BEB8-4DFD-BEC4-9F25CAE433D4}
// *********************************************************************//
  IRemiseElem2Disp = dispinterface
    ['{B87AA1B8-BEB8-4DFD-BEC4-9F25CAE433D4}']
    property REM_Valeur: Double dispid 1;
    property REM_Type: RemiseType dispid 2;
    function Calcul(dVal: Double; dQte: Double; NbDecimalResult: Smallint): Double; dispid 3;
    function CalculDevise(dVal: Double; dQte: Double; sDate: TDateTime; const pDevise: IBPDevise2): Double; dispid 4;
    function ToString: WideString; dispid 5;
    procedure FromString(const sVal: WideString); dispid 6;
  end;

// *********************************************************************//
// Interface :   IBPDevise2
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {02658A6A-195E-4383-A18B-EB162ED46D5F}
// *********************************************************************//
  IBPDevise2 = interface(IBIPersistObject)
    ['{02658A6A-195E-4383-A18B-EB162ED46D5F}']
    function Get_FactoryDevise: IBPDeviseFactory2; safecall;
    function Get_D_Intitule: WideString; safecall;
    procedure Set_D_Intitule(const pVal: WideString); safecall;
    function Get_D_Format: WideString; safecall;
    procedure Set_D_Format(const pVal: WideString); safecall;
    function Get_D_Cours: Double; safecall;
    procedure Set_D_Cours(pVal: Double); safecall;
    function Get_D_CoursP: Double; safecall;
    procedure Set_D_CoursP(pVal: Double); safecall;
    function Get_D_Monnaie: WideString; safecall;
    procedure Set_D_Monnaie(const pVal: WideString); safecall;
    function Get_D_SousMonnaie: WideString; safecall;
    procedure Set_D_SousMonnaie(const pVal: WideString); safecall;
    function Get_D_CodeISO: WideString; safecall;
    procedure Set_D_CodeISO(const pVal: WideString); safecall;
    function Get_D_Sigle: WideString; safecall;
    procedure Set_D_Sigle(const pVal: WideString); safecall;
    function Get_D_Mode: DeviseMode; safecall;
    procedure Set_D_Mode(pVal: DeviseMode); safecall;
    function Get_DeviseCot: IBPDevise2; safecall;
    procedure Set_DeviseCot(const pDevise: IBPDevise2); safecall;
    function Get_D_CoursClot: Double; safecall;
    procedure Set_D_CoursClot(pVal: Double); safecall;
    function Get_D_AncDate: TDateTime; safecall;
    procedure Set_D_AncDate(pVal: TDateTime); safecall;
    function Get_D_AncCours: Double; safecall;
    procedure Set_D_AncCours(pVal: Double); safecall;
    function Get_D_AncMode: DeviseMode; safecall;
    procedure Set_D_AncMode(pVal: DeviseMode); safecall;
    function Get_DeviseAncCot: IBPDevise2; safecall;
    procedure Set_DeviseAncCot(const pDevise: IBPDevise2); safecall;
    function Get_D_CodeRemise: DeviseRemise; safecall;
    procedure Set_D_CodeRemise(pVal: DeviseRemise); safecall;
    function Get_D_Euro: WordBool; safecall;
    procedure Set_D_Euro(pVal: WordBool); safecall;
    function Convert(const pDevise: IBPDevise2; dVal: Double): Double; safecall;
    function Get_D_CodeISONum: WideString; safecall;
    procedure Set_D_CodeISONum(const pVal: WideString); safecall;
    property FactoryDevise: IBPDeviseFactory2 read Get_FactoryDevise;
    property D_Intitule: WideString read Get_D_Intitule write Set_D_Intitule;
    property D_Format: WideString read Get_D_Format write Set_D_Format;
    property D_Cours: Double read Get_D_Cours write Set_D_Cours;
    property D_CoursP: Double read Get_D_CoursP write Set_D_CoursP;
    property D_Monnaie: WideString read Get_D_Monnaie write Set_D_Monnaie;
    property D_SousMonnaie: WideString read Get_D_SousMonnaie write Set_D_SousMonnaie;
    property D_CodeISO: WideString read Get_D_CodeISO write Set_D_CodeISO;
    property D_Sigle: WideString read Get_D_Sigle write Set_D_Sigle;
    property D_Mode: DeviseMode read Get_D_Mode write Set_D_Mode;
    property DeviseCot: IBPDevise2 read Get_DeviseCot write Set_DeviseCot;
    property D_CoursClot: Double read Get_D_CoursClot write Set_D_CoursClot;
    property D_AncDate: TDateTime read Get_D_AncDate write Set_D_AncDate;
    property D_AncCours: Double read Get_D_AncCours write Set_D_AncCours;
    property D_AncMode: DeviseMode read Get_D_AncMode write Set_D_AncMode;
    property DeviseAncCot: IBPDevise2 read Get_DeviseAncCot write Set_DeviseAncCot;
    property D_CodeRemise: DeviseRemise read Get_D_CodeRemise write Set_D_CodeRemise;
    property D_Euro: WordBool read Get_D_Euro write Set_D_Euro;
    property D_CodeISONum: WideString read Get_D_CodeISONum write Set_D_CodeISONum;
  end;

// *********************************************************************//
// DispIntf :    IBPDevise2Disp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {02658A6A-195E-4383-A18B-EB162ED46D5F}
// *********************************************************************//
  IBPDevise2Disp = dispinterface
    ['{02658A6A-195E-4383-A18B-EB162ED46D5F}']
    property FactoryDevise: IBPDeviseFactory2 readonly dispid 100;
    property D_Intitule: WideString dispid 102;
    property D_Format: WideString dispid 103;
    property D_Cours: Double dispid 104;
    property D_CoursP: Double dispid 105;
    property D_Monnaie: WideString dispid 106;
    property D_SousMonnaie: WideString dispid 107;
    property D_CodeISO: WideString dispid 108;
    property D_Sigle: WideString dispid 109;
    property D_Mode: DeviseMode dispid 110;
    property DeviseCot: IBPDevise2 dispid 111;
    property D_CoursClot: Double dispid 112;
    property D_AncDate: TDateTime dispid 113;
    property D_AncCours: Double dispid 114;
    property D_AncMode: DeviseMode dispid 115;
    property DeviseAncCot: IBPDevise2 dispid 116;
    property D_CodeRemise: DeviseRemise dispid 117;
    property D_Euro: WordBool dispid 118;
    function Convert(const pDevise: IBPDevise2; dVal: Double): Double; dispid 119;
    property D_CodeISONum: WideString dispid 120;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IBPDeviseFactory2
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {A45F660A-3080-4619-9A6E-A6EB8E29DF97}
// *********************************************************************//
  IBPDeviseFactory2 = interface(IBITypeObjectFactory)
    ['{A45F660A-3080-4619-9A6E-A6EB8E29DF97}']
    function ExistIntitule(const sIntitule: WideString): WordBool; safecall;
    function ReadIntitule(const sIntitule: WideString): IBPDevise2; safecall;
    function ExistCodeISO(const sCodeISO: WideString): WordBool; safecall;
    function ReadCodeISO(const sCodeISO: WideString): IBPDevise2; safecall;
  end;

// *********************************************************************//
// DispIntf :    IBPDeviseFactory2Disp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {A45F660A-3080-4619-9A6E-A6EB8E29DF97}
// *********************************************************************//
  IBPDeviseFactory2Disp = dispinterface
    ['{A45F660A-3080-4619-9A6E-A6EB8E29DF97}']
    function ExistIntitule(const sIntitule: WideString): WordBool; dispid 10;
    function ReadIntitule(const sIntitule: WideString): IBPDevise2; dispid 11;
    function ExistCodeISO(const sCodeISO: WideString): WordBool; dispid 12;
    function ReadCodeISO(const sCodeISO: WideString): IBPDevise2; dispid 13;
    property List: IBICollection readonly dispid 1;
    function Create: IBIPersistObject; dispid 2;
    function Read(const pOID: IBIObjectID): IBIPersistObject; dispid 3;
    function _QuerySynchro(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                           TypeExtraction: SynchroExtractType): IBICollection; dispid 4;
    function _QuerySynchroRemoved(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                                  TypeExtraction: SynchroExtractType): IBICollectionDispatch; dispid 5;
    function ReadFrom(const pStream: IStream): IBIPersistObject; dispid 6;
    property ListForward: IBICollection readonly dispid 7;
    function QueryPredicate(const pPredicate: IDispatch; const sSortDescriptors: WideString): IBICollection; dispid 8;
  end;

// *********************************************************************//
// Interface :   IAdresse
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {03E0F077-29D3-442D-A9AB-D21CE4112A9A}
// *********************************************************************//
  IAdresse = interface(IDispatch)
    ['{03E0F077-29D3-442D-A9AB-D21CE4112A9A}']
    function Get_Adresse: WideString; safecall;
    procedure Set_Adresse(const pVal: WideString); safecall;
    function Get_Complement: WideString; safecall;
    procedure Set_Complement(const pVal: WideString); safecall;
    function Get_CodePostal: WideString; safecall;
    procedure Set_CodePostal(const pVal: WideString); safecall;
    function Get_Ville: WideString; safecall;
    procedure Set_Ville(const pVal: WideString); safecall;
    function Get_CodeRegion: WideString; safecall;
    procedure Set_CodeRegion(const pVal: WideString); safecall;
    function Get_Pays: WideString; safecall;
    procedure Set_Pays(const pVal: WideString); safecall;
    function Get_bGereCodeRegion: WordBool; safecall;
    function Get_bGerePays: WordBool; safecall;
    property Adresse: WideString read Get_Adresse write Set_Adresse;
    property Complement: WideString read Get_Complement write Set_Complement;
    property CodePostal: WideString read Get_CodePostal write Set_CodePostal;
    property Ville: WideString read Get_Ville write Set_Ville;
    property CodeRegion: WideString read Get_CodeRegion write Set_CodeRegion;
    property Pays: WideString read Get_Pays write Set_Pays;
    property bGereCodeRegion: WordBool read Get_bGereCodeRegion;
    property bGerePays: WordBool read Get_bGerePays;
  end;

// *********************************************************************//
// DispIntf :    IAdresseDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {03E0F077-29D3-442D-A9AB-D21CE4112A9A}
// *********************************************************************//
  IAdresseDisp = dispinterface
    ['{03E0F077-29D3-442D-A9AB-D21CE4112A9A}']
    property Adresse: WideString dispid 1;
    property Complement: WideString dispid 2;
    property CodePostal: WideString dispid 3;
    property Ville: WideString dispid 4;
    property CodeRegion: WideString dispid 5;
    property Pays: WideString dispid 6;
    property bGereCodeRegion: WordBool readonly dispid 7;
    property bGerePays: WordBool readonly dispid 8;
  end;

// *********************************************************************//
// Interface :   ITelecom
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {089B1AA4-8800-4FCB-9013-2CCA6F9D9F7A}
// *********************************************************************//
  ITelecom = interface(IDispatch)
    ['{089B1AA4-8800-4FCB-9013-2CCA6F9D9F7A}']
    function Get_Telephone: WideString; safecall;
    procedure Set_Telephone(const pVal: WideString); safecall;
    function Get_Telecopie: WideString; safecall;
    procedure Set_Telecopie(const pVal: WideString); safecall;
    function Get_Portable: WideString; safecall;
    procedure Set_Portable(const pVal: WideString); safecall;
    function Get_EMail: WideString; safecall;
    procedure Set_EMail(const pVal: WideString); safecall;
    function Get_Site: WideString; safecall;
    procedure Set_Site(const pVal: WideString); safecall;
    function Get_bGereTelecopie: WordBool; safecall;
    function Get_bGerePortable: WordBool; safecall;
    function Get_bGereEMail: WordBool; safecall;
    function Get_bGereSite: WordBool; safecall;
    property Telephone: WideString read Get_Telephone write Set_Telephone;
    property Telecopie: WideString read Get_Telecopie write Set_Telecopie;
    property Portable: WideString read Get_Portable write Set_Portable;
    property EMail: WideString read Get_EMail write Set_EMail;
    property Site: WideString read Get_Site write Set_Site;
    property bGereTelecopie: WordBool read Get_bGereTelecopie;
    property bGerePortable: WordBool read Get_bGerePortable;
    property bGereEMail: WordBool read Get_bGereEMail;
    property bGereSite: WordBool read Get_bGereSite;
  end;

// *********************************************************************//
// DispIntf :    ITelecomDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {089B1AA4-8800-4FCB-9013-2CCA6F9D9F7A}
// *********************************************************************//
  ITelecomDisp = dispinterface
    ['{089B1AA4-8800-4FCB-9013-2CCA6F9D9F7A}']
    property Telephone: WideString dispid 1;
    property Telecopie: WideString dispid 2;
    property Portable: WideString dispid 3;
    property EMail: WideString dispid 4;
    property Site: WideString dispid 5;
    property bGereTelecopie: WordBool readonly dispid 6;
    property bGerePortable: WordBool readonly dispid 7;
    property bGereEMail: WordBool readonly dispid 8;
    property bGereSite: WordBool readonly dispid 9;
  end;

// *********************************************************************//
// Interface :   ITarif2
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {54EE0721-CF74-48BB-ABE3-54A4E62A18A9}
// *********************************************************************//
  ITarif2 = interface(IDispatch)
    ['{54EE0721-CF74-48BB-ABE3-54A4E62A18A9}']
    function Get_Prix: Double; safecall;
    function Get_PrixDevise: Double; safecall;
    function Get_IsHorsRemise: WordBool; safecall;
    function Get_Remise: IRemise2; safecall;
    function Get_Reference: WideString; safecall;
    function Get_CodeBarre: WideString; safecall;
    function Get_Devise: IDevise; safecall;
    property Prix: Double read Get_Prix;
    property PrixDevise: Double read Get_PrixDevise;
    property IsHorsRemise: WordBool read Get_IsHorsRemise;
    property Remise: IRemise2 read Get_Remise;
    property Reference: WideString read Get_Reference;
    property CodeBarre: WideString read Get_CodeBarre;
    property Devise: IDevise read Get_Devise;
  end;

// *********************************************************************//
// DispIntf :    ITarif2Disp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {54EE0721-CF74-48BB-ABE3-54A4E62A18A9}
// *********************************************************************//
  ITarif2Disp = dispinterface
    ['{54EE0721-CF74-48BB-ABE3-54A4E62A18A9}']
    property Prix: Double readonly dispid 1;
    property PrixDevise: Double readonly dispid 2;
    property IsHorsRemise: WordBool readonly dispid 3;
    property Remise: IRemise2 readonly dispid 4;
    property Reference: WideString readonly dispid 5;
    property CodeBarre: WideString readonly dispid 6;
    property Devise: IDevise readonly dispid 7;
  end;

// *********************************************************************//
// Interface :   IDevise
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {26555D4C-EC13-4B47-A38E-35EAAA45BECF}
// *********************************************************************//
  IDevise = interface(IDispatch)
    ['{26555D4C-EC13-4B47-A38E-35EAAA45BECF}']
    function Get_D_Intitule: WideString; safecall;
    function Get_D_Format: WideString; safecall;
    function Get_D_Cours: Double; safecall;
    function Get_D_CoursP: Double; safecall;
    function Get_D_Monnaie: WideString; safecall;
    function Get_D_SousMonnaie: WideString; safecall;
    function Get_D_CodeISO: WideString; safecall;
    function Get_D_Sigle: WideString; safecall;
    function Get_D_Mode: DeviseMode; safecall;
    function Get_D_CoursClot: Double; safecall;
    function Get_D_AncDate: TDateTime; safecall;
    function Get_D_AncCours: Double; safecall;
    function Get_D_AncMode: DeviseMode; safecall;
    function Get_D_CodeRemise: DeviseRemise; safecall;
    function Get_D_Euro: WordBool; safecall;
    function Convert(const pDevise: IDevise; dVal: Double): Double; safecall;
    function Get_D_CodeISONum: WideString; safecall;
    property D_Intitule: WideString read Get_D_Intitule;
    property D_Format: WideString read Get_D_Format;
    property D_Cours: Double read Get_D_Cours;
    property D_CoursP: Double read Get_D_CoursP;
    property D_Monnaie: WideString read Get_D_Monnaie;
    property D_SousMonnaie: WideString read Get_D_SousMonnaie;
    property D_CodeISO: WideString read Get_D_CodeISO;
    property D_Sigle: WideString read Get_D_Sigle;
    property D_Mode: DeviseMode read Get_D_Mode;
    property D_CoursClot: Double read Get_D_CoursClot;
    property D_AncDate: TDateTime read Get_D_AncDate;
    property D_AncCours: Double read Get_D_AncCours;
    property D_AncMode: DeviseMode read Get_D_AncMode;
    property D_CodeRemise: DeviseRemise read Get_D_CodeRemise;
    property D_Euro: WordBool read Get_D_Euro;
    property D_CodeISONum: WideString read Get_D_CodeISONum;
  end;

// *********************************************************************//
// DispIntf :    IDeviseDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {26555D4C-EC13-4B47-A38E-35EAAA45BECF}
// *********************************************************************//
  IDeviseDisp = dispinterface
    ['{26555D4C-EC13-4B47-A38E-35EAAA45BECF}']
    property D_Intitule: WideString readonly dispid 2;
    property D_Format: WideString readonly dispid 3;
    property D_Cours: Double readonly dispid 4;
    property D_CoursP: Double readonly dispid 5;
    property D_Monnaie: WideString readonly dispid 6;
    property D_SousMonnaie: WideString readonly dispid 7;
    property D_CodeISO: WideString readonly dispid 8;
    property D_Sigle: WideString readonly dispid 9;
    property D_Mode: DeviseMode readonly dispid 10;
    property D_CoursClot: Double readonly dispid 11;
    property D_AncDate: TDateTime readonly dispid 12;
    property D_AncCours: Double readonly dispid 13;
    property D_AncMode: DeviseMode readonly dispid 14;
    property D_CodeRemise: DeviseRemise readonly dispid 15;
    property D_Euro: WordBool readonly dispid 16;
    function Convert(const pDevise: IDevise; dVal: Double): Double; dispid 17;
    property D_CodeISONum: WideString readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   ITarifVente2
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {18AF0D16-E2FE-4C21-B399-50B060BEC3E2}
// *********************************************************************//
  ITarifVente2 = interface(ITarif2)
    ['{18AF0D16-E2FE-4C21-B399-50B060BEC3E2}']
    function Get_Coefficient: Double; safecall;
    function Get_PrixTTC: WordBool; safecall;
    function Get_Arrondi: IArrondi; safecall;
    function Get_Calcul: WordBool; safecall;
    property Coefficient: Double read Get_Coefficient;
    property PrixTTC: WordBool read Get_PrixTTC;
    property Arrondi: IArrondi read Get_Arrondi;
    property Calcul: WordBool read Get_Calcul;
  end;

// *********************************************************************//
// DispIntf :    ITarifVente2Disp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {18AF0D16-E2FE-4C21-B399-50B060BEC3E2}
// *********************************************************************//
  ITarifVente2Disp = dispinterface
    ['{18AF0D16-E2FE-4C21-B399-50B060BEC3E2}']
    property Coefficient: Double readonly dispid 10;
    property PrixTTC: WordBool readonly dispid 11;
    property Arrondi: IArrondi readonly dispid 12;
    property Calcul: WordBool readonly dispid 13;
    property Prix: Double readonly dispid 1;
    property PrixDevise: Double readonly dispid 2;
    property IsHorsRemise: WordBool readonly dispid 3;
    property Remise: IRemise2 readonly dispid 4;
    property Reference: WideString readonly dispid 5;
    property CodeBarre: WideString readonly dispid 6;
    property Devise: IDevise readonly dispid 7;
  end;

// *********************************************************************//
// Interface :   ITarifAchat2
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {11D2FA93-8598-4475-A940-C5276357BCBE}
// *********************************************************************//
  ITarifAchat2 = interface(ITarif2)
    ['{11D2FA93-8598-4475-A940-C5276357BCBE}']
    function Get_Colisage: Double; safecall;
    function Get_DelaiAppro: Smallint; safecall;
    function Get_QteMini: Double; safecall;
    function Get_Garantie: Smallint; safecall;
    function Get_QteReelle: Double; safecall;
    property Colisage: Double read Get_Colisage;
    property DelaiAppro: Smallint read Get_DelaiAppro;
    property QteMini: Double read Get_QteMini;
    property Garantie: Smallint read Get_Garantie;
    property QteReelle: Double read Get_QteReelle;
  end;

// *********************************************************************//
// DispIntf :    ITarifAchat2Disp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {11D2FA93-8598-4475-A940-C5276357BCBE}
// *********************************************************************//
  ITarifAchat2Disp = dispinterface
    ['{11D2FA93-8598-4475-A940-C5276357BCBE}']
    property Colisage: Double readonly dispid 10;
    property DelaiAppro: Smallint readonly dispid 11;
    property QteMini: Double readonly dispid 12;
    property Garantie: Smallint readonly dispid 13;
    property QteReelle: Double readonly dispid 14;
    property Prix: Double readonly dispid 1;
    property PrixDevise: Double readonly dispid 2;
    property IsHorsRemise: WordBool readonly dispid 3;
    property Remise: IRemise2 readonly dispid 4;
    property Reference: WideString readonly dispid 5;
    property CodeBarre: WideString readonly dispid 6;
    property Devise: IDevise readonly dispid 7;
  end;

// *********************************************************************//
// Interface :   IBPAnalytiqueRupture
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {8FC21F33-1F4D-44A6-89A4-1F9196195BD2}
// *********************************************************************//
  IBPAnalytiqueRupture = interface(IDispatch)
    ['{8FC21F33-1F4D-44A6-89A4-1F9196195BD2}']
    function Get_Intitule: WideString; safecall;
    procedure Set_Intitule(const pVal: WideString); safecall;
    function Get_Lg: Smallint; safecall;
    procedure Set_Lg(pVal: Smallint); safecall;
    function Get_type_: AnalytiqueRuptureType; safecall;
    procedure Set_type_(pVal: AnalytiqueRuptureType); safecall;
    property Intitule: WideString read Get_Intitule write Set_Intitule;
    property Lg: Smallint read Get_Lg write Set_Lg;
    property type_: AnalytiqueRuptureType read Get_type_ write Set_type_;
  end;

// *********************************************************************//
// DispIntf :    IBPAnalytiqueRuptureDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {8FC21F33-1F4D-44A6-89A4-1F9196195BD2}
// *********************************************************************//
  IBPAnalytiqueRuptureDisp = dispinterface
    ['{8FC21F33-1F4D-44A6-89A4-1F9196195BD2}']
    property Intitule: WideString dispid 101;
    property Lg: Smallint dispid 102;
    property type_: AnalytiqueRuptureType dispid 103;
  end;

// *********************************************************************//
// Interface :   IDocLigneValorisation
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {1BBB8B46-588F-4718-BDCF-3E4E79F28346}
// *********************************************************************//
  IDocLigneValorisation = interface(IDispatch)
    ['{1BBB8B46-588F-4718-BDCF-3E4E79F28346}']
    function Get_HT: Double; safecall;
    function Get_HTBrut: Double; safecall;
    function Get_HTNet: Double; safecall;
    function Get_TTC: Double; safecall;
    function Get_TTC_Brut: Double; safecall;
    function Get_TTC_HorsEscompte: Double; safecall;
    function Get_PrixRevient: Double; safecall;
    function Get_Qte: Double; safecall;
    function Get_QteColisee: Double; safecall;
    function Get_PoidsNet: Double; safecall;
    function Get_PoidsBrut: Double; safecall;
    function Get_HTDev: Double; safecall;
    function Get_HTNetDev: Double; safecall;
    function Get_TTCDev: Double; safecall;
    function Get_TotalTaxes: Double; safecall;
    function Get_TotalTaxesDev: Double; safecall;
    function Get_Taxes: IDocValoTaxes; safecall;
    function Get_Marge: Double; safecall;
    function Get_PU_Net: Double; safecall;
    function Get_PU_NetDev: Double; safecall;
    property HT: Double read Get_HT;
    property HTBrut: Double read Get_HTBrut;
    property HTNet: Double read Get_HTNet;
    property TTC: Double read Get_TTC;
    property TTC_Brut: Double read Get_TTC_Brut;
    property TTC_HorsEscompte: Double read Get_TTC_HorsEscompte;
    property PrixRevient: Double read Get_PrixRevient;
    property Qte: Double read Get_Qte;
    property QteColisee: Double read Get_QteColisee;
    property PoidsNet: Double read Get_PoidsNet;
    property PoidsBrut: Double read Get_PoidsBrut;
    property HTDev: Double read Get_HTDev;
    property HTNetDev: Double read Get_HTNetDev;
    property TTCDev: Double read Get_TTCDev;
    property TotalTaxes: Double read Get_TotalTaxes;
    property TotalTaxesDev: Double read Get_TotalTaxesDev;
    property Taxes: IDocValoTaxes read Get_Taxes;
    property Marge: Double read Get_Marge;
    property PU_Net: Double read Get_PU_Net;
    property PU_NetDev: Double read Get_PU_NetDev;
  end;

// *********************************************************************//
// DispIntf :    IDocLigneValorisationDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {1BBB8B46-588F-4718-BDCF-3E4E79F28346}
// *********************************************************************//
  IDocLigneValorisationDisp = dispinterface
    ['{1BBB8B46-588F-4718-BDCF-3E4E79F28346}']
    property HT: Double readonly dispid 1;
    property HTBrut: Double readonly dispid 2;
    property HTNet: Double readonly dispid 3;
    property TTC: Double readonly dispid 4;
    property TTC_Brut: Double readonly dispid 5;
    property TTC_HorsEscompte: Double readonly dispid 6;
    property PrixRevient: Double readonly dispid 7;
    property Qte: Double readonly dispid 8;
    property QteColisee: Double readonly dispid 9;
    property PoidsNet: Double readonly dispid 10;
    property PoidsBrut: Double readonly dispid 11;
    property HTDev: Double readonly dispid 12;
    property HTNetDev: Double readonly dispid 13;
    property TTCDev: Double readonly dispid 14;
    property TotalTaxes: Double readonly dispid 15;
    property TotalTaxesDev: Double readonly dispid 16;
    property Taxes: IDocValoTaxes readonly dispid 25;
    property Marge: Double readonly dispid 27;
    property PU_Net: Double readonly dispid 28;
    property PU_NetDev: Double readonly dispid 29;
  end;

// *********************************************************************//
// Interface :   ITransformation
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {9CFC5621-A9C5-4CB7-8F59-5D43528CB085}
// *********************************************************************//
  ITransformation = interface(IDispatch)
    ['{9CFC5621-A9C5-4CB7-8F59-5D43528CB085}']
    function Get_Vente: ITransformationVente; safecall;
    function Get_Achat: ITransformationAchat; safecall;
    property Vente: ITransformationVente read Get_Vente;
    property Achat: ITransformationAchat read Get_Achat;
  end;

// *********************************************************************//
// DispIntf :    ITransformationDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {9CFC5621-A9C5-4CB7-8F59-5D43528CB085}
// *********************************************************************//
  ITransformationDisp = dispinterface
    ['{9CFC5621-A9C5-4CB7-8F59-5D43528CB085}']
    property Vente: ITransformationVente readonly dispid 10;
    property Achat: ITransformationAchat readonly dispid 11;
  end;

// *********************************************************************//
// Interface :   ITransformationVente
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {3C639ED8-ABBF-4449-9B86-510624C35C24}
// *********************************************************************//
  ITransformationVente = interface(IDispatch)
    ['{3C639ED8-ABBF-4449-9B86-510624C35C24}']
    function CreateProcess_Commander: IPMDocTransformer; safecall;
    function CreateProcess_Livrer: IPMDocTransformer; safecall;
    function CreateProcess_Facturer: IPMDocTransformer; safecall;
  end;

// *********************************************************************//
// DispIntf :    ITransformationVenteDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {3C639ED8-ABBF-4449-9B86-510624C35C24}
// *********************************************************************//
  ITransformationVenteDisp = dispinterface
    ['{3C639ED8-ABBF-4449-9B86-510624C35C24}']
    function CreateProcess_Commander: IPMDocTransformer; dispid 10;
    function CreateProcess_Livrer: IPMDocTransformer; dispid 11;
    function CreateProcess_Facturer: IPMDocTransformer; dispid 12;
  end;

// *********************************************************************//
// Interface :   IPMProcess
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {CA25DA28-1153-4BE1-9849-403D1D8B2A3F}
// *********************************************************************//
  IPMProcess = interface(IDispatch)
    ['{CA25DA28-1153-4BE1-9849-403D1D8B2A3F}']
    procedure Process; safecall;
    function Get_CanProcess: WordBool; safecall;
    function Get_Errors: IFailInfoCol; safecall;
    function Get_Transactional: WordBool; safecall;
    procedure Set_Transactional(pVal: WordBool); safecall;
    property CanProcess: WordBool read Get_CanProcess;
    property Errors: IFailInfoCol read Get_Errors;
    property Transactional: WordBool read Get_Transactional write Set_Transactional;
  end;

// *********************************************************************//
// DispIntf :    IPMProcessDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {CA25DA28-1153-4BE1-9849-403D1D8B2A3F}
// *********************************************************************//
  IPMProcessDisp = dispinterface
    ['{CA25DA28-1153-4BE1-9849-403D1D8B2A3F}']
    procedure Process; dispid 10;
    property CanProcess: WordBool readonly dispid 11;
    property Errors: IFailInfoCol readonly dispid 12;
    property Transactional: WordBool dispid 13;
  end;

// *********************************************************************//
// Interface :   IPMDocTransformer
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {3B2FF624-53B6-4F75-8A34-41CFDA72646F}
// *********************************************************************//
  IPMDocTransformer = interface(IPMProcess)
    ['{3B2FF624-53B6-4F75-8A34-41CFDA72646F}']
    procedure _Reserved; safecall;
    function Get_DO_Date: TDateTime; safecall;
    procedure Set_DO_Date(pVal: TDateTime); safecall;
    function Get_RecalculFraisExpedition: WordBool; safecall;
    procedure Set_RecalculFraisExpedition(pVal: WordBool); safecall;
    procedure AddDocument(const pDoc: IBODocument3); safecall;
    procedure RmvDocument(const pDoc: IBODocument3); safecall;
    procedure AddDocumentLigne(const pLigne: IBODocumentLigne3); safecall;
    procedure RmvDocumentLigne(const pLigne: IBODocumentLigne3); safecall;
    procedure AddDocumentDestination(const pDoc: IBODocument3); safecall;
    procedure RmvDocumentDestination(const pDoc: IBODocument3); safecall;
    function Get_UserLotsToUse(const pLigne: IBODocumentLigne3): IBICollectionDispatch; safecall;
    function Get_UserLotsQteRestantAFournir(const pLigne: IBODocumentLigne3): Double; safecall;
    function Get_ListDocumentsATransformer: IBICollection; safecall;
    function Get_ListLignesATransformer: IBICollection; safecall;
    function Get_ListDocumentsResult: IBICollection; safecall;
    function Get_ListLignesResult: IBICollection; safecall;
    function Get_ListDocumentsDestination: IBICollection; safecall;
    function Get_MajCoursType: TransfoMajCoursType; safecall;
    procedure Set_MajCoursType(pVal: TransfoMajCoursType); safecall;
    function Get_MajTauxTaxe: WordBool; safecall;
    procedure Set_MajTauxTaxe(pVal: WordBool); safecall;
    property DO_Date: TDateTime read Get_DO_Date write Set_DO_Date;
    property RecalculFraisExpedition: WordBool read Get_RecalculFraisExpedition write Set_RecalculFraisExpedition;
    property UserLotsToUse[const pLigne: IBODocumentLigne3]: IBICollectionDispatch read Get_UserLotsToUse;
    property UserLotsQteRestantAFournir[const pLigne: IBODocumentLigne3]: Double read Get_UserLotsQteRestantAFournir;
    property ListDocumentsATransformer: IBICollection read Get_ListDocumentsATransformer;
    property ListLignesATransformer: IBICollection read Get_ListLignesATransformer;
    property ListDocumentsResult: IBICollection read Get_ListDocumentsResult;
    property ListLignesResult: IBICollection read Get_ListLignesResult;
    property ListDocumentsDestination: IBICollection read Get_ListDocumentsDestination;
    property MajCoursType: TransfoMajCoursType read Get_MajCoursType write Set_MajCoursType;
    property MajTauxTaxe: WordBool read Get_MajTauxTaxe write Set_MajTauxTaxe;
  end;

// *********************************************************************//
// DispIntf :    IPMDocTransformerDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {3B2FF624-53B6-4F75-8A34-41CFDA72646F}
// *********************************************************************//
  IPMDocTransformerDisp = dispinterface
    ['{3B2FF624-53B6-4F75-8A34-41CFDA72646F}']
    procedure _Reserved; dispid 99;
    property DO_Date: TDateTime dispid 100;
    property RecalculFraisExpedition: WordBool dispid 103;
    procedure AddDocument(const pDoc: IBODocument3); dispid 110;
    procedure RmvDocument(const pDoc: IBODocument3); dispid 111;
    procedure AddDocumentLigne(const pLigne: IBODocumentLigne3); dispid 112;
    procedure RmvDocumentLigne(const pLigne: IBODocumentLigne3); dispid 113;
    procedure AddDocumentDestination(const pDoc: IBODocument3); dispid 114;
    procedure RmvDocumentDestination(const pDoc: IBODocument3); dispid 115;
    property UserLotsToUse[const pLigne: IBODocumentLigne3]: IBICollectionDispatch readonly dispid 155;
    property UserLotsQteRestantAFournir[const pLigne: IBODocumentLigne3]: Double readonly dispid 156;
    property ListDocumentsATransformer: IBICollection readonly dispid 150;
    property ListLignesATransformer: IBICollection readonly dispid 151;
    property ListDocumentsResult: IBICollection readonly dispid 152;
    property ListLignesResult: IBICollection readonly dispid 153;
    property ListDocumentsDestination: IBICollection readonly dispid 154;
    property MajCoursType: TransfoMajCoursType dispid 157;
    property MajTauxTaxe: WordBool dispid 158;
    procedure Process; dispid 10;
    property CanProcess: WordBool readonly dispid 11;
    property Errors: IFailInfoCol readonly dispid 12;
    property Transactional: WordBool dispid 13;
  end;

// *********************************************************************//
// Interface :   IFailInfoCol
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {ED8391C3-A97F-4464-AFA4-D8A52DA6C558}
// *********************************************************************//
  IFailInfoCol = interface(IDispatch)
    ['{ED8391C3-A97F-4464-AFA4-D8A52DA6C558}']
    function Get_Item(lIndex: Integer): IFailInfo; safecall;
    function Get_Count: Integer; safecall;
    function Get__NewEnum: IUnknown; safecall;
    property Item[lIndex: Integer]: IFailInfo read Get_Item; default;
    property Count: Integer read Get_Count;
    property _NewEnum: IUnknown read Get__NewEnum;
  end;

// *********************************************************************//
// DispIntf :    IFailInfoColDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {ED8391C3-A97F-4464-AFA4-D8A52DA6C558}
// *********************************************************************//
  IFailInfoColDisp = dispinterface
    ['{ED8391C3-A97F-4464-AFA4-D8A52DA6C558}']
    property Item[lIndex: Integer]: IFailInfo readonly dispid 0; default;
    property Count: Integer readonly dispid 1;
    property _NewEnum: IUnknown readonly dispid -4;
  end;

// *********************************************************************//
// Interface :   IFailInfo
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {56E46799-276B-4FAA-B64E-B98F1B245C92}
// *********************************************************************//
  IFailInfo = interface(IDispatch)
    ['{56E46799-276B-4FAA-B64E-B98F1B245C92}']
    function Get_ErrorCode: OleVariant; safecall;
    function Get_Text: WideString; safecall;
    function Get_Indice: Integer; safecall;
    property ErrorCode: OleVariant read Get_ErrorCode;
    property Text: WideString read Get_Text;
    property Indice: Integer read Get_Indice;
  end;

// *********************************************************************//
// DispIntf :    IFailInfoDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {56E46799-276B-4FAA-B64E-B98F1B245C92}
// *********************************************************************//
  IFailInfoDisp = dispinterface
    ['{56E46799-276B-4FAA-B64E-B98F1B245C92}']
    property ErrorCode: OleVariant readonly dispid 1;
    property Text: WideString readonly dispid 2;
    property Indice: Integer readonly dispid 3;
  end;

// *********************************************************************//
// Interface :   IBODocument3
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {32FE56B9-1E64-4A59-AE3C-EA5BEBBA2C3D}
// *********************************************************************//
  IBODocument3 = interface(IBIPersistObject)
    ['{32FE56B9-1E64-4A59-AE3C-EA5BEBBA2C3D}']
    function Get_FactoryDocument: IBODocumentFactory; safecall;
    function Get_FactoryDocumentLigne: IBODocumentLigneFactory; safecall;
    function Get_DO_Domaine: DomaineType; safecall;
    function Get_DO_Type: DocumentType; safecall;
    function Get_DO_Piece: WideString; safecall;
    procedure Set_DO_Piece(const pVal: WideString); safecall;
    function Get_DO_Date: TDateTime; safecall;
    procedure Set_DO_Date(pVal: TDateTime); safecall;
    function Get_DO_Ref: WideString; safecall;
    procedure Set_DO_Ref(const pVal: WideString); safecall;
    function Get_DepotStockage: IBODepot3; safecall;
    procedure Set_DepotStockage(const pDepot: IBODepot3); safecall;
    function Get_DO_Imprim: WordBool; safecall;
    function Get_DO_Heure: TDateTime; safecall;
    function Get_DO_Transfere: WordBool; safecall;
    function Get_InfoLibre: IBIValues; safecall;
    procedure SetDefaultDO_Piece; safecall;
    function Get_Collaborateur: IBOCollaborateur; safecall;
    procedure Set_Collaborateur(const pCollaborateur: IBOCollaborateur); safecall;
    function Get_Souche: IBISouche; safecall;
    procedure Set_Souche(const pSouche: IBISouche); safecall;
    function Get_CompteA: IBOCompteA3; safecall;
    procedure Set_CompteA(const pCompteA: IBOCompteA3); safecall;
    function Get_DO_TotalHT: Double; safecall;
    function Get_FactoryDocumentMedia: IBITypeObjectFactory; safecall;
    function Get_DO_TotalHTNet: Double; safecall;
    function Get_DO_TotalTTC: Double; safecall;
    function Get_DO_NetAPayer: Double; safecall;
    function Get_DO_MontantRegle: Double; safecall;
    procedure RecalculTotaux(pVal: WordBool); safecall;
    procedure SetAutoRecalculTotaux(pVal: WordBool); safecall;
    function HasAutoRecalculTotaux: WordBool; safecall;
    property FactoryDocument: IBODocumentFactory read Get_FactoryDocument;
    property FactoryDocumentLigne: IBODocumentLigneFactory read Get_FactoryDocumentLigne;
    property DO_Domaine: DomaineType read Get_DO_Domaine;
    property DO_Type: DocumentType read Get_DO_Type;
    property DO_Piece: WideString read Get_DO_Piece write Set_DO_Piece;
    property DO_Date: TDateTime read Get_DO_Date write Set_DO_Date;
    property DO_Ref: WideString read Get_DO_Ref write Set_DO_Ref;
    property DepotStockage: IBODepot3 read Get_DepotStockage write Set_DepotStockage;
    property DO_Imprim: WordBool read Get_DO_Imprim;
    property DO_Heure: TDateTime read Get_DO_Heure;
    property DO_Transfere: WordBool read Get_DO_Transfere;
    property InfoLibre: IBIValues read Get_InfoLibre;
    property Collaborateur: IBOCollaborateur read Get_Collaborateur write Set_Collaborateur;
    property Souche: IBISouche read Get_Souche write Set_Souche;
    property CompteA: IBOCompteA3 read Get_CompteA write Set_CompteA;
    property DO_TotalHT: Double read Get_DO_TotalHT;
    property FactoryDocumentMedia: IBITypeObjectFactory read Get_FactoryDocumentMedia;
    property DO_TotalHTNet: Double read Get_DO_TotalHTNet;
    property DO_TotalTTC: Double read Get_DO_TotalTTC;
    property DO_NetAPayer: Double read Get_DO_NetAPayer;
    property DO_MontantRegle: Double read Get_DO_MontantRegle;
  end;

// *********************************************************************//
// DispIntf :    IBODocument3Disp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {32FE56B9-1E64-4A59-AE3C-EA5BEBBA2C3D}
// *********************************************************************//
  IBODocument3Disp = dispinterface
    ['{32FE56B9-1E64-4A59-AE3C-EA5BEBBA2C3D}']
    property FactoryDocument: IBODocumentFactory readonly dispid 100;
    property FactoryDocumentLigne: IBODocumentLigneFactory readonly dispid 101;
    property DO_Domaine: DomaineType readonly dispid 104;
    property DO_Type: DocumentType readonly dispid 105;
    property DO_Piece: WideString dispid 106;
    property DO_Date: TDateTime dispid 107;
    property DO_Ref: WideString dispid 108;
    property DepotStockage: IBODepot3 dispid 109;
    property DO_Imprim: WordBool readonly dispid 110;
    property DO_Heure: TDateTime readonly dispid 111;
    property DO_Transfere: WordBool readonly dispid 113;
    property InfoLibre: IBIValues readonly dispid 114;
    procedure SetDefaultDO_Piece; dispid 115;
    property Collaborateur: IBOCollaborateur dispid 116;
    property Souche: IBISouche dispid 117;
    property CompteA: IBOCompteA3 dispid 161;
    property DO_TotalHT: Double readonly dispid 118;
    property FactoryDocumentMedia: IBITypeObjectFactory readonly dispid 119;
    property DO_TotalHTNet: Double readonly dispid 120;
    property DO_TotalTTC: Double readonly dispid 121;
    property DO_NetAPayer: Double readonly dispid 122;
    property DO_MontantRegle: Double readonly dispid 123;
    procedure RecalculTotaux(pVal: WordBool); dispid 124;
    procedure SetAutoRecalculTotaux(pVal: WordBool); dispid 125;
    function HasAutoRecalculTotaux: WordBool; dispid 126;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IBODocumentFactory
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {B6986EB1-B7E5-47E0-A22E-B4C64A1A54B1}
// *********************************************************************//
  IBODocumentFactory = interface(IBITypeObjectFactory)
    ['{B6986EB1-B7E5-47E0-A22E-B4C64A1A54B1}']
    function Get_InfoLibreFields: IBIFields; safecall;
    procedure CreateInfoLibre(const sName: WideString; sType: eTypeInfoLibre; ilength: Smallint); safecall;
    property InfoLibreFields: IBIFields read Get_InfoLibreFields;
  end;

// *********************************************************************//
// DispIntf :    IBODocumentFactoryDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {B6986EB1-B7E5-47E0-A22E-B4C64A1A54B1}
// *********************************************************************//
  IBODocumentFactoryDisp = dispinterface
    ['{B6986EB1-B7E5-47E0-A22E-B4C64A1A54B1}']
    property InfoLibreFields: IBIFields readonly dispid 21;
    procedure CreateInfoLibre(const sName: WideString; sType: eTypeInfoLibre; ilength: Smallint); dispid 22;
    property List: IBICollection readonly dispid 1;
    function Create: IBIPersistObject; dispid 2;
    function Read(const pOID: IBIObjectID): IBIPersistObject; dispid 3;
    function _QuerySynchro(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                           TypeExtraction: SynchroExtractType): IBICollection; dispid 4;
    function _QuerySynchroRemoved(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                                  TypeExtraction: SynchroExtractType): IBICollectionDispatch; dispid 5;
    function ReadFrom(const pStream: IStream): IBIPersistObject; dispid 6;
    property ListForward: IBICollection readonly dispid 7;
    function QueryPredicate(const pPredicate: IDispatch; const sSortDescriptors: WideString): IBICollection; dispid 8;
  end;

// *********************************************************************//
// Interface :   IBIFields
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {2817DCCC-42F2-4206-835D-F46D0AD2AA0F}
// *********************************************************************//
  IBIFields = interface(IDispatch)
    ['{2817DCCC-42F2-4206-835D-F46D0AD2AA0F}']
    function Get__NewEnum: IUnknown; safecall;
    function Get_Item(lIndex: Integer): IBIField; safecall;
    function Get_Count: Integer; safecall;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Item[lIndex: Integer]: IBIField read Get_Item; default;
    property Count: Integer read Get_Count;
  end;

// *********************************************************************//
// DispIntf :    IBIFieldsDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {2817DCCC-42F2-4206-835D-F46D0AD2AA0F}
// *********************************************************************//
  IBIFieldsDisp = dispinterface
    ['{2817DCCC-42F2-4206-835D-F46D0AD2AA0F}']
    property _NewEnum: IUnknown readonly dispid -4;
    property Item[lIndex: Integer]: IBIField readonly dispid 0; default;
    property Count: Integer readonly dispid 1;
  end;

// *********************************************************************//
// Interface :   IBIField
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {EDC1CB4E-E678-438B-B722-5BEDCCED8EF8}
// *********************************************************************//
  IBIField = interface(IDispatch)
    ['{EDC1CB4E-E678-438B-B722-5BEDCCED8EF8}']
    function Get_Name: WideString; safecall;
    function Get_Size: Smallint; safecall;
    function Get_type_: FieldType; safecall;
    function Get_Formule: WideString; safecall;
    function Get_IsCalculable: WordBool; safecall;
    function Get_Enums: IBIValuesInsertable; safecall;
    property Name: WideString read Get_Name;
    property Size: Smallint read Get_Size;
    property type_: FieldType read Get_type_;
    property Formule: WideString read Get_Formule;
    property IsCalculable: WordBool read Get_IsCalculable;
    property Enums: IBIValuesInsertable read Get_Enums;
  end;

// *********************************************************************//
// DispIntf :    IBIFieldDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {EDC1CB4E-E678-438B-B722-5BEDCCED8EF8}
// *********************************************************************//
  IBIFieldDisp = dispinterface
    ['{EDC1CB4E-E678-438B-B722-5BEDCCED8EF8}']
    property Name: WideString readonly dispid 1;
    property Size: Smallint readonly dispid 2;
    property type_: FieldType readonly dispid 3;
    property Formule: WideString readonly dispid 4;
    property IsCalculable: WordBool readonly dispid 5;
    property Enums: IBIValuesInsertable readonly dispid 104;
  end;

// *********************************************************************//
// Interface :   IBODocumentLigneFactory
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {EA77FBAD-D58F-461F-9542-8F123C1D7B85}
// *********************************************************************//
  IBODocumentLigneFactory = interface(IBITypeObjectFactory)
    ['{EA77FBAD-D58F-461F-9542-8F123C1D7B85}']
    function Get_InfoLibreFields: IBIFields; safecall;
    function QueryPied: IBICollection; safecall;
    property InfoLibreFields: IBIFields read Get_InfoLibreFields;
  end;

// *********************************************************************//
// DispIntf :    IBODocumentLigneFactoryDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {EA77FBAD-D58F-461F-9542-8F123C1D7B85}
// *********************************************************************//
  IBODocumentLigneFactoryDisp = dispinterface
    ['{EA77FBAD-D58F-461F-9542-8F123C1D7B85}']
    property InfoLibreFields: IBIFields readonly dispid 10;
    function QueryPied: IBICollection; dispid 11;
    property List: IBICollection readonly dispid 1;
    function Create: IBIPersistObject; dispid 2;
    function Read(const pOID: IBIObjectID): IBIPersistObject; dispid 3;
    function _QuerySynchro(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                           TypeExtraction: SynchroExtractType): IBICollection; dispid 4;
    function _QuerySynchroRemoved(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                                  TypeExtraction: SynchroExtractType): IBICollectionDispatch; dispid 5;
    function ReadFrom(const pStream: IStream): IBIPersistObject; dispid 6;
    property ListForward: IBICollection readonly dispid 7;
    function QueryPredicate(const pPredicate: IDispatch; const sSortDescriptors: WideString): IBICollection; dispid 8;
  end;

// *********************************************************************//
// Interface :   IBODepot3
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {390E51AD-CC0A-4641-84D9-6B8E97906812}
// *********************************************************************//
  IBODepot3 = interface(IBIPersistObject)
    ['{390E51AD-CC0A-4641-84D9-6B8E97906812}']
    function Get_FactoryDepot: IBODepotFactory2; safecall;
    function Get_FactoryDepotContact: IBITypeObjectFactory; safecall;
    function Get_DE_Intitule: WideString; safecall;
    procedure Set_DE_Intitule(const pVal: WideString); safecall;
    function Get_Adresse: IAdresse; safecall;
    procedure Set_Adresse(const pAdresse: IAdresse); safecall;
    function Get_DE_Contact: WideString; safecall;
    procedure Set_DE_Contact(const pVal: WideString); safecall;
    function Get_CategorieCompta: IBICategorieCompta; safecall;
    procedure Set_CategorieCompta(const pCategorieCompta: IBICategorieCompta); safecall;
    function Get_DE_Code: WideString; safecall;
    procedure Set_DE_Code(const pVal: WideString); safecall;
    function Get_Telecom: ITelecom; safecall;
    procedure Set_Telecom(const pTelecom: ITelecom); safecall;
    function Get_FactoryDepotEmplacement: IBODepotEmplacementFactory; safecall;
    function Get_DefaultEmplacement: IBODepotEmplacement; safecall;
    procedure Set_DefaultEmplacement(const pObj: IBODepotEmplacement); safecall;
    function Get_DE_Exclure: WordBool; safecall;
    procedure Set_DE_Exclure(pVal: WordBool); safecall;
    function Get_DE_Souche(sElt: DomaineType): IBISouche; safecall;
    procedure Set_DE_Souche(sElt: DomaineType; const pSouche: IBISouche); safecall;
    function Get_Compteur: Integer; safecall;
    property FactoryDepot: IBODepotFactory2 read Get_FactoryDepot;
    property FactoryDepotContact: IBITypeObjectFactory read Get_FactoryDepotContact;
    property DE_Intitule: WideString read Get_DE_Intitule write Set_DE_Intitule;
    property Adresse: IAdresse read Get_Adresse write Set_Adresse;
    property DE_Contact: WideString read Get_DE_Contact write Set_DE_Contact;
    property CategorieCompta: IBICategorieCompta read Get_CategorieCompta write Set_CategorieCompta;
    property DE_Code: WideString read Get_DE_Code write Set_DE_Code;
    property Telecom: ITelecom read Get_Telecom write Set_Telecom;
    property FactoryDepotEmplacement: IBODepotEmplacementFactory read Get_FactoryDepotEmplacement;
    property DefaultEmplacement: IBODepotEmplacement read Get_DefaultEmplacement write Set_DefaultEmplacement;
    property DE_Exclure: WordBool read Get_DE_Exclure write Set_DE_Exclure;
    property DE_Souche[sElt: DomaineType]: IBISouche read Get_DE_Souche write Set_DE_Souche;
    property Compteur: Integer read Get_Compteur;
  end;

// *********************************************************************//
// DispIntf :    IBODepot3Disp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {390E51AD-CC0A-4641-84D9-6B8E97906812}
// *********************************************************************//
  IBODepot3Disp = dispinterface
    ['{390E51AD-CC0A-4641-84D9-6B8E97906812}']
    property FactoryDepot: IBODepotFactory2 readonly dispid 100;
    property FactoryDepotContact: IBITypeObjectFactory readonly dispid 101;
    property DE_Intitule: WideString dispid 102;
    property Adresse: IAdresse dispid 103;
    property DE_Contact: WideString dispid 107;
    property CategorieCompta: IBICategorieCompta dispid 108;
    property DE_Code: WideString dispid 112;
    property Telecom: ITelecom dispid 113;
    property FactoryDepotEmplacement: IBODepotEmplacementFactory readonly dispid 115;
    property DefaultEmplacement: IBODepotEmplacement dispid 116;
    property DE_Exclure: WordBool dispid 117;
    property DE_Souche[sElt: DomaineType]: IBISouche dispid 118;
    property Compteur: Integer readonly dispid 119;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IBODepotFactory2
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {22A6C915-8B4F-4BB0-B720-B8DA08203AE0}
// *********************************************************************//
  IBODepotFactory2 = interface(IBITypeObjectFactory)
    ['{22A6C915-8B4F-4BB0-B720-B8DA08203AE0}']
    function ExistIntitule(const sNum: WideString): WordBool; safecall;
    function ReadIntitule(const sNum: WideString): IBODepot3; safecall;
    function ExistCompteur(DE_No: Integer): WordBool; safecall;
    function ReadCompteur(DE_No: Integer): IBODepot3; safecall;
  end;

// *********************************************************************//
// DispIntf :    IBODepotFactory2Disp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {22A6C915-8B4F-4BB0-B720-B8DA08203AE0}
// *********************************************************************//
  IBODepotFactory2Disp = dispinterface
    ['{22A6C915-8B4F-4BB0-B720-B8DA08203AE0}']
    function ExistIntitule(const sNum: WideString): WordBool; dispid 10;
    function ReadIntitule(const sNum: WideString): IBODepot3; dispid 11;
    function ExistCompteur(DE_No: Integer): WordBool; dispid 12;
    function ReadCompteur(DE_No: Integer): IBODepot3; dispid 13;
    property List: IBICollection readonly dispid 1;
    function Create: IBIPersistObject; dispid 2;
    function Read(const pOID: IBIObjectID): IBIPersistObject; dispid 3;
    function _QuerySynchro(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                           TypeExtraction: SynchroExtractType): IBICollection; dispid 4;
    function _QuerySynchroRemoved(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                                  TypeExtraction: SynchroExtractType): IBICollectionDispatch; dispid 5;
    function ReadFrom(const pStream: IStream): IBIPersistObject; dispid 6;
    property ListForward: IBICollection readonly dispid 7;
    function QueryPredicate(const pPredicate: IDispatch; const sSortDescriptors: WideString): IBICollection; dispid 8;
  end;

// *********************************************************************//
// Interface :   IBODepotEmplacementFactory
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {1B59ED90-B489-4E8F-928F-CA5CA4B443F8}
// *********************************************************************//
  IBODepotEmplacementFactory = interface(IBITypeObjectFactory)
    ['{1B59ED90-B489-4E8F-928F-CA5CA4B443F8}']
    function ExistCode(const sDP_Code: WideString): WordBool; safecall;
    function ReadCode(const sDP_Code: WideString): IBODepotEmplacement; safecall;
  end;

// *********************************************************************//
// DispIntf :    IBODepotEmplacementFactoryDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {1B59ED90-B489-4E8F-928F-CA5CA4B443F8}
// *********************************************************************//
  IBODepotEmplacementFactoryDisp = dispinterface
    ['{1B59ED90-B489-4E8F-928F-CA5CA4B443F8}']
    function ExistCode(const sDP_Code: WideString): WordBool; dispid 10;
    function ReadCode(const sDP_Code: WideString): IBODepotEmplacement; dispid 11;
    property List: IBICollection readonly dispid 1;
    function Create: IBIPersistObject; dispid 2;
    function Read(const pOID: IBIObjectID): IBIPersistObject; dispid 3;
    function _QuerySynchro(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                           TypeExtraction: SynchroExtractType): IBICollection; dispid 4;
    function _QuerySynchroRemoved(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                                  TypeExtraction: SynchroExtractType): IBICollectionDispatch; dispid 5;
    function ReadFrom(const pStream: IStream): IBIPersistObject; dispid 6;
    property ListForward: IBICollection readonly dispid 7;
    function QueryPredicate(const pPredicate: IDispatch; const sSortDescriptors: WideString): IBICollection; dispid 8;
  end;

// *********************************************************************//
// Interface :   IBODepotEmplacement
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {F9E53BA9-EBAD-462E-9AAF-3B768FD8E6F1}
// *********************************************************************//
  IBODepotEmplacement = interface(IBIPersistObject)
    ['{F9E53BA9-EBAD-462E-9AAF-3B768FD8E6F1}']
    function Get_FactoryDepotEmplacement: IBODepotEmplacementFactory; safecall;
    function Get_Depot: IBODepot3; safecall;
    function Get_DP_Code: WideString; safecall;
    procedure Set_DP_Code(const pVal: WideString); safecall;
    function Get_DP_Intitule: WideString; safecall;
    procedure Set_DP_Intitule(const pVal: WideString); safecall;
    function Get_DP_Zone: DepotEmplZone; safecall;
    procedure Set_DP_Zone(pVal: DepotEmplZone); safecall;
    function Get_DP_Type: DepotEmplType; safecall;
    procedure Set_DP_Type(pVal: DepotEmplType); safecall;
    property FactoryDepotEmplacement: IBODepotEmplacementFactory read Get_FactoryDepotEmplacement;
    property Depot: IBODepot3 read Get_Depot;
    property DP_Code: WideString read Get_DP_Code write Set_DP_Code;
    property DP_Intitule: WideString read Get_DP_Intitule write Set_DP_Intitule;
    property DP_Zone: DepotEmplZone read Get_DP_Zone write Set_DP_Zone;
    property DP_Type: DepotEmplType read Get_DP_Type write Set_DP_Type;
  end;

// *********************************************************************//
// DispIntf :    IBODepotEmplacementDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {F9E53BA9-EBAD-462E-9AAF-3B768FD8E6F1}
// *********************************************************************//
  IBODepotEmplacementDisp = dispinterface
    ['{F9E53BA9-EBAD-462E-9AAF-3B768FD8E6F1}']
    property FactoryDepotEmplacement: IBODepotEmplacementFactory readonly dispid 120;
    property Depot: IBODepot3 readonly dispid 121;
    property DP_Code: WideString dispid 122;
    property DP_Intitule: WideString dispid 123;
    property DP_Zone: DepotEmplZone dispid 124;
    property DP_Type: DepotEmplType dispid 125;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IBISouche
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {E323C1CD-6888-42A8-8DA2-D8B66A9819B8}
// *********************************************************************//
  IBISouche = interface(IBIPersistObject)
    ['{E323C1CD-6888-42A8-8DA2-D8B66A9819B8}']
    function Get_Intitule: WideString; safecall;
    procedure Set_Intitule(const pVal: WideString); safecall;
    function Get_Domaine: DomaineType; safecall;
    function Get_IsValide: WordBool; safecall;
    procedure Set_IsValide(pVal: WordBool); safecall;
    function ReadCurrentPiece(DO_Type: DocumentType; DO_Provenance: DocumentProvenanceType): WideString; safecall;
    procedure WriteCurrentPiece(DO_Type: DocumentType; DO_Provenance: DocumentProvenanceType; 
                                const sVal: WideString); safecall;
    property Intitule: WideString read Get_Intitule write Set_Intitule;
    property Domaine: DomaineType read Get_Domaine;
    property IsValide: WordBool read Get_IsValide write Set_IsValide;
  end;

// *********************************************************************//
// DispIntf :    IBISoucheDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {E323C1CD-6888-42A8-8DA2-D8B66A9819B8}
// *********************************************************************//
  IBISoucheDisp = dispinterface
    ['{E323C1CD-6888-42A8-8DA2-D8B66A9819B8}']
    property Intitule: WideString dispid 100;
    property Domaine: DomaineType readonly dispid 101;
    property IsValide: WordBool dispid 102;
    function ReadCurrentPiece(DO_Type: DocumentType; DO_Provenance: DocumentProvenanceType): WideString; dispid 103;
    procedure WriteCurrentPiece(DO_Type: DocumentType; DO_Provenance: DocumentProvenanceType; 
                                const sVal: WideString); dispid 104;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IBIValues
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {492D8954-BF34-4EB1-A8C8-85C45454B8BF}
// *********************************************************************//
  IBIValues = interface(IDispatch)
    ['{492D8954-BF34-4EB1-A8C8-85C45454B8BF}']
    function Get__NewEnum: IUnknown; safecall;
    function Get_Item(vIndex: OleVariant): OleVariant; safecall;
    procedure Set_Item(vIndex: OleVariant; pVal: OleVariant); safecall;
    function Get_Count: Integer; safecall;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Item[vIndex: OleVariant]: OleVariant read Get_Item write Set_Item; default;
    property Count: Integer read Get_Count;
  end;

// *********************************************************************//
// DispIntf :    IBIValuesDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {492D8954-BF34-4EB1-A8C8-85C45454B8BF}
// *********************************************************************//
  IBIValuesDisp = dispinterface
    ['{492D8954-BF34-4EB1-A8C8-85C45454B8BF}']
    property _NewEnum: IUnknown readonly dispid -4;
    property Item[vIndex: OleVariant]: OleVariant dispid 0; default;
    property Count: Integer readonly dispid 1;
  end;

// *********************************************************************//
// Interface :   IBOCollaborateur
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {358B9088-4422-436B-88D3-66ECDF3CC622}
// *********************************************************************//
  IBOCollaborateur = interface(IBIPersistObject)
    ['{358B9088-4422-436B-88D3-66ECDF3CC622}']
    function Get_FactoryCollaborateur: IBOCollaborateurFactory; safecall;
    function Get_Nom: WideString; safecall;
    procedure Set_Nom(const pVal: WideString); safecall;
    function Get_Prenom: WideString; safecall;
    procedure Set_Prenom(const pVal: WideString); safecall;
    function Get_Fonction: WideString; safecall;
    procedure Set_Fonction(const pVal: WideString); safecall;
    function Get_Adresse: IAdresse; safecall;
    procedure Set_Adresse(const pAdresse: IAdresse); safecall;
    function Get_Service: WideString; safecall;
    procedure Set_Service(const pVal: WideString); safecall;
    function Get_Vendeur: WordBool; safecall;
    procedure Set_Vendeur(pVal: WordBool); safecall;
    function Get_Caissier: WordBool; safecall;
    procedure Set_Caissier(pVal: WordBool); safecall;
    function Get_CO_DateCreation: TDateTime; safecall;
    function Get_Utilisateur: WideString; safecall;
    procedure Set_Utilisateur(const pVal: WideString); safecall;
    function Get_Acheteur: WordBool; safecall;
    procedure Set_Acheteur(pVal: WordBool); safecall;
    function Get_Telecom: ITelecom; safecall;
    procedure Set_Telecom(const pTelecom: ITelecom); safecall;
    function Get_Receptionnaire: WordBool; safecall;
    procedure Set_Receptionnaire(pVal: WordBool); safecall;
    function Get_ChargeRecouvrement: WordBool; safecall;
    procedure Set_ChargeRecouvrement(pVal: WordBool); safecall;
    function Get_Matricule: WideString; safecall;
    procedure Set_Matricule(const pVal: WideString); safecall;
    function Get_Facebook: WideString; safecall;
    procedure Set_Facebook(const pVal: WideString); safecall;
    function Get_LinkedIn: WideString; safecall;
    procedure Set_LinkedIn(const pVal: WideString); safecall;
    function Get_Skype: WideString; safecall;
    procedure Set_Skype(const pVal: WideString); safecall;
    function Get_Sommeil: WordBool; safecall;
    procedure Set_Sommeil(pVal: WordBool); safecall;
    function Get_ChefVentes: WordBool; safecall;
    procedure Set_ChefVentes(pVal: WordBool); safecall;
    function Get_FactoryVendeurs: IBOVendeursAssociesFactory; safecall;
    function Get_Financier: WordBool; safecall;
    procedure Set_Financier(pVal: WordBool); safecall;
    property FactoryCollaborateur: IBOCollaborateurFactory read Get_FactoryCollaborateur;
    property Nom: WideString read Get_Nom write Set_Nom;
    property Prenom: WideString read Get_Prenom write Set_Prenom;
    property Fonction: WideString read Get_Fonction write Set_Fonction;
    property Adresse: IAdresse read Get_Adresse write Set_Adresse;
    property Service: WideString read Get_Service write Set_Service;
    property Vendeur: WordBool read Get_Vendeur write Set_Vendeur;
    property Caissier: WordBool read Get_Caissier write Set_Caissier;
    property CO_DateCreation: TDateTime read Get_CO_DateCreation;
    property Utilisateur: WideString read Get_Utilisateur write Set_Utilisateur;
    property Acheteur: WordBool read Get_Acheteur write Set_Acheteur;
    property Telecom: ITelecom read Get_Telecom write Set_Telecom;
    property Receptionnaire: WordBool read Get_Receptionnaire write Set_Receptionnaire;
    property ChargeRecouvrement: WordBool read Get_ChargeRecouvrement write Set_ChargeRecouvrement;
    property Matricule: WideString read Get_Matricule write Set_Matricule;
    property Facebook: WideString read Get_Facebook write Set_Facebook;
    property LinkedIn: WideString read Get_LinkedIn write Set_LinkedIn;
    property Skype: WideString read Get_Skype write Set_Skype;
    property Sommeil: WordBool read Get_Sommeil write Set_Sommeil;
    property ChefVentes: WordBool read Get_ChefVentes write Set_ChefVentes;
    property FactoryVendeurs: IBOVendeursAssociesFactory read Get_FactoryVendeurs;
    property Financier: WordBool read Get_Financier write Set_Financier;
  end;

// *********************************************************************//
// DispIntf :    IBOCollaborateurDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {358B9088-4422-436B-88D3-66ECDF3CC622}
// *********************************************************************//
  IBOCollaborateurDisp = dispinterface
    ['{358B9088-4422-436B-88D3-66ECDF3CC622}']
    property FactoryCollaborateur: IBOCollaborateurFactory readonly dispid 100;
    property Nom: WideString dispid 101;
    property Prenom: WideString dispid 102;
    property Fonction: WideString dispid 103;
    property Adresse: IAdresse dispid 104;
    property Service: WideString dispid 105;
    property Vendeur: WordBool dispid 106;
    property Caissier: WordBool dispid 107;
    property CO_DateCreation: TDateTime readonly dispid 108;
    property Utilisateur: WideString dispid 109;
    property Acheteur: WordBool dispid 110;
    property Telecom: ITelecom dispid 111;
    property Receptionnaire: WordBool dispid 114;
    property ChargeRecouvrement: WordBool dispid 116;
    property Matricule: WideString dispid 117;
    property Facebook: WideString dispid 118;
    property LinkedIn: WideString dispid 119;
    property Skype: WideString dispid 120;
    property Sommeil: WordBool dispid 121;
    property ChefVentes: WordBool dispid 122;
    property FactoryVendeurs: IBOVendeursAssociesFactory readonly dispid 320;
    property Financier: WordBool dispid 124;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IBOCollaborateurFactory
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {37A491F2-E6F5-47BF-B7F3-2E3CDD5C4E75}
// *********************************************************************//
  IBOCollaborateurFactory = interface(IBITypeObjectFactory)
    ['{37A491F2-E6F5-47BF-B7F3-2E3CDD5C4E75}']
    function ExistNomPrenom(const sNom: WideString; const sPrenom: WideString): WordBool; safecall;
    function ReadNomPrenom(const sNom: WideString; const sPrenom: WideString): IBOCollaborateur; safecall;
  end;

// *********************************************************************//
// DispIntf :    IBOCollaborateurFactoryDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {37A491F2-E6F5-47BF-B7F3-2E3CDD5C4E75}
// *********************************************************************//
  IBOCollaborateurFactoryDisp = dispinterface
    ['{37A491F2-E6F5-47BF-B7F3-2E3CDD5C4E75}']
    function ExistNomPrenom(const sNom: WideString; const sPrenom: WideString): WordBool; dispid 10;
    function ReadNomPrenom(const sNom: WideString; const sPrenom: WideString): IBOCollaborateur; dispid 11;
    property List: IBICollection readonly dispid 1;
    function Create: IBIPersistObject; dispid 2;
    function Read(const pOID: IBIObjectID): IBIPersistObject; dispid 3;
    function _QuerySynchro(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                           TypeExtraction: SynchroExtractType): IBICollection; dispid 4;
    function _QuerySynchroRemoved(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                                  TypeExtraction: SynchroExtractType): IBICollectionDispatch; dispid 5;
    function ReadFrom(const pStream: IStream): IBIPersistObject; dispid 6;
    property ListForward: IBICollection readonly dispid 7;
    function QueryPredicate(const pPredicate: IDispatch; const sSortDescriptors: WideString): IBICollection; dispid 8;
  end;

// *********************************************************************//
// Interface :   IBOVendeursAssociesFactory
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {6989D81B-29BD-4AD5-B97A-DE21C8E82772}
// *********************************************************************//
  IBOVendeursAssociesFactory = interface(IBITypeObjectFactory)
    ['{6989D81B-29BD-4AD5-B97A-DE21C8E82772}']
    procedure AddVendeur(const pVendeur: IBOCollaborateur); safecall;
    procedure RemoveVendeur(const pVendeur: IBOCollaborateur); safecall;
    function ExistVendeur(const pVendeur: IBOCollaborateur): WordBool; safecall;
  end;

// *********************************************************************//
// DispIntf :    IBOVendeursAssociesFactoryDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {6989D81B-29BD-4AD5-B97A-DE21C8E82772}
// *********************************************************************//
  IBOVendeursAssociesFactoryDisp = dispinterface
    ['{6989D81B-29BD-4AD5-B97A-DE21C8E82772}']
    procedure AddVendeur(const pVendeur: IBOCollaborateur); dispid 10;
    procedure RemoveVendeur(const pVendeur: IBOCollaborateur); dispid 20;
    function ExistVendeur(const pVendeur: IBOCollaborateur): WordBool; dispid 30;
    property List: IBICollection readonly dispid 1;
    function Create: IBIPersistObject; dispid 2;
    function Read(const pOID: IBIObjectID): IBIPersistObject; dispid 3;
    function _QuerySynchro(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                           TypeExtraction: SynchroExtractType): IBICollection; dispid 4;
    function _QuerySynchroRemoved(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                                  TypeExtraction: SynchroExtractType): IBICollectionDispatch; dispid 5;
    function ReadFrom(const pStream: IStream): IBIPersistObject; dispid 6;
    property ListForward: IBICollection readonly dispid 7;
    function QueryPredicate(const pPredicate: IDispatch; const sSortDescriptors: WideString): IBICollection; dispid 8;
  end;

// *********************************************************************//
// Interface :   IBOCompteA3
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {F4A12389-C6F0-4A1A-8F6F-17D1816C7E26}
// *********************************************************************//
  IBOCompteA3 = interface(IBIPersistObject)
    ['{F4A12389-C6F0-4A1A-8F6F-17D1816C7E26}']
    function Get_FactoryCompteA: IBOCompteAFactory3; safecall;
    function Get_Analytique: IBPAnalytique3; safecall;
    procedure Set_Analytique(const pAnalytique: IBPAnalytique3); safecall;
    function Get_CA_Num: WideString; safecall;
    procedure Set_CA_Num(const pVal: WideString); safecall;
    function Get_CA_Type: CompteAType; safecall;
    procedure Set_CA_Type(pVal: CompteAType); safecall;
    function Get_CA_Intitule: WideString; safecall;
    procedure Set_CA_Intitule(const pVal: WideString); safecall;
    function Get_CA_Classement: WideString; safecall;
    procedure Set_CA_Classement(const pVal: WideString); safecall;
    function Get_CA_Raccourci: WideString; safecall;
    procedure Set_CA_Raccourci(const pVal: WideString); safecall;
    function Get_CA_Report: WordBool; safecall;
    procedure Set_CA_Report(pVal: WordBool); safecall;
    function Get_Analyse: IBPAnalyse; safecall;
    procedure Set_Analyse(const pVal: IBPAnalyse); safecall;
    function Get_CA_SautLigne: Smallint; safecall;
    procedure Set_CA_SautLigne(pVal: Smallint); safecall;
    function Get_CA_SautPage: WordBool; safecall;
    procedure Set_CA_SautPage(pVal: WordBool); safecall;
    function Get_CA_Sommeil: WordBool; safecall;
    procedure Set_CA_Sommeil(pVal: WordBool); safecall;
    function Get_CA_DateCreate: TDateTime; safecall;
    function Get_CA_Domaine: CompteADomaineType; safecall;
    procedure Set_CA_Domaine(pVal: CompteADomaineType); safecall;
    function Get_CA_Achat: Double; safecall;
    procedure Set_CA_Achat(pVal: Double); safecall;
    function Get_CA_Vente: Double; safecall;
    procedure Set_CA_Vente(pVal: Double); safecall;
    function Get_InfoLibre: IBIValues; safecall;
    function Get_Collaborateur: IBOCollaborateur; safecall;
    procedure Set_Collaborateur(const pCollaborateur: IBOCollaborateur); safecall;
    function Get_CA_Statut: CompteAStatutType; safecall;
    procedure Set_CA_Statut(pVal: CompteAStatutType); safecall;
    function Get_CA_DateCreationAffaire: TDateTime; safecall;
    procedure Set_CA_DateCreationAffaire(pVal: TDateTime); safecall;
    function Get_CA_DateAcceptAffaire: TDateTime; safecall;
    procedure Set_CA_DateAcceptAffaire(pVal: TDateTime); safecall;
    function Get_CA_DateDebutAffaire: TDateTime; safecall;
    procedure Set_CA_DateDebutAffaire(pVal: TDateTime); safecall;
    function Get_CA_DateFinAffaire: TDateTime; safecall;
    procedure Set_CA_DateFinAffaire(pVal: TDateTime); safecall;
    function Get_CA_ModeFacturation: CompteAModeFacturationType; safecall;
    procedure Set_CA_ModeFacturation(pVal: CompteAModeFacturationType); safecall;
    function Get_FactoryCompteAContact: IBITypeObjectFactory; safecall;
    function Get_FactoryCompteAMedia: IBITypeObjectFactory; safecall;
    property FactoryCompteA: IBOCompteAFactory3 read Get_FactoryCompteA;
    property Analytique: IBPAnalytique3 read Get_Analytique write Set_Analytique;
    property CA_Num: WideString read Get_CA_Num write Set_CA_Num;
    property CA_Type: CompteAType read Get_CA_Type write Set_CA_Type;
    property CA_Intitule: WideString read Get_CA_Intitule write Set_CA_Intitule;
    property CA_Classement: WideString read Get_CA_Classement write Set_CA_Classement;
    property CA_Raccourci: WideString read Get_CA_Raccourci write Set_CA_Raccourci;
    property CA_Report: WordBool read Get_CA_Report write Set_CA_Report;
    property Analyse: IBPAnalyse read Get_Analyse write Set_Analyse;
    property CA_SautLigne: Smallint read Get_CA_SautLigne write Set_CA_SautLigne;
    property CA_SautPage: WordBool read Get_CA_SautPage write Set_CA_SautPage;
    property CA_Sommeil: WordBool read Get_CA_Sommeil write Set_CA_Sommeil;
    property CA_DateCreate: TDateTime read Get_CA_DateCreate;
    property CA_Domaine: CompteADomaineType read Get_CA_Domaine write Set_CA_Domaine;
    property CA_Achat: Double read Get_CA_Achat write Set_CA_Achat;
    property CA_Vente: Double read Get_CA_Vente write Set_CA_Vente;
    property InfoLibre: IBIValues read Get_InfoLibre;
    property Collaborateur: IBOCollaborateur read Get_Collaborateur write Set_Collaborateur;
    property CA_Statut: CompteAStatutType read Get_CA_Statut write Set_CA_Statut;
    property CA_DateCreationAffaire: TDateTime read Get_CA_DateCreationAffaire write Set_CA_DateCreationAffaire;
    property CA_DateAcceptAffaire: TDateTime read Get_CA_DateAcceptAffaire write Set_CA_DateAcceptAffaire;
    property CA_DateDebutAffaire: TDateTime read Get_CA_DateDebutAffaire write Set_CA_DateDebutAffaire;
    property CA_DateFinAffaire: TDateTime read Get_CA_DateFinAffaire write Set_CA_DateFinAffaire;
    property CA_ModeFacturation: CompteAModeFacturationType read Get_CA_ModeFacturation write Set_CA_ModeFacturation;
    property FactoryCompteAContact: IBITypeObjectFactory read Get_FactoryCompteAContact;
    property FactoryCompteAMedia: IBITypeObjectFactory read Get_FactoryCompteAMedia;
  end;

// *********************************************************************//
// DispIntf :    IBOCompteA3Disp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {F4A12389-C6F0-4A1A-8F6F-17D1816C7E26}
// *********************************************************************//
  IBOCompteA3Disp = dispinterface
    ['{F4A12389-C6F0-4A1A-8F6F-17D1816C7E26}']
    property FactoryCompteA: IBOCompteAFactory3 readonly dispid 100;
    property Analytique: IBPAnalytique3 dispid 101;
    property CA_Num: WideString dispid 102;
    property CA_Type: CompteAType dispid 103;
    property CA_Intitule: WideString dispid 104;
    property CA_Classement: WideString dispid 105;
    property CA_Raccourci: WideString dispid 106;
    property CA_Report: WordBool dispid 107;
    property Analyse: IBPAnalyse dispid 108;
    property CA_SautLigne: Smallint dispid 109;
    property CA_SautPage: WordBool dispid 110;
    property CA_Sommeil: WordBool dispid 111;
    property CA_DateCreate: TDateTime readonly dispid 112;
    property CA_Domaine: CompteADomaineType dispid 113;
    property CA_Achat: Double dispid 114;
    property CA_Vente: Double dispid 115;
    property InfoLibre: IBIValues readonly dispid 116;
    property Collaborateur: IBOCollaborateur dispid 117;
    property CA_Statut: CompteAStatutType dispid 118;
    property CA_DateCreationAffaire: TDateTime dispid 119;
    property CA_DateAcceptAffaire: TDateTime dispid 120;
    property CA_DateDebutAffaire: TDateTime dispid 121;
    property CA_DateFinAffaire: TDateTime dispid 122;
    property CA_ModeFacturation: CompteAModeFacturationType dispid 123;
    property FactoryCompteAContact: IBITypeObjectFactory readonly dispid 124;
    property FactoryCompteAMedia: IBITypeObjectFactory readonly dispid 125;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IBOCompteAFactory3
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {2CE84C92-B46A-4AEB-9D9B-BFA7D0C6D2C5}
// *********************************************************************//
  IBOCompteAFactory3 = interface(IBITypeObjectFactory)
    ['{2CE84C92-B46A-4AEB-9D9B-BFA7D0C6D2C5}']
    function ExistNumero(const pAnalytique: IBPAnalytique3; const sNum: WideString): WordBool; safecall;
    function ReadNumero(const pAnalytique: IBPAnalytique3; const sNum: WideString): IBOCompteA3; safecall;
    function Get_InfoLibreFields: IBIFields; safecall;
    function QueryPlanA(const pAnalytique: IBPAnalytique3): IBICollection; safecall;
    procedure CreateInfoLibre(const sName: WideString; sType: eTypeInfoLibre; ilength: Smallint); safecall;
    property InfoLibreFields: IBIFields read Get_InfoLibreFields;
  end;

// *********************************************************************//
// DispIntf :    IBOCompteAFactory3Disp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {2CE84C92-B46A-4AEB-9D9B-BFA7D0C6D2C5}
// *********************************************************************//
  IBOCompteAFactory3Disp = dispinterface
    ['{2CE84C92-B46A-4AEB-9D9B-BFA7D0C6D2C5}']
    function ExistNumero(const pAnalytique: IBPAnalytique3; const sNum: WideString): WordBool; dispid 10;
    function ReadNumero(const pAnalytique: IBPAnalytique3; const sNum: WideString): IBOCompteA3; dispid 11;
    property InfoLibreFields: IBIFields readonly dispid 12;
    function QueryPlanA(const pAnalytique: IBPAnalytique3): IBICollection; dispid 13;
    procedure CreateInfoLibre(const sName: WideString; sType: eTypeInfoLibre; ilength: Smallint); dispid 14;
    property List: IBICollection readonly dispid 1;
    function Create: IBIPersistObject; dispid 2;
    function Read(const pOID: IBIObjectID): IBIPersistObject; dispid 3;
    function _QuerySynchro(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                           TypeExtraction: SynchroExtractType): IBICollection; dispid 4;
    function _QuerySynchroRemoved(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                                  TypeExtraction: SynchroExtractType): IBICollectionDispatch; dispid 5;
    function ReadFrom(const pStream: IStream): IBIPersistObject; dispid 6;
    property ListForward: IBICollection readonly dispid 7;
    function QueryPredicate(const pPredicate: IDispatch; const sSortDescriptors: WideString): IBICollection; dispid 8;
  end;

// *********************************************************************//
// Interface :   IBPAnalytique3
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {67899AAF-D6B5-43DE-820C-630E767F30FB}
// *********************************************************************//
  IBPAnalytique3 = interface(IBIPersistObject)
    ['{67899AAF-D6B5-43DE-820C-630E767F30FB}']
    function Get_FactoryAnalytique: IBPAnalytiqueFactory3; safecall;
    function Get_A_Intitule: WideString; safecall;
    procedure Set_A_Intitule(const pVal: WideString); safecall;
    function Get_SectionAttente: IBOCompteA3; safecall;
    procedure Set_SectionAttente(const pCompteA: IBOCompteA3); safecall;
    function Get_A_Obligatoire: WordBool; safecall;
    procedure Set_A_Obligatoire(pVal: WordBool); safecall;
    function Get_Rupture(sElt: Smallint): IBPAnalytiqueRupture; safecall;
    function Get_IsStructured: WordBool; safecall;
    property FactoryAnalytique: IBPAnalytiqueFactory3 read Get_FactoryAnalytique;
    property A_Intitule: WideString read Get_A_Intitule write Set_A_Intitule;
    property SectionAttente: IBOCompteA3 read Get_SectionAttente write Set_SectionAttente;
    property A_Obligatoire: WordBool read Get_A_Obligatoire write Set_A_Obligatoire;
    property Rupture[sElt: Smallint]: IBPAnalytiqueRupture read Get_Rupture;
    property IsStructured: WordBool read Get_IsStructured;
  end;

// *********************************************************************//
// DispIntf :    IBPAnalytique3Disp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {67899AAF-D6B5-43DE-820C-630E767F30FB}
// *********************************************************************//
  IBPAnalytique3Disp = dispinterface
    ['{67899AAF-D6B5-43DE-820C-630E767F30FB}']
    property FactoryAnalytique: IBPAnalytiqueFactory3 readonly dispid 100;
    property A_Intitule: WideString dispid 101;
    property SectionAttente: IBOCompteA3 dispid 102;
    property A_Obligatoire: WordBool dispid 103;
    property Rupture[sElt: Smallint]: IBPAnalytiqueRupture readonly dispid 104;
    property IsStructured: WordBool readonly dispid 105;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IBPAnalytiqueFactory3
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {E0088168-DC4B-4062-BBE5-4FAFCDF25C0A}
// *********************************************************************//
  IBPAnalytiqueFactory3 = interface(IBITypeObjectFactory)
    ['{E0088168-DC4B-4062-BBE5-4FAFCDF25C0A}']
    function ExistIntitule(const sIntitule: WideString): WordBool; safecall;
    function ReadIntitule(const sIntitule: WideString): IBPAnalytique3; safecall;
  end;

// *********************************************************************//
// DispIntf :    IBPAnalytiqueFactory3Disp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {E0088168-DC4B-4062-BBE5-4FAFCDF25C0A}
// *********************************************************************//
  IBPAnalytiqueFactory3Disp = dispinterface
    ['{E0088168-DC4B-4062-BBE5-4FAFCDF25C0A}']
    function ExistIntitule(const sIntitule: WideString): WordBool; dispid 10;
    function ReadIntitule(const sIntitule: WideString): IBPAnalytique3; dispid 11;
    property List: IBICollection readonly dispid 1;
    function Create: IBIPersistObject; dispid 2;
    function Read(const pOID: IBIObjectID): IBIPersistObject; dispid 3;
    function _QuerySynchro(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                           TypeExtraction: SynchroExtractType): IBICollection; dispid 4;
    function _QuerySynchroRemoved(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                                  TypeExtraction: SynchroExtractType): IBICollectionDispatch; dispid 5;
    function ReadFrom(const pStream: IStream): IBIPersistObject; dispid 6;
    property ListForward: IBICollection readonly dispid 7;
    function QueryPredicate(const pPredicate: IDispatch; const sSortDescriptors: WideString): IBICollection; dispid 8;
  end;

// *********************************************************************//
// Interface :   IBPAnalyse
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {3723FCFA-5384-4666-BAF8-4767E202D581}
// *********************************************************************//
  IBPAnalyse = interface(IBIPersistObject)
    ['{3723FCFA-5384-4666-BAF8-4767E202D581}']
    function Get_FactoryAnalyse: IBPAnalyseFactory; safecall;
    function Get_A_Intitule: WideString; safecall;
    procedure Set_A_Intitule(const pVal: WideString); safecall;
    property FactoryAnalyse: IBPAnalyseFactory read Get_FactoryAnalyse;
    property A_Intitule: WideString read Get_A_Intitule write Set_A_Intitule;
  end;

// *********************************************************************//
// DispIntf :    IBPAnalyseDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {3723FCFA-5384-4666-BAF8-4767E202D581}
// *********************************************************************//
  IBPAnalyseDisp = dispinterface
    ['{3723FCFA-5384-4666-BAF8-4767E202D581}']
    property FactoryAnalyse: IBPAnalyseFactory readonly dispid 100;
    property A_Intitule: WideString dispid 101;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IBPAnalyseFactory
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {C16CDB84-022B-4471-90EF-689793E6A560}
// *********************************************************************//
  IBPAnalyseFactory = interface(IBITypeObjectFactory)
    ['{C16CDB84-022B-4471-90EF-689793E6A560}']
    function ExistIntitule(const sIntitule: WideString): WordBool; safecall;
    function ReadIntitule(const sIntitule: WideString): IBPAnalyse; safecall;
  end;

// *********************************************************************//
// DispIntf :    IBPAnalyseFactoryDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {C16CDB84-022B-4471-90EF-689793E6A560}
// *********************************************************************//
  IBPAnalyseFactoryDisp = dispinterface
    ['{C16CDB84-022B-4471-90EF-689793E6A560}']
    function ExistIntitule(const sIntitule: WideString): WordBool; dispid 10;
    function ReadIntitule(const sIntitule: WideString): IBPAnalyse; dispid 11;
    property List: IBICollection readonly dispid 1;
    function Create: IBIPersistObject; dispid 2;
    function Read(const pOID: IBIObjectID): IBIPersistObject; dispid 3;
    function _QuerySynchro(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                           TypeExtraction: SynchroExtractType): IBICollection; dispid 4;
    function _QuerySynchroRemoved(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                                  TypeExtraction: SynchroExtractType): IBICollectionDispatch; dispid 5;
    function ReadFrom(const pStream: IStream): IBIPersistObject; dispid 6;
    property ListForward: IBICollection readonly dispid 7;
    function QueryPredicate(const pPredicate: IDispatch; const sSortDescriptors: WideString): IBICollection; dispid 8;
  end;

// *********************************************************************//
// Interface :   IBODocumentLigne3
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {7D3D9D90-6A4D-4174-92BA-2BEA034A9095}
// *********************************************************************//
  IBODocumentLigne3 = interface(IBIPersistObject)
    ['{7D3D9D90-6A4D-4174-92BA-2BEA034A9095}']
    function Get_Document: IBODocument3; safecall;
    function Get_FactoryDocumentLigne: IBODocumentLigneFactory; safecall;
    function Get_DO_Domaine: DomaineType; safecall;
    function Get_DO_Type: DocumentType; safecall;
    function Get_DO_Ref: WideString; safecall;
    procedure Set_DO_Ref(const pVal: WideString); safecall;
    function Get_Article: IBOArticle3; safecall;
    function Get_DL_Design: WideString; safecall;
    procedure Set_DL_Design(const pVal: WideString); safecall;
    function Get_DL_Qte: Double; safecall;
    procedure Set_DL_Qte(pVal: Double); safecall;
    function Get_DL_PoidsNet: Double; safecall;
    procedure Set_DL_PoidsNet(pVal: Double); safecall;
    function Get_DL_PoidsBrut: Double; safecall;
    procedure Set_DL_PoidsBrut(pVal: Double); safecall;
    function Get_DL_PrixUnitaire: Double; safecall;
    procedure Set_DL_PrixUnitaire(pVal: Double); safecall;
    function Get_ArticleGammeEnum1: IBOArticleGammeEnum3; safecall;
    function Get_ArticleGammeEnum2: IBOArticleGammeEnum3; safecall;
    function Get_DL_PrixRU: Double; safecall;
    procedure Set_DL_PrixRU(pVal: Double); safecall;
    function Get_DL_CMUP: Double; safecall;
    procedure Set_DL_CMUP(pVal: Double); safecall;
    function Get_DL_MvtStock: DocumentLigneMvtStockType; safecall;
    function Get_EU_Enumere: WideString; safecall;
    procedure Set_EU_Enumere(const pVal: WideString); safecall;
    function Get_EU_Qte: Double; safecall;
    procedure Set_EU_Qte(pVal: Double); safecall;
    function Get_Depot: IBODepot3; safecall;
    procedure Set_Depot(const pDepot: IBODepot3); safecall;
    function Get_DL_MontantHT: Double; safecall;
    function Get_LS_NoSerie: WideString; safecall;
    procedure Set_LS_NoSerie(const pVal: WideString); safecall;
    function Get_LS_Peremption: TDateTime; safecall;
    procedure Set_LS_Peremption(pVal: TDateTime); safecall;
    function Get_LS_Fabrication: TDateTime; safecall;
    procedure Set_LS_Fabrication(pVal: TDateTime); safecall;
    function Get_Valorisee: WordBool; safecall;
    procedure Set_Valorisee(pVal: WordBool); safecall;
    function Get_DL_FactPoids: WordBool; safecall;
    function Get_InfoLibre: IBIValues; safecall;
    procedure SetDefaultArticleReference(const sRef: WideString; Qte: Double); safecall;
    procedure SetDefaultArticle(const pArticle: IBOArticle3; Qte: Double); safecall;
    procedure SetDefaultArticleMonoGamme(const pEnum: IBOArticleGammeEnum3; Qte: Double); safecall;
    procedure SetDefaultArticleDoubleGamme(const pEnum1: IBOArticleGammeEnum3; 
                                           const pEnum2: IBOArticleGammeEnum3; Qte: Double); safecall;
    procedure SetDefaultArticleConditionnement(const pArtCond: IBOArticleCond3; Qte: Double); safecall;
    function Get_FactoryDocumentLigneEmplacement: IBITypeObjectFactory; safecall;
    function Get_Lot: IBOArticleDepotLot; safecall;
    procedure Set_Lot(const pLot: IBOArticleDepotLot); safecall;
    procedure SetDefaultLot(const pLot: IBOArticleDepotLot; Qte: Double); safecall;
    function Get_Collaborateur: IBOCollaborateur; safecall;
    procedure Set_Collaborateur(const pCollaborateur: IBOCollaborateur); safecall;
    function Get_TxtComplementaire: WideString; safecall;
    procedure Set_TxtComplementaire(const pVal: WideString); safecall;
    function Get_Ressource: IBIRessource; safecall;
    procedure Set_Ressource(const pRessource: IBIRessource); safecall;
    function Get_CompteA: IBOCompteA3; safecall;
    procedure Set_CompteA(const pCompteA: IBOCompteA3); safecall;
    function Get_FactoryDocumentLigneLienCM: IBITypeObjectFactory; safecall;
    function Get_DO_Date: TDateTime; safecall;
    procedure Set_DO_Date(pVal: TDateTime); safecall;
    function Get_LS_ComplementOut: WideString; safecall;
    function MoveUp: WordBool; safecall;
    function MoveDown: WordBool; safecall;
    procedure WriteBefore(const pNextLigne: IBODocumentLigne3); safecall;
    procedure WriteDefaultBefore(const pNextLigne: IBODocumentLigne3); safecall;
    procedure SetRessourceDefault(const pRessource: IBIRessource); safecall;
    function Get_DL_PieceOFProd: Integer; safecall;
    procedure Set_DL_PieceOFProd(pVal: Integer); safecall;
    function Get_DL_Operation: WideString; safecall;
    procedure Set_DL_Operation(const pVal: WideString); safecall;
    function Get_DefaultCMUP: Double; safecall;
    procedure WriteTransact; safecall;
    procedure WriteDefaultTransact; safecall;
    procedure WriteCumulLot; safecall;
    procedure SetEmplacementEntree(const pDepotEmpl: IBODepotEmplacement); safecall;
    function HasEmplacementEntree: WordBool; safecall;
    property Document: IBODocument3 read Get_Document;
    property FactoryDocumentLigne: IBODocumentLigneFactory read Get_FactoryDocumentLigne;
    property DO_Domaine: DomaineType read Get_DO_Domaine;
    property DO_Type: DocumentType read Get_DO_Type;
    property DO_Ref: WideString read Get_DO_Ref write Set_DO_Ref;
    property Article: IBOArticle3 read Get_Article;
    property DL_Design: WideString read Get_DL_Design write Set_DL_Design;
    property DL_Qte: Double read Get_DL_Qte write Set_DL_Qte;
    property DL_PoidsNet: Double read Get_DL_PoidsNet write Set_DL_PoidsNet;
    property DL_PoidsBrut: Double read Get_DL_PoidsBrut write Set_DL_PoidsBrut;
    property DL_PrixUnitaire: Double read Get_DL_PrixUnitaire write Set_DL_PrixUnitaire;
    property ArticleGammeEnum1: IBOArticleGammeEnum3 read Get_ArticleGammeEnum1;
    property ArticleGammeEnum2: IBOArticleGammeEnum3 read Get_ArticleGammeEnum2;
    property DL_PrixRU: Double read Get_DL_PrixRU write Set_DL_PrixRU;
    property DL_CMUP: Double read Get_DL_CMUP write Set_DL_CMUP;
    property DL_MvtStock: DocumentLigneMvtStockType read Get_DL_MvtStock;
    property EU_Enumere: WideString read Get_EU_Enumere write Set_EU_Enumere;
    property EU_Qte: Double read Get_EU_Qte write Set_EU_Qte;
    property Depot: IBODepot3 read Get_Depot write Set_Depot;
    property DL_MontantHT: Double read Get_DL_MontantHT;
    property LS_NoSerie: WideString read Get_LS_NoSerie write Set_LS_NoSerie;
    property LS_Peremption: TDateTime read Get_LS_Peremption write Set_LS_Peremption;
    property LS_Fabrication: TDateTime read Get_LS_Fabrication write Set_LS_Fabrication;
    property Valorisee: WordBool read Get_Valorisee write Set_Valorisee;
    property DL_FactPoids: WordBool read Get_DL_FactPoids;
    property InfoLibre: IBIValues read Get_InfoLibre;
    property FactoryDocumentLigneEmplacement: IBITypeObjectFactory read Get_FactoryDocumentLigneEmplacement;
    property Lot: IBOArticleDepotLot read Get_Lot write Set_Lot;
    property Collaborateur: IBOCollaborateur read Get_Collaborateur write Set_Collaborateur;
    property TxtComplementaire: WideString read Get_TxtComplementaire write Set_TxtComplementaire;
    property Ressource: IBIRessource read Get_Ressource write Set_Ressource;
    property CompteA: IBOCompteA3 read Get_CompteA write Set_CompteA;
    property FactoryDocumentLigneLienCM: IBITypeObjectFactory read Get_FactoryDocumentLigneLienCM;
    property DO_Date: TDateTime read Get_DO_Date write Set_DO_Date;
    property LS_ComplementOut: WideString read Get_LS_ComplementOut;
    property DL_PieceOFProd: Integer read Get_DL_PieceOFProd write Set_DL_PieceOFProd;
    property DL_Operation: WideString read Get_DL_Operation write Set_DL_Operation;
    property DefaultCMUP: Double read Get_DefaultCMUP;
  end;

// *********************************************************************//
// DispIntf :    IBODocumentLigne3Disp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {7D3D9D90-6A4D-4174-92BA-2BEA034A9095}
// *********************************************************************//
  IBODocumentLigne3Disp = dispinterface
    ['{7D3D9D90-6A4D-4174-92BA-2BEA034A9095}']
    property Document: IBODocument3 readonly dispid 101;
    property FactoryDocumentLigne: IBODocumentLigneFactory readonly dispid 131;
    property DO_Domaine: DomaineType readonly dispid 102;
    property DO_Type: DocumentType readonly dispid 103;
    property DO_Ref: WideString dispid 104;
    property Article: IBOArticle3 readonly dispid 105;
    property DL_Design: WideString dispid 106;
    property DL_Qte: Double dispid 107;
    property DL_PoidsNet: Double dispid 108;
    property DL_PoidsBrut: Double dispid 109;
    property DL_PrixUnitaire: Double dispid 110;
    property ArticleGammeEnum1: IBOArticleGammeEnum3 readonly dispid 111;
    property ArticleGammeEnum2: IBOArticleGammeEnum3 readonly dispid 112;
    property DL_PrixRU: Double dispid 113;
    property DL_CMUP: Double dispid 114;
    property DL_MvtStock: DocumentLigneMvtStockType readonly dispid 115;
    property EU_Enumere: WideString dispid 116;
    property EU_Qte: Double dispid 117;
    property Depot: IBODepot3 dispid 118;
    property DL_MontantHT: Double readonly dispid 119;
    property LS_NoSerie: WideString dispid 120;
    property LS_Peremption: TDateTime dispid 121;
    property LS_Fabrication: TDateTime dispid 122;
    property Valorisee: WordBool dispid 123;
    property DL_FactPoids: WordBool readonly dispid 124;
    property InfoLibre: IBIValues readonly dispid 125;
    procedure SetDefaultArticleReference(const sRef: WideString; Qte: Double); dispid 126;
    procedure SetDefaultArticle(const pArticle: IBOArticle3; Qte: Double); dispid 127;
    procedure SetDefaultArticleMonoGamme(const pEnum: IBOArticleGammeEnum3; Qte: Double); dispid 128;
    procedure SetDefaultArticleDoubleGamme(const pEnum1: IBOArticleGammeEnum3; 
                                           const pEnum2: IBOArticleGammeEnum3; Qte: Double); dispid 129;
    procedure SetDefaultArticleConditionnement(const pArtCond: IBOArticleCond3; Qte: Double); dispid 130;
    property FactoryDocumentLigneEmplacement: IBITypeObjectFactory readonly dispid 132;
    property Lot: IBOArticleDepotLot dispid 133;
    procedure SetDefaultLot(const pLot: IBOArticleDepotLot; Qte: Double); dispid 134;
    property Collaborateur: IBOCollaborateur dispid 135;
    property TxtComplementaire: WideString dispid 136;
    property Ressource: IBIRessource dispid 137;
    property CompteA: IBOCompteA3 dispid 216;
    property FactoryDocumentLigneLienCM: IBITypeObjectFactory readonly dispid 138;
    property DO_Date: TDateTime dispid 139;
    property LS_ComplementOut: WideString readonly dispid 140;
    function MoveUp: WordBool; dispid 141;
    function MoveDown: WordBool; dispid 142;
    procedure WriteBefore(const pNextLigne: IBODocumentLigne3); dispid 143;
    procedure WriteDefaultBefore(const pNextLigne: IBODocumentLigne3); dispid 144;
    procedure SetRessourceDefault(const pRessource: IBIRessource); dispid 145;
    property DL_PieceOFProd: Integer dispid 146;
    property DL_Operation: WideString dispid 147;
    property DefaultCMUP: Double readonly dispid 148;
    procedure WriteTransact; dispid 149;
    procedure WriteDefaultTransact; dispid 150;
    procedure WriteCumulLot; dispid 151;
    procedure SetEmplacementEntree(const pDepotEmpl: IBODepotEmplacement); dispid 152;
    function HasEmplacementEntree: WordBool; dispid 153;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IBOArticle3
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {E05DF99C-5D91-4A03-B9A1-5C87A92D8298}
// *********************************************************************//
  IBOArticle3 = interface(IBIPersistObject)
    ['{E05DF99C-5D91-4A03-B9A1-5C87A92D8298}']
    function Get_FactoryArticle: IBOArticleFactory3; safecall;
    function Get_FactoryArticleTarifFournisseur: IBITypeObjectFactory; safecall;
    function Get_FactoryArticleTarifClient: IBITypeObjectFactory; safecall;
    function Get_FactoryArticleTarifCategorie: IBITypeObjectFactory; safecall;
    function Get_FactoryArticleMedia: IBITypeObjectFactory; safecall;
    function Get_FactoryArticleGlossaire: IBOArticleGlossaireFactory2; safecall;
    function Get_FactoryArticleParamCompta: IBOArticleParamComptaFactory3; safecall;
    function Get_FactoryArticleDepot: IBOArticleDepotFactory; safecall;
    function Get_FactoryArticleGammeEnum1: IBOArticleGammeEnumFactory; safecall;
    function Get_FactoryArticleGammeEnum2: IBOArticleGammeEnumFactory; safecall;
    function Get_FactoryArticleNomenclature: IBITypeObjectFactory; safecall;
    function Get_FactoryArticleCond: IBOArticleCondFactory; safecall;
    function Get_AR_Ref: WideString; safecall;
    procedure Set_AR_Ref(const pVal: WideString); safecall;
    function Get_AR_Design: WideString; safecall;
    procedure Set_AR_Design(const pVal: WideString); safecall;
    function Get_Famille: IBOFamille3; safecall;
    procedure Set_Famille(const pFamille: IBOFamille3); safecall;
    function Get_ArticleSubstitution: IBOArticle3; safecall;
    procedure Set_ArticleSubstitution(const pArticle: IBOArticle3); safecall;
    function Get_AR_Raccourci: WideString; safecall;
    procedure Set_AR_Raccourci(const pVal: WideString); safecall;
    function Get_AR_Garantie: Smallint; safecall;
    procedure Set_AR_Garantie(pVal: Smallint); safecall;
    function Get_AR_UnitePoids: UnitePoidsType; safecall;
    procedure Set_AR_UnitePoids(pVal: UnitePoidsType); safecall;
    function Get_AR_PoidsNet: Double; safecall;
    procedure Set_AR_PoidsNet(pVal: Double); safecall;
    function Get_AR_PoidsBrut: Double; safecall;
    procedure Set_AR_PoidsBrut(pVal: Double); safecall;
    function Get_Unite: IBPUnite; safecall;
    procedure Set_Unite(const pUnite: IBPUnite); safecall;
    function Get_AR_PrixAchat: Double; safecall;
    procedure Set_AR_PrixAchat(pVal: Double); safecall;
    function Get_AR_Coef: Double; safecall;
    procedure Set_AR_Coef(pVal: Double); safecall;
    function Get_AR_PrixVen: Double; safecall;
    procedure Set_AR_PrixVen(pVal: Double); safecall;
    function Get_AR_PrixTTC: WordBool; safecall;
    procedure Set_AR_PrixTTC(pVal: WordBool); safecall;
    function Get_Gamme1: IBPGamme; safecall;
    procedure Set_Gamme1(const pVal: IBPGamme); safecall;
    function Get_Gamme2: IBPGamme; safecall;
    procedure Set_Gamme2(const pVal: IBPGamme); safecall;
    function Get_AR_SuiviStock: SuiviStockType; safecall;
    procedure Set_AR_SuiviStock(pVal: SuiviStockType); safecall;
    function Get_AR_Nomencl: NomenclatureType; safecall;
    procedure Set_AR_Nomencl(pVal: NomenclatureType); safecall;
    function Get_AR_Stat(sVal: Smallint): WideString; safecall;
    procedure Set_AR_Stat(sVal: Smallint; const pVal: WideString); safecall;
    function Get_AR_Escompte: WordBool; safecall;
    procedure Set_AR_Escompte(pVal: WordBool); safecall;
    function Get_AR_Delai: Smallint; safecall;
    procedure Set_AR_Delai(pVal: Smallint); safecall;
    function Get_AR_HorsStat: WordBool; safecall;
    procedure Set_AR_HorsStat(pVal: WordBool); safecall;
    function Get_AR_VteDebit: WordBool; safecall;
    procedure Set_AR_VteDebit(pVal: WordBool); safecall;
    function Get_AR_NotImp: WordBool; safecall;
    procedure Set_AR_NotImp(pVal: WordBool); safecall;
    function Get_AR_Sommeil: WordBool; safecall;
    procedure Set_AR_Sommeil(pVal: WordBool); safecall;
    function Get_AR_Langue1: WideString; safecall;
    procedure Set_AR_Langue1(const pVal: WideString); safecall;
    function Get_AR_Langue2: WideString; safecall;
    procedure Set_AR_Langue2(const pVal: WideString); safecall;
    function Get_AR_CodeBarre: WideString; safecall;
    procedure Set_AR_CodeBarre(const pVal: WideString); safecall;
    function Get_AR_CodeFiscal: WideString; safecall;
    procedure Set_AR_CodeFiscal(const pVal: WideString); safecall;
    function Get_AR_Pays: WideString; safecall;
    procedure Set_AR_Pays(const pVal: WideString); safecall;
    function Get_AR_Frais: IFrais2; safecall;
    procedure Set_AR_Frais(const pFrais: IFrais2); safecall;
    function Get_Conditionnement: IBPConditionnement; safecall;
    procedure Set_Conditionnement(const pConditionnement: IBPConditionnement); safecall;
    function Get_AR_PUNet: Double; safecall;
    procedure Set_AR_PUNet(pVal: Double); safecall;
    function Get_AR_Contremarque: WordBool; safecall;
    procedure Set_AR_Contremarque(pVal: WordBool); safecall;
    function Get_AR_FactPoids: WordBool; safecall;
    procedure Set_AR_FactPoids(pVal: WordBool); safecall;
    function Get_AR_FactForfait: WordBool; safecall;
    procedure Set_AR_FactForfait(pVal: WordBool); safecall;
    function Get_AR_DateCreation: TDateTime; safecall;
    function Get_AR_Publie: WordBool; safecall;
    procedure Set_AR_Publie(pVal: WordBool); safecall;
    function Get_AR_DateModif: TDateTime; safecall;
    function Get_AR_Photo: WideString; safecall;
    procedure Set_AR_Photo(const pVal: WideString); safecall;
    function Get_FournisseurPrincipal: IBOArticleTarifFournisseur3; safecall;
    procedure Set_FournisseurPrincipal(const pFournisseur: IBOArticleTarifFournisseur3); safecall;
    function Get_ArticleDepotPrincipal: IBOArticleDepot3; safecall;
    procedure Set_ArticleDepotPrincipal(const pDepot: IBOArticleDepot3); safecall;
    function CA_TTC(const pTiers: IBICollection; dDebut: TDateTime; dFin: TDateTime; 
                    TypeDe: DocumentType; TypeA: DocumentType): Double; safecall;
    function CA_HTBrut(const pTiers: IBICollection; dDebut: TDateTime; dFin: TDateTime; 
                       TypeDe: DocumentType; TypeA: DocumentType): Double; safecall;
    function CA_HTNet(const pTiers: IBICollection; dDebut: TDateTime; dFin: TDateTime; 
                      TypeDe: DocumentType; TypeA: DocumentType): Double; safecall;
    function TauxRemiseMoyen(const pTiers: IBICollection; dDebut: TDateTime; dFin: TDateTime; 
                             TypeDe: DocumentType; TypeA: DocumentType): Double; safecall;
    function TotalCoutRevient(const pTiers: IBICollection; dDebut: TDateTime; dFin: TDateTime; 
                              TypeDe: DocumentType; TypeA: DocumentType): Double; safecall;
    function TotalMarge(const pTiers: IBICollection; dDebut: TDateTime; dFin: TDateTime; 
                        TypeDe: DocumentType; TypeA: DocumentType): Double; safecall;
    function TotalQtes(const pTiers: IBICollection; dDebut: TDateTime; dFin: TDateTime; 
                       TypeDe: DocumentType; TypeA: DocumentType): Double; safecall;
    function TotalQtesColisees(const pTiers: IBICollection; dDebut: TDateTime; dFin: TDateTime; 
                               TypeDe: DocumentType; TypeA: DocumentType): Double; safecall;
    function TotalPoidsNet(const pTiers: IBICollection; dDebut: TDateTime; dFin: TDateTime; 
                           TypeDe: DocumentType; TypeA: DocumentType): Double; safecall;
    function TotalPoidsBrut(const pTiers: IBICollection; dDebut: TDateTime; dFin: TDateTime; 
                            TypeDe: DocumentType; TypeA: DocumentType): Double; safecall;
    function TarifVente: ITarifVente2; safecall;
    function TarifVenteCategorie(const pCategorieTarif: IBPCategorieTarif; dQtes: Double): ITarifVente2; safecall;
    function TarifVenteCategorieMonoGamme(const pCategorieTarif: IBPCategorieTarif; 
                                          const pEnum: IBOArticleGammeEnum3; dQtes: Double): ITarifVente2; safecall;
    function TarifVenteCategorieDoubleGamme(const pCategorieTarif: IBPCategorieTarif; 
                                            const pEnum1: IBOArticleGammeEnum3; 
                                            const pEnum2: IBOArticleGammeEnum3; dQtes: Double): ITarifVente2; safecall;
    function TarifVenteCategorieCond(const pCategorieTarif: IBPCategorieTarif; 
                                     const pConditionnement: IBOArticleCond3; dQtes: Double): ITarifVente2; safecall;
    function TarifVenteTiers(const pClient: IBOClient3; dQtes: Double): ITarifVente2; safecall;
    function TarifVenteTiersMonoGamme(const pClient: IBOClient3; const pEnum: IBOArticleGammeEnum3; 
                                      dQtes: Double): ITarifVente2; safecall;
    function TarifVenteTiersDoubleGamme(const pClient: IBOClient3; 
                                        const pEnum1: IBOArticleGammeEnum3; 
                                        const pEnum2: IBOArticleGammeEnum3; dQtes: Double): ITarifVente2; safecall;
    function TarifVenteTiersCond(const pClient: IBOClient3; 
                                 const pConditionnement: IBOArticleCond3; dQtes: Double): ITarifVente2; safecall;
    function TarifAchat: ITarifAchat2; safecall;
    function TarifAchatMonoGamme(const pEnum: IBOArticleGammeEnum3): ITarifAchat2; safecall;
    function TarifAchatDoubleGamme(const pEnum1: IBOArticleGammeEnum3; 
                                   const pEnum2: IBOArticleGammeEnum3): ITarifAchat2; safecall;
    function TarifAchatTiers(const pFournisseur: IBOFournisseur3; dQtes: Double): ITarifAchat2; safecall;
    function TarifAchatTiersMonoGamme(const pFournisseur: IBOFournisseur3; 
                                      const pEnum: IBOArticleGammeEnum3; dQtes: Double): ITarifAchat2; safecall;
    function TarifAchatTiersDoubleGamme(const pFournisseur: IBOFournisseur3; 
                                        const pEnum1: IBOArticleGammeEnum3; 
                                        const pEnum2: IBOArticleGammeEnum3; dQtes: Double): ITarifAchat2; safecall;
    function StockValeur(DateStock: TDateTime): Double; safecall;
    function StockValeurMonoGamme(DateStock: TDateTime; const pEnum: IBOArticleGammeEnum3): Double; safecall;
    function StockValeurDoubleGamme(DateStock: TDateTime; const pEnum1: IBOArticleGammeEnum3; 
                                    const pEnum2: IBOArticleGammeEnum3): Double; safecall;
    function StockQte(DateStock: TDateTime): Double; safecall;
    function StockQteMonoGamme(DateStock: TDateTime; const pEnum: IBOArticleGammeEnum3): Double; safecall;
    function StockQteDoubleGamme(DateStock: TDateTime; const pEnum1: IBOArticleGammeEnum3; 
                                 const pEnum2: IBOArticleGammeEnum3): Double; safecall;
    function StockReel: Double; safecall;
    function StockReelMonoGamme(const pEnum: IBOArticleGammeEnum3): Double; safecall;
    function StockReelDoubleGamme(const pEnum1: IBOArticleGammeEnum3; 
                                  const pEnum2: IBOArticleGammeEnum3): Double; safecall;
    function StockCommande: Double; safecall;
    function StockCommandeMonoGamme(const pEnum: IBOArticleGammeEnum3): Double; safecall;
    function StockCommandeDoubleGamme(const pEnum1: IBOArticleGammeEnum3; 
                                      const pEnum2: IBOArticleGammeEnum3): Double; safecall;
    function StockReserve: Double; safecall;
    function StockReserveMonoGamme(const pEnum: IBOArticleGammeEnum3): Double; safecall;
    function StockReserveDoubleGamme(const pEnum1: IBOArticleGammeEnum3; 
                                     const pEnum2: IBOArticleGammeEnum3): Double; safecall;
    function StockATerme: Double; safecall;
    function StockATermeMonoGamme(const pEnum: IBOArticleGammeEnum3): Double; safecall;
    function StockATermeDoubleGamme(const pEnum1: IBOArticleGammeEnum3; 
                                    const pEnum2: IBOArticleGammeEnum3): Double; safecall;
    function StockPrepare: Double; safecall;
    function StockPrepareMonoGamme(const pEnum: IBOArticleGammeEnum3): Double; safecall;
    function StockPrepareDoubleGamme(const pEnum1: IBOArticleGammeEnum3; 
                                     const pEnum2: IBOArticleGammeEnum3): Double; safecall;
    function StockReserveContremarque: Double; safecall;
    function StockReserveContremarqueMonoGamme(const pEnum: IBOArticleGammeEnum3): Double; safecall;
    function StockReserveContremarqueDoubleGamme(const pEnum1: IBOArticleGammeEnum3; 
                                                 const pEnum2: IBOArticleGammeEnum3): Double; safecall;
    function StockCommandeContremarque: Double; safecall;
    function StockCommandeContremarqueMonoGamme(const pEnum: IBOArticleGammeEnum3): Double; safecall;
    function StockCommandeContremarqueDoubleGamme(const pEnum1: IBOArticleGammeEnum3; 
                                                  const pEnum2: IBOArticleGammeEnum3): Double; safecall;
    function StockDispo: Double; safecall;
    function StockDispoMonoGamme(const pEnum: IBOArticleGammeEnum3): Double; safecall;
    function StockDispoDoubleGamme(const pEnum1: IBOArticleGammeEnum3; 
                                   const pEnum2: IBOArticleGammeEnum3): Double; safecall;
    function Get_ModeleTousDomaine: IBOModele2; safecall;
    procedure Set_ModeleTousDomaine(const pObject: IBOModele2); safecall;
    function Get_ModeleAchat: IBOModele2; safecall;
    procedure Set_ModeleAchat(const pObject: IBOModele2); safecall;
    function Get_ModeleVente: IBOModele2; safecall;
    procedure Set_ModeleVente(const pObject: IBOModele2); safecall;
    function Get_ModeleStock: IBOModele2; safecall;
    procedure Set_ModeleStock(const pObject: IBOModele2); safecall;
    function Get_ModeleComptoir: IBOModele2; safecall;
    procedure Set_ModeleComptoir(const pObject: IBOModele2); safecall;
    function Get_ModeleInterne: IBOModele2; safecall;
    procedure Set_ModeleInterne(const pObject: IBOModele2); safecall;
    function Get_AR_CoutStd: Double; safecall;
    procedure Set_AR_CoutStd(pVal: Double); safecall;
    function Get_AR_QteComp: Double; safecall;
    procedure Set_AR_QteComp(pVal: Double); safecall;
    function Get_AR_QteOperatoire: Double; safecall;
    procedure Set_AR_QteOperatoire(pVal: Double); safecall;
    function Get_InfoLibre: IBIValues; safecall;
    function Get_ConditionnementPrincipal: IBOArticleCond3; safecall;
    procedure Set_ConditionnementPrincipal(const pArtCond: IBOArticleCond3); safecall;
    function Get_ConditionnementAffichage: IBOArticleCond3; safecall;
    procedure Set_ConditionnementAffichage(const pArtCond: IBOArticleCond3); safecall;
    function Get_AR_Prevision: WordBool; safecall;
    procedure Set_AR_Prevision(pVal: WordBool); safecall;
    function Get_Catalogue: IBPProduit2; safecall;
    procedure Set_Catalogue(const pProduit: IBPProduit2); safecall;
    function Get_AR_Type: ArticleType; safecall;
    procedure Set_AR_Type(pVal: ArticleType); safecall;
    function Get_RessourceDefault: IBIRessource; safecall;
    procedure Set_RessourceDefault(const pRessource: IBIRessource); safecall;
    function Get_FactoryArticleRessource: IBOArticleRessourceFactory; safecall;
    function Get_AR_EdiCode: WideString; safecall;
    procedure Set_AR_EdiCode(const pVal: WideString); safecall;
    function Get_AR_Nature: FamilleNatureType; safecall;
    procedure Set_AR_Nature(pVal: FamilleNatureType); safecall;
    function Get_AR_DelaiFabrication: Smallint; safecall;
    procedure Set_AR_DelaiFabrication(pVal: Smallint); safecall;
    function Get_AR_NbColis: Smallint; safecall;
    procedure Set_AR_NbColis(pVal: Smallint); safecall;
    function Get_AR_DelaiPeremption: Smallint; safecall;
    procedure Set_AR_DelaiPeremption(pVal: Smallint); safecall;
    function Get_AR_DelaiSecurite: Smallint; safecall;
    procedure Set_AR_DelaiSecurite(pVal: Smallint); safecall;
    function Get_AR_SousTraitance: WordBool; safecall;
    procedure Set_AR_SousTraitance(pVal: WordBool); safecall;
    function Get_AR_Fictif: WordBool; safecall;
    procedure Set_AR_Fictif(pVal: WordBool); safecall;
    function Get_AR_TypeLancement: LancementType; safecall;
    procedure Set_AR_TypeLancement(pVal: LancementType); safecall;
    function Get_AR_Criticite: FamilleCriticiteType; safecall;
    procedure Set_AR_Criticite(pVal: FamilleCriticiteType); safecall;
    function Get_AR_Cycle: CycleType; safecall;
    procedure Set_AR_Cycle(pVal: CycleType); safecall;
    property FactoryArticle: IBOArticleFactory3 read Get_FactoryArticle;
    property FactoryArticleTarifFournisseur: IBITypeObjectFactory read Get_FactoryArticleTarifFournisseur;
    property FactoryArticleTarifClient: IBITypeObjectFactory read Get_FactoryArticleTarifClient;
    property FactoryArticleTarifCategorie: IBITypeObjectFactory read Get_FactoryArticleTarifCategorie;
    property FactoryArticleMedia: IBITypeObjectFactory read Get_FactoryArticleMedia;
    property FactoryArticleGlossaire: IBOArticleGlossaireFactory2 read Get_FactoryArticleGlossaire;
    property FactoryArticleParamCompta: IBOArticleParamComptaFactory3 read Get_FactoryArticleParamCompta;
    property FactoryArticleDepot: IBOArticleDepotFactory read Get_FactoryArticleDepot;
    property FactoryArticleGammeEnum1: IBOArticleGammeEnumFactory read Get_FactoryArticleGammeEnum1;
    property FactoryArticleGammeEnum2: IBOArticleGammeEnumFactory read Get_FactoryArticleGammeEnum2;
    property FactoryArticleNomenclature: IBITypeObjectFactory read Get_FactoryArticleNomenclature;
    property FactoryArticleCond: IBOArticleCondFactory read Get_FactoryArticleCond;
    property AR_Ref: WideString read Get_AR_Ref write Set_AR_Ref;
    property AR_Design: WideString read Get_AR_Design write Set_AR_Design;
    property Famille: IBOFamille3 read Get_Famille write Set_Famille;
    property ArticleSubstitution: IBOArticle3 read Get_ArticleSubstitution write Set_ArticleSubstitution;
    property AR_Raccourci: WideString read Get_AR_Raccourci write Set_AR_Raccourci;
    property AR_Garantie: Smallint read Get_AR_Garantie write Set_AR_Garantie;
    property AR_UnitePoids: UnitePoidsType read Get_AR_UnitePoids write Set_AR_UnitePoids;
    property AR_PoidsNet: Double read Get_AR_PoidsNet write Set_AR_PoidsNet;
    property AR_PoidsBrut: Double read Get_AR_PoidsBrut write Set_AR_PoidsBrut;
    property Unite: IBPUnite read Get_Unite write Set_Unite;
    property AR_PrixAchat: Double read Get_AR_PrixAchat write Set_AR_PrixAchat;
    property AR_Coef: Double read Get_AR_Coef write Set_AR_Coef;
    property AR_PrixVen: Double read Get_AR_PrixVen write Set_AR_PrixVen;
    property AR_PrixTTC: WordBool read Get_AR_PrixTTC write Set_AR_PrixTTC;
    property Gamme1: IBPGamme read Get_Gamme1 write Set_Gamme1;
    property Gamme2: IBPGamme read Get_Gamme2 write Set_Gamme2;
    property AR_SuiviStock: SuiviStockType read Get_AR_SuiviStock write Set_AR_SuiviStock;
    property AR_Nomencl: NomenclatureType read Get_AR_Nomencl write Set_AR_Nomencl;
    property AR_Stat[sVal: Smallint]: WideString read Get_AR_Stat write Set_AR_Stat;
    property AR_Escompte: WordBool read Get_AR_Escompte write Set_AR_Escompte;
    property AR_Delai: Smallint read Get_AR_Delai write Set_AR_Delai;
    property AR_HorsStat: WordBool read Get_AR_HorsStat write Set_AR_HorsStat;
    property AR_VteDebit: WordBool read Get_AR_VteDebit write Set_AR_VteDebit;
    property AR_NotImp: WordBool read Get_AR_NotImp write Set_AR_NotImp;
    property AR_Sommeil: WordBool read Get_AR_Sommeil write Set_AR_Sommeil;
    property AR_Langue1: WideString read Get_AR_Langue1 write Set_AR_Langue1;
    property AR_Langue2: WideString read Get_AR_Langue2 write Set_AR_Langue2;
    property AR_CodeBarre: WideString read Get_AR_CodeBarre write Set_AR_CodeBarre;
    property AR_CodeFiscal: WideString read Get_AR_CodeFiscal write Set_AR_CodeFiscal;
    property AR_Pays: WideString read Get_AR_Pays write Set_AR_Pays;
    property AR_Frais: IFrais2 read Get_AR_Frais write Set_AR_Frais;
    property Conditionnement: IBPConditionnement read Get_Conditionnement write Set_Conditionnement;
    property AR_PUNet: Double read Get_AR_PUNet write Set_AR_PUNet;
    property AR_Contremarque: WordBool read Get_AR_Contremarque write Set_AR_Contremarque;
    property AR_FactPoids: WordBool read Get_AR_FactPoids write Set_AR_FactPoids;
    property AR_FactForfait: WordBool read Get_AR_FactForfait write Set_AR_FactForfait;
    property AR_DateCreation: TDateTime read Get_AR_DateCreation;
    property AR_Publie: WordBool read Get_AR_Publie write Set_AR_Publie;
    property AR_DateModif: TDateTime read Get_AR_DateModif;
    property AR_Photo: WideString read Get_AR_Photo write Set_AR_Photo;
    property FournisseurPrincipal: IBOArticleTarifFournisseur3 read Get_FournisseurPrincipal write Set_FournisseurPrincipal;
    property ArticleDepotPrincipal: IBOArticleDepot3 read Get_ArticleDepotPrincipal write Set_ArticleDepotPrincipal;
    property ModeleTousDomaine: IBOModele2 read Get_ModeleTousDomaine write Set_ModeleTousDomaine;
    property ModeleAchat: IBOModele2 read Get_ModeleAchat write Set_ModeleAchat;
    property ModeleVente: IBOModele2 read Get_ModeleVente write Set_ModeleVente;
    property ModeleStock: IBOModele2 read Get_ModeleStock write Set_ModeleStock;
    property ModeleComptoir: IBOModele2 read Get_ModeleComptoir write Set_ModeleComptoir;
    property ModeleInterne: IBOModele2 read Get_ModeleInterne write Set_ModeleInterne;
    property AR_CoutStd: Double read Get_AR_CoutStd write Set_AR_CoutStd;
    property AR_QteComp: Double read Get_AR_QteComp write Set_AR_QteComp;
    property AR_QteOperatoire: Double read Get_AR_QteOperatoire write Set_AR_QteOperatoire;
    property InfoLibre: IBIValues read Get_InfoLibre;
    property ConditionnementPrincipal: IBOArticleCond3 read Get_ConditionnementPrincipal write Set_ConditionnementPrincipal;
    property ConditionnementAffichage: IBOArticleCond3 read Get_ConditionnementAffichage write Set_ConditionnementAffichage;
    property AR_Prevision: WordBool read Get_AR_Prevision write Set_AR_Prevision;
    property Catalogue: IBPProduit2 read Get_Catalogue write Set_Catalogue;
    property AR_Type: ArticleType read Get_AR_Type write Set_AR_Type;
    property RessourceDefault: IBIRessource read Get_RessourceDefault write Set_RessourceDefault;
    property FactoryArticleRessource: IBOArticleRessourceFactory read Get_FactoryArticleRessource;
    property AR_EdiCode: WideString read Get_AR_EdiCode write Set_AR_EdiCode;
    property AR_Nature: FamilleNatureType read Get_AR_Nature write Set_AR_Nature;
    property AR_DelaiFabrication: Smallint read Get_AR_DelaiFabrication write Set_AR_DelaiFabrication;
    property AR_NbColis: Smallint read Get_AR_NbColis write Set_AR_NbColis;
    property AR_DelaiPeremption: Smallint read Get_AR_DelaiPeremption write Set_AR_DelaiPeremption;
    property AR_DelaiSecurite: Smallint read Get_AR_DelaiSecurite write Set_AR_DelaiSecurite;
    property AR_SousTraitance: WordBool read Get_AR_SousTraitance write Set_AR_SousTraitance;
    property AR_Fictif: WordBool read Get_AR_Fictif write Set_AR_Fictif;
    property AR_TypeLancement: LancementType read Get_AR_TypeLancement write Set_AR_TypeLancement;
    property AR_Criticite: FamilleCriticiteType read Get_AR_Criticite write Set_AR_Criticite;
    property AR_Cycle: CycleType read Get_AR_Cycle write Set_AR_Cycle;
  end;

// *********************************************************************//
// DispIntf :    IBOArticle3Disp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {E05DF99C-5D91-4A03-B9A1-5C87A92D8298}
// *********************************************************************//
  IBOArticle3Disp = dispinterface
    ['{E05DF99C-5D91-4A03-B9A1-5C87A92D8298}']
    property FactoryArticle: IBOArticleFactory3 readonly dispid 100;
    property FactoryArticleTarifFournisseur: IBITypeObjectFactory readonly dispid 101;
    property FactoryArticleTarifClient: IBITypeObjectFactory readonly dispid 102;
    property FactoryArticleTarifCategorie: IBITypeObjectFactory readonly dispid 103;
    property FactoryArticleMedia: IBITypeObjectFactory readonly dispid 104;
    property FactoryArticleGlossaire: IBOArticleGlossaireFactory2 readonly dispid 106;
    property FactoryArticleParamCompta: IBOArticleParamComptaFactory3 readonly dispid 107;
    property FactoryArticleDepot: IBOArticleDepotFactory readonly dispid 108;
    property FactoryArticleGammeEnum1: IBOArticleGammeEnumFactory readonly dispid 109;
    property FactoryArticleGammeEnum2: IBOArticleGammeEnumFactory readonly dispid 110;
    property FactoryArticleNomenclature: IBITypeObjectFactory readonly dispid 111;
    property FactoryArticleCond: IBOArticleCondFactory readonly dispid 112;
    property AR_Ref: WideString dispid 113;
    property AR_Design: WideString dispid 114;
    property Famille: IBOFamille3 dispid 115;
    property ArticleSubstitution: IBOArticle3 dispid 116;
    property AR_Raccourci: WideString dispid 117;
    property AR_Garantie: Smallint dispid 118;
    property AR_UnitePoids: UnitePoidsType dispid 119;
    property AR_PoidsNet: Double dispid 120;
    property AR_PoidsBrut: Double dispid 121;
    property Unite: IBPUnite dispid 122;
    property AR_PrixAchat: Double dispid 123;
    property AR_Coef: Double dispid 124;
    property AR_PrixVen: Double dispid 125;
    property AR_PrixTTC: WordBool dispid 126;
    property Gamme1: IBPGamme dispid 127;
    property Gamme2: IBPGamme dispid 128;
    property AR_SuiviStock: SuiviStockType dispid 129;
    property AR_Nomencl: NomenclatureType dispid 130;
    property AR_Stat[sVal: Smallint]: WideString dispid 131;
    property AR_Escompte: WordBool dispid 132;
    property AR_Delai: Smallint dispid 133;
    property AR_HorsStat: WordBool dispid 134;
    property AR_VteDebit: WordBool dispid 135;
    property AR_NotImp: WordBool dispid 136;
    property AR_Sommeil: WordBool dispid 137;
    property AR_Langue1: WideString dispid 138;
    property AR_Langue2: WideString dispid 139;
    property AR_CodeBarre: WideString dispid 144;
    property AR_CodeFiscal: WideString dispid 145;
    property AR_Pays: WideString dispid 146;
    property AR_Frais: IFrais2 dispid 147;
    property Conditionnement: IBPConditionnement dispid 148;
    property AR_PUNet: Double dispid 149;
    property AR_Contremarque: WordBool dispid 150;
    property AR_FactPoids: WordBool dispid 151;
    property AR_FactForfait: WordBool dispid 152;
    property AR_DateCreation: TDateTime readonly dispid 153;
    property AR_Publie: WordBool dispid 155;
    property AR_DateModif: TDateTime readonly dispid 156;
    property AR_Photo: WideString dispid 157;
    property FournisseurPrincipal: IBOArticleTarifFournisseur3 dispid 158;
    property ArticleDepotPrincipal: IBOArticleDepot3 dispid 159;
    function CA_TTC(const pTiers: IBICollection; dDebut: TDateTime; dFin: TDateTime; 
                    TypeDe: DocumentType; TypeA: DocumentType): Double; dispid 160;
    function CA_HTBrut(const pTiers: IBICollection; dDebut: TDateTime; dFin: TDateTime; 
                       TypeDe: DocumentType; TypeA: DocumentType): Double; dispid 161;
    function CA_HTNet(const pTiers: IBICollection; dDebut: TDateTime; dFin: TDateTime; 
                      TypeDe: DocumentType; TypeA: DocumentType): Double; dispid 162;
    function TauxRemiseMoyen(const pTiers: IBICollection; dDebut: TDateTime; dFin: TDateTime; 
                             TypeDe: DocumentType; TypeA: DocumentType): Double; dispid 163;
    function TotalCoutRevient(const pTiers: IBICollection; dDebut: TDateTime; dFin: TDateTime; 
                              TypeDe: DocumentType; TypeA: DocumentType): Double; dispid 164;
    function TotalMarge(const pTiers: IBICollection; dDebut: TDateTime; dFin: TDateTime; 
                        TypeDe: DocumentType; TypeA: DocumentType): Double; dispid 165;
    function TotalQtes(const pTiers: IBICollection; dDebut: TDateTime; dFin: TDateTime; 
                       TypeDe: DocumentType; TypeA: DocumentType): Double; dispid 166;
    function TotalQtesColisees(const pTiers: IBICollection; dDebut: TDateTime; dFin: TDateTime; 
                               TypeDe: DocumentType; TypeA: DocumentType): Double; dispid 167;
    function TotalPoidsNet(const pTiers: IBICollection; dDebut: TDateTime; dFin: TDateTime; 
                           TypeDe: DocumentType; TypeA: DocumentType): Double; dispid 168;
    function TotalPoidsBrut(const pTiers: IBICollection; dDebut: TDateTime; dFin: TDateTime; 
                            TypeDe: DocumentType; TypeA: DocumentType): Double; dispid 169;
    function TarifVente: ITarifVente2; dispid 170;
    function TarifVenteCategorie(const pCategorieTarif: IBPCategorieTarif; dQtes: Double): ITarifVente2; dispid 171;
    function TarifVenteCategorieMonoGamme(const pCategorieTarif: IBPCategorieTarif; 
                                          const pEnum: IBOArticleGammeEnum3; dQtes: Double): ITarifVente2; dispid 172;
    function TarifVenteCategorieDoubleGamme(const pCategorieTarif: IBPCategorieTarif; 
                                            const pEnum1: IBOArticleGammeEnum3; 
                                            const pEnum2: IBOArticleGammeEnum3; dQtes: Double): ITarifVente2; dispid 173;
    function TarifVenteCategorieCond(const pCategorieTarif: IBPCategorieTarif; 
                                     const pConditionnement: IBOArticleCond3; dQtes: Double): ITarifVente2; dispid 174;
    function TarifVenteTiers(const pClient: IBOClient3; dQtes: Double): ITarifVente2; dispid 175;
    function TarifVenteTiersMonoGamme(const pClient: IBOClient3; const pEnum: IBOArticleGammeEnum3; 
                                      dQtes: Double): ITarifVente2; dispid 176;
    function TarifVenteTiersDoubleGamme(const pClient: IBOClient3; 
                                        const pEnum1: IBOArticleGammeEnum3; 
                                        const pEnum2: IBOArticleGammeEnum3; dQtes: Double): ITarifVente2; dispid 177;
    function TarifVenteTiersCond(const pClient: IBOClient3; 
                                 const pConditionnement: IBOArticleCond3; dQtes: Double): ITarifVente2; dispid 178;
    function TarifAchat: ITarifAchat2; dispid 179;
    function TarifAchatMonoGamme(const pEnum: IBOArticleGammeEnum3): ITarifAchat2; dispid 180;
    function TarifAchatDoubleGamme(const pEnum1: IBOArticleGammeEnum3; 
                                   const pEnum2: IBOArticleGammeEnum3): ITarifAchat2; dispid 181;
    function TarifAchatTiers(const pFournisseur: IBOFournisseur3; dQtes: Double): ITarifAchat2; dispid 182;
    function TarifAchatTiersMonoGamme(const pFournisseur: IBOFournisseur3; 
                                      const pEnum: IBOArticleGammeEnum3; dQtes: Double): ITarifAchat2; dispid 183;
    function TarifAchatTiersDoubleGamme(const pFournisseur: IBOFournisseur3; 
                                        const pEnum1: IBOArticleGammeEnum3; 
                                        const pEnum2: IBOArticleGammeEnum3; dQtes: Double): ITarifAchat2; dispid 184;
    function StockValeur(DateStock: TDateTime): Double; dispid 185;
    function StockValeurMonoGamme(DateStock: TDateTime; const pEnum: IBOArticleGammeEnum3): Double; dispid 186;
    function StockValeurDoubleGamme(DateStock: TDateTime; const pEnum1: IBOArticleGammeEnum3; 
                                    const pEnum2: IBOArticleGammeEnum3): Double; dispid 187;
    function StockQte(DateStock: TDateTime): Double; dispid 188;
    function StockQteMonoGamme(DateStock: TDateTime; const pEnum: IBOArticleGammeEnum3): Double; dispid 189;
    function StockQteDoubleGamme(DateStock: TDateTime; const pEnum1: IBOArticleGammeEnum3; 
                                 const pEnum2: IBOArticleGammeEnum3): Double; dispid 190;
    function StockReel: Double; dispid 191;
    function StockReelMonoGamme(const pEnum: IBOArticleGammeEnum3): Double; dispid 192;
    function StockReelDoubleGamme(const pEnum1: IBOArticleGammeEnum3; 
                                  const pEnum2: IBOArticleGammeEnum3): Double; dispid 193;
    function StockCommande: Double; dispid 194;
    function StockCommandeMonoGamme(const pEnum: IBOArticleGammeEnum3): Double; dispid 195;
    function StockCommandeDoubleGamme(const pEnum1: IBOArticleGammeEnum3; 
                                      const pEnum2: IBOArticleGammeEnum3): Double; dispid 196;
    function StockReserve: Double; dispid 197;
    function StockReserveMonoGamme(const pEnum: IBOArticleGammeEnum3): Double; dispid 198;
    function StockReserveDoubleGamme(const pEnum1: IBOArticleGammeEnum3; 
                                     const pEnum2: IBOArticleGammeEnum3): Double; dispid 199;
    function StockATerme: Double; dispid 200;
    function StockATermeMonoGamme(const pEnum: IBOArticleGammeEnum3): Double; dispid 201;
    function StockATermeDoubleGamme(const pEnum1: IBOArticleGammeEnum3; 
                                    const pEnum2: IBOArticleGammeEnum3): Double; dispid 202;
    function StockPrepare: Double; dispid 203;
    function StockPrepareMonoGamme(const pEnum: IBOArticleGammeEnum3): Double; dispid 204;
    function StockPrepareDoubleGamme(const pEnum1: IBOArticleGammeEnum3; 
                                     const pEnum2: IBOArticleGammeEnum3): Double; dispid 205;
    function StockReserveContremarque: Double; dispid 206;
    function StockReserveContremarqueMonoGamme(const pEnum: IBOArticleGammeEnum3): Double; dispid 207;
    function StockReserveContremarqueDoubleGamme(const pEnum1: IBOArticleGammeEnum3; 
                                                 const pEnum2: IBOArticleGammeEnum3): Double; dispid 208;
    function StockCommandeContremarque: Double; dispid 209;
    function StockCommandeContremarqueMonoGamme(const pEnum: IBOArticleGammeEnum3): Double; dispid 210;
    function StockCommandeContremarqueDoubleGamme(const pEnum1: IBOArticleGammeEnum3; 
                                                  const pEnum2: IBOArticleGammeEnum3): Double; dispid 211;
    function StockDispo: Double; dispid 212;
    function StockDispoMonoGamme(const pEnum: IBOArticleGammeEnum3): Double; dispid 213;
    function StockDispoDoubleGamme(const pEnum1: IBOArticleGammeEnum3; 
                                   const pEnum2: IBOArticleGammeEnum3): Double; dispid 214;
    property ModeleTousDomaine: IBOModele2 dispid 215;
    property ModeleAchat: IBOModele2 dispid 216;
    property ModeleVente: IBOModele2 dispid 217;
    property ModeleStock: IBOModele2 dispid 218;
    property ModeleComptoir: IBOModele2 dispid 219;
    property ModeleInterne: IBOModele2 dispid 220;
    property AR_CoutStd: Double dispid 221;
    property AR_QteComp: Double dispid 222;
    property AR_QteOperatoire: Double dispid 223;
    property InfoLibre: IBIValues readonly dispid 224;
    property ConditionnementPrincipal: IBOArticleCond3 dispid 225;
    property ConditionnementAffichage: IBOArticleCond3 dispid 226;
    property AR_Prevision: WordBool dispid 227;
    property Catalogue: IBPProduit2 dispid 228;
    property AR_Type: ArticleType dispid 229;
    property RessourceDefault: IBIRessource dispid 230;
    property FactoryArticleRessource: IBOArticleRessourceFactory readonly dispid 231;
    property AR_EdiCode: WideString dispid 232;
    property AR_Nature: FamilleNatureType dispid 233;
    property AR_DelaiFabrication: Smallint dispid 234;
    property AR_NbColis: Smallint dispid 235;
    property AR_DelaiPeremption: Smallint dispid 236;
    property AR_DelaiSecurite: Smallint dispid 237;
    property AR_SousTraitance: WordBool dispid 238;
    property AR_Fictif: WordBool dispid 239;
    property AR_TypeLancement: LancementType dispid 240;
    property AR_Criticite: FamilleCriticiteType dispid 241;
    property AR_Cycle: CycleType dispid 242;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IBOArticleFactory3
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {154DA331-CD29-403D-80F1-8D812FE017FB}
// *********************************************************************//
  IBOArticleFactory3 = interface(IBITypeObjectFactory)
    ['{154DA331-CD29-403D-80F1-8D812FE017FB}']
    function Get_ListOrderReference: IBICollection; safecall;
    function Get_ListOrderFamille: IBICollection; safecall;
    function ExistReference(const sReference: WideString): WordBool; safecall;
    function ReadReference(const sReference: WideString): IBOArticle3; safecall;
    function ExistCodeBarre(const sCodeBarre: WideString): WordBool; safecall;
    function ReadCodeBarre(const sCodeBarre: WideString): IBOArticle3; safecall;
    function QueryActifOrderReference: IBICollection; safecall;
    function QueryPublieOrderReference: IBICollection; safecall;
    function QueryReferenceOrderReference(const AR_RefDe: WideString; const AR_RefA: WideString): IBICollection; safecall;
    function QueryFamille(const pFamille: IBOFamille3): IBICollection; safecall;
    function QueryMouvementeOrderReference: IBICollection; safecall;
    function QueryReplicate(lIndice: Integer): IBICollection; safecall;
    function Get_InfoLibreFields: IBIFields; safecall;
    function QueryCatalogue(const pProduit: IBPProduit2): IBICollection; safecall;
    function QueryBaremeSoldeApplicable(const pSolde: IBOBaremeSolde): IBICollection; safecall;
    function QueryDepotEmplacement(const pEmpl: IBODepotEmplacement): IBICollection; safecall;
    function _QuerySynchroOID(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                              TypeExtraction: SynchroExtractType): IBICollectionDispatch; safecall;
    function Get_ListOrderDesignation: IBICollection; safecall;
    procedure CreateInfoLibre(const sName: WideString; sType: eTypeInfoLibre; ilength: Smallint); safecall;
    property ListOrderReference: IBICollection read Get_ListOrderReference;
    property ListOrderFamille: IBICollection read Get_ListOrderFamille;
    property InfoLibreFields: IBIFields read Get_InfoLibreFields;
    property ListOrderDesignation: IBICollection read Get_ListOrderDesignation;
  end;

// *********************************************************************//
// DispIntf :    IBOArticleFactory3Disp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {154DA331-CD29-403D-80F1-8D812FE017FB}
// *********************************************************************//
  IBOArticleFactory3Disp = dispinterface
    ['{154DA331-CD29-403D-80F1-8D812FE017FB}']
    property ListOrderReference: IBICollection readonly dispid 10;
    property ListOrderFamille: IBICollection readonly dispid 11;
    function ExistReference(const sReference: WideString): WordBool; dispid 12;
    function ReadReference(const sReference: WideString): IBOArticle3; dispid 13;
    function ExistCodeBarre(const sCodeBarre: WideString): WordBool; dispid 14;
    function ReadCodeBarre(const sCodeBarre: WideString): IBOArticle3; dispid 15;
    function QueryActifOrderReference: IBICollection; dispid 16;
    function QueryPublieOrderReference: IBICollection; dispid 17;
    function QueryReferenceOrderReference(const AR_RefDe: WideString; const AR_RefA: WideString): IBICollection; dispid 18;
    function QueryFamille(const pFamille: IBOFamille3): IBICollection; dispid 19;
    function QueryMouvementeOrderReference: IBICollection; dispid 20;
    function QueryReplicate(lIndice: Integer): IBICollection; dispid 21;
    property InfoLibreFields: IBIFields readonly dispid 22;
    function QueryCatalogue(const pProduit: IBPProduit2): IBICollection; dispid 23;
    function QueryBaremeSoldeApplicable(const pSolde: IBOBaremeSolde): IBICollection; dispid 24;
    function QueryDepotEmplacement(const pEmpl: IBODepotEmplacement): IBICollection; dispid 25;
    function _QuerySynchroOID(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                              TypeExtraction: SynchroExtractType): IBICollectionDispatch; dispid 26;
    property ListOrderDesignation: IBICollection readonly dispid 27;
    procedure CreateInfoLibre(const sName: WideString; sType: eTypeInfoLibre; ilength: Smallint); dispid 28;
    property List: IBICollection readonly dispid 1;
    function Create: IBIPersistObject; dispid 2;
    function Read(const pOID: IBIObjectID): IBIPersistObject; dispid 3;
    function _QuerySynchro(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                           TypeExtraction: SynchroExtractType): IBICollection; dispid 4;
    function _QuerySynchroRemoved(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                                  TypeExtraction: SynchroExtractType): IBICollectionDispatch; dispid 5;
    function ReadFrom(const pStream: IStream): IBIPersistObject; dispid 6;
    property ListForward: IBICollection readonly dispid 7;
    function QueryPredicate(const pPredicate: IDispatch; const sSortDescriptors: WideString): IBICollection; dispid 8;
  end;

// *********************************************************************//
// Interface :   IBOFamille3
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {8F8ABB37-5FD5-4AD8-860D-30F6D8C6BF31}
// *********************************************************************//
  IBOFamille3 = interface(IBIPersistObject)
    ['{8F8ABB37-5FD5-4AD8-860D-30F6D8C6BF31}']
    function Get_FactoryFamille: IBOFamilleFactory2; safecall;
    function Get_FactoryFamilleParamCompta: IBITypeObjectFactory; safecall;
    function Get_FA_CodeFamille: WideString; safecall;
    procedure Set_FA_CodeFamille(const pVal: WideString); safecall;
    function Get_FA_Type: FamilleType; safecall;
    procedure Set_FA_Type(pVal: FamilleType); safecall;
    function Get_FA_Intitule: WideString; safecall;
    procedure Set_FA_Intitule(const pVal: WideString); safecall;
    function Get_Unite: IBPUnite; safecall;
    procedure Set_Unite(const pUnite: IBPUnite); safecall;
    function Get_Produit: IBPProduit2; safecall;
    procedure Set_Produit(const pProduit: IBPProduit2); safecall;
    function Get_FA_Coef: Double; safecall;
    procedure Set_FA_Coef(pVal: Double); safecall;
    function Get_FA_SuiviStock: SuiviStockType; safecall;
    procedure Set_FA_SuiviStock(pVal: SuiviStockType); safecall;
    function Get_FA_Garantie: Smallint; safecall;
    procedure Set_FA_Garantie(pVal: Smallint); safecall;
    function Get_FamilleCentral: IBOFamille3; safecall;
    procedure Set_FamilleCentral(const pFamille: IBOFamille3); safecall;
    function Get_FA_Stat(sElt: Smallint): WideString; safecall;
    procedure Set_FA_Stat(sElt: Smallint; const pVal: WideString); safecall;
    function Get_FA_CodeFiscal: WideString; safecall;
    procedure Set_FA_CodeFiscal(const pVal: WideString); safecall;
    function Get_FA_Pays: WideString; safecall;
    procedure Set_FA_Pays(const pVal: WideString); safecall;
    function Get_FA_UnitePoids: UnitePoidsType; safecall;
    procedure Set_FA_UnitePoids(pVal: UnitePoidsType); safecall;
    function Get_FA_Escompte: WordBool; safecall;
    procedure Set_FA_Escompte(pVal: WordBool); safecall;
    function Get_FA_Delai: Smallint; safecall;
    procedure Set_FA_Delai(pVal: Smallint); safecall;
    function Get_FA_HorsStat: WordBool; safecall;
    procedure Set_FA_HorsStat(pVal: WordBool); safecall;
    function Get_FA_VteDebit: WordBool; safecall;
    procedure Set_FA_VteDebit(pVal: WordBool); safecall;
    function Get_FA_NotImp: WordBool; safecall;
    procedure Set_FA_NotImp(pVal: WordBool); safecall;
    function Get_Frais: IFrais2; safecall;
    procedure Set_Frais(const pFrais: IFrais2); safecall;
    function Get_FA_Contremarque: WordBool; safecall;
    procedure Set_FA_Contremarque(pVal: WordBool); safecall;
    function Get_FA_FactPoids: WordBool; safecall;
    procedure Set_FA_FactPoids(pVal: WordBool); safecall;
    function Get_FA_FactForfait: WordBool; safecall;
    procedure Set_FA_FactForfait(pVal: WordBool); safecall;
    function Get_FA_Publie: WordBool; safecall;
    procedure Set_FA_Publie(pVal: WordBool); safecall;
    function Get_FactoryFamilleTarifCategorie: IBITypeObjectFactory; safecall;
    function Get_FactoryFamilleTarifClient: IBITypeObjectFactory; safecall;
    function Get_FactoryFamilleTarifFournisseur: IBITypeObjectFactory; safecall;
    function Get_ModeleTousDomaine: IBOModele2; safecall;
    procedure Set_ModeleTousDomaine(const pObject: IBOModele2); safecall;
    function Get_ModeleAchat: IBOModele2; safecall;
    procedure Set_ModeleAchat(const pObject: IBOModele2); safecall;
    function Get_ModeleVente: IBOModele2; safecall;
    procedure Set_ModeleVente(const pObject: IBOModele2); safecall;
    function Get_ModeleStock: IBOModele2; safecall;
    procedure Set_ModeleStock(const pObject: IBOModele2); safecall;
    function Get_ModeleComptoir: IBOModele2; safecall;
    procedure Set_ModeleComptoir(const pObject: IBOModele2); safecall;
    function Get_ModeleInterne: IBOModele2; safecall;
    procedure Set_ModeleInterne(const pObject: IBOModele2); safecall;
    function Get_Catalogue: IBPProduit2; safecall;
    procedure Set_Catalogue(const pProduit: IBPProduit2); safecall;
    function Get_FA_Nature: FamilleNatureType; safecall;
    procedure Set_FA_Nature(pVal: FamilleNatureType); safecall;
    function Get_FA_NbColis: Smallint; safecall;
    procedure Set_FA_NbColis(pVal: Smallint); safecall;
    function Get_FA_SousTraitance: WordBool; safecall;
    procedure Set_FA_SousTraitance(pVal: WordBool); safecall;
    function Get_FA_Fictif: WordBool; safecall;
    procedure Set_FA_Fictif(pVal: WordBool); safecall;
    function Get_FA_Criticite: FamilleCriticiteType; safecall;
    procedure Set_FA_Criticite(pVal: FamilleCriticiteType); safecall;
    property FactoryFamille: IBOFamilleFactory2 read Get_FactoryFamille;
    property FactoryFamilleParamCompta: IBITypeObjectFactory read Get_FactoryFamilleParamCompta;
    property FA_CodeFamille: WideString read Get_FA_CodeFamille write Set_FA_CodeFamille;
    property FA_Type: FamilleType read Get_FA_Type write Set_FA_Type;
    property FA_Intitule: WideString read Get_FA_Intitule write Set_FA_Intitule;
    property Unite: IBPUnite read Get_Unite write Set_Unite;
    property Produit: IBPProduit2 read Get_Produit write Set_Produit;
    property FA_Coef: Double read Get_FA_Coef write Set_FA_Coef;
    property FA_SuiviStock: SuiviStockType read Get_FA_SuiviStock write Set_FA_SuiviStock;
    property FA_Garantie: Smallint read Get_FA_Garantie write Set_FA_Garantie;
    property FamilleCentral: IBOFamille3 read Get_FamilleCentral write Set_FamilleCentral;
    property FA_Stat[sElt: Smallint]: WideString read Get_FA_Stat write Set_FA_Stat;
    property FA_CodeFiscal: WideString read Get_FA_CodeFiscal write Set_FA_CodeFiscal;
    property FA_Pays: WideString read Get_FA_Pays write Set_FA_Pays;
    property FA_UnitePoids: UnitePoidsType read Get_FA_UnitePoids write Set_FA_UnitePoids;
    property FA_Escompte: WordBool read Get_FA_Escompte write Set_FA_Escompte;
    property FA_Delai: Smallint read Get_FA_Delai write Set_FA_Delai;
    property FA_HorsStat: WordBool read Get_FA_HorsStat write Set_FA_HorsStat;
    property FA_VteDebit: WordBool read Get_FA_VteDebit write Set_FA_VteDebit;
    property FA_NotImp: WordBool read Get_FA_NotImp write Set_FA_NotImp;
    property Frais: IFrais2 read Get_Frais write Set_Frais;
    property FA_Contremarque: WordBool read Get_FA_Contremarque write Set_FA_Contremarque;
    property FA_FactPoids: WordBool read Get_FA_FactPoids write Set_FA_FactPoids;
    property FA_FactForfait: WordBool read Get_FA_FactForfait write Set_FA_FactForfait;
    property FA_Publie: WordBool read Get_FA_Publie write Set_FA_Publie;
    property FactoryFamilleTarifCategorie: IBITypeObjectFactory read Get_FactoryFamilleTarifCategorie;
    property FactoryFamilleTarifClient: IBITypeObjectFactory read Get_FactoryFamilleTarifClient;
    property FactoryFamilleTarifFournisseur: IBITypeObjectFactory read Get_FactoryFamilleTarifFournisseur;
    property ModeleTousDomaine: IBOModele2 read Get_ModeleTousDomaine write Set_ModeleTousDomaine;
    property ModeleAchat: IBOModele2 read Get_ModeleAchat write Set_ModeleAchat;
    property ModeleVente: IBOModele2 read Get_ModeleVente write Set_ModeleVente;
    property ModeleStock: IBOModele2 read Get_ModeleStock write Set_ModeleStock;
    property ModeleComptoir: IBOModele2 read Get_ModeleComptoir write Set_ModeleComptoir;
    property ModeleInterne: IBOModele2 read Get_ModeleInterne write Set_ModeleInterne;
    property Catalogue: IBPProduit2 read Get_Catalogue write Set_Catalogue;
    property FA_Nature: FamilleNatureType read Get_FA_Nature write Set_FA_Nature;
    property FA_NbColis: Smallint read Get_FA_NbColis write Set_FA_NbColis;
    property FA_SousTraitance: WordBool read Get_FA_SousTraitance write Set_FA_SousTraitance;
    property FA_Fictif: WordBool read Get_FA_Fictif write Set_FA_Fictif;
    property FA_Criticite: FamilleCriticiteType read Get_FA_Criticite write Set_FA_Criticite;
  end;

// *********************************************************************//
// DispIntf :    IBOFamille3Disp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {8F8ABB37-5FD5-4AD8-860D-30F6D8C6BF31}
// *********************************************************************//
  IBOFamille3Disp = dispinterface
    ['{8F8ABB37-5FD5-4AD8-860D-30F6D8C6BF31}']
    property FactoryFamille: IBOFamilleFactory2 readonly dispid 100;
    property FactoryFamilleParamCompta: IBITypeObjectFactory readonly dispid 101;
    property FA_CodeFamille: WideString dispid 102;
    property FA_Type: FamilleType dispid 103;
    property FA_Intitule: WideString dispid 104;
    property Unite: IBPUnite dispid 105;
    property Produit: IBPProduit2 dispid 106;
    property FA_Coef: Double dispid 107;
    property FA_SuiviStock: SuiviStockType dispid 108;
    property FA_Garantie: Smallint dispid 109;
    property FamilleCentral: IBOFamille3 dispid 110;
    property FA_Stat[sElt: Smallint]: WideString dispid 111;
    property FA_CodeFiscal: WideString dispid 112;
    property FA_Pays: WideString dispid 113;
    property FA_UnitePoids: UnitePoidsType dispid 114;
    property FA_Escompte: WordBool dispid 115;
    property FA_Delai: Smallint dispid 116;
    property FA_HorsStat: WordBool dispid 117;
    property FA_VteDebit: WordBool dispid 118;
    property FA_NotImp: WordBool dispid 119;
    property Frais: IFrais2 dispid 120;
    property FA_Contremarque: WordBool dispid 121;
    property FA_FactPoids: WordBool dispid 122;
    property FA_FactForfait: WordBool dispid 123;
    property FA_Publie: WordBool dispid 124;
    property FactoryFamilleTarifCategorie: IBITypeObjectFactory readonly dispid 125;
    property FactoryFamilleTarifClient: IBITypeObjectFactory readonly dispid 126;
    property FactoryFamilleTarifFournisseur: IBITypeObjectFactory readonly dispid 127;
    property ModeleTousDomaine: IBOModele2 dispid 128;
    property ModeleAchat: IBOModele2 dispid 129;
    property ModeleVente: IBOModele2 dispid 130;
    property ModeleStock: IBOModele2 dispid 131;
    property ModeleComptoir: IBOModele2 dispid 132;
    property ModeleInterne: IBOModele2 dispid 133;
    property Catalogue: IBPProduit2 dispid 134;
    property FA_Nature: FamilleNatureType dispid 135;
    property FA_NbColis: Smallint dispid 136;
    property FA_SousTraitance: WordBool dispid 137;
    property FA_Fictif: WordBool dispid 138;
    property FA_Criticite: FamilleCriticiteType dispid 139;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IBOFamilleFactory2
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {B6F2B040-5FF8-439D-8888-0EF811BD5744}
// *********************************************************************//
  IBOFamilleFactory2 = interface(IBITypeObjectFactory)
    ['{B6F2B040-5FF8-439D-8888-0EF811BD5744}']
    function ExistCode(fType: FamilleType; const sNum: WideString): WordBool; safecall;
    function ReadCode(fType: FamilleType; const sNum: WideString): IBOFamille3; safecall;
    function QueryCatalogue(const pProduit: IBPProduit2): IBICollection; safecall;
  end;

// *********************************************************************//
// DispIntf :    IBOFamilleFactory2Disp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {B6F2B040-5FF8-439D-8888-0EF811BD5744}
// *********************************************************************//
  IBOFamilleFactory2Disp = dispinterface
    ['{B6F2B040-5FF8-439D-8888-0EF811BD5744}']
    function ExistCode(fType: FamilleType; const sNum: WideString): WordBool; dispid 10;
    function ReadCode(fType: FamilleType; const sNum: WideString): IBOFamille3; dispid 11;
    function QueryCatalogue(const pProduit: IBPProduit2): IBICollection; dispid 12;
    property List: IBICollection readonly dispid 1;
    function Create: IBIPersistObject; dispid 2;
    function Read(const pOID: IBIObjectID): IBIPersistObject; dispid 3;
    function _QuerySynchro(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                           TypeExtraction: SynchroExtractType): IBICollection; dispid 4;
    function _QuerySynchroRemoved(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                                  TypeExtraction: SynchroExtractType): IBICollectionDispatch; dispid 5;
    function ReadFrom(const pStream: IStream): IBIPersistObject; dispid 6;
    property ListForward: IBICollection readonly dispid 7;
    function QueryPredicate(const pPredicate: IDispatch; const sSortDescriptors: WideString): IBICollection; dispid 8;
  end;

// *********************************************************************//
// Interface :   IBPProduit2
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {FE278BBF-4234-43EB-A81B-FF0A92107279}
// *********************************************************************//
  IBPProduit2 = interface(IBIPersistObject)
    ['{FE278BBF-4234-43EB-A81B-FF0A92107279}']
    function Get_FactoryProduit: IBPProduitFactory2; safecall;
    function Get_CP_Intitule: WideString; safecall;
    procedure Set_CP_Intitule(const pVal: WideString); safecall;
    function Get_CP_Stock: WordBool; safecall;
    procedure Set_CP_Stock(pVal: WordBool); safecall;
    function Get_FactorySousCatalogue: IBPProduitFactory2; safecall;
    function Get_CL_Code: WideString; safecall;
    procedure Set_CL_Code(const pVal: WideString); safecall;
    function Get_CatalogueParent: IBPProduit2; safecall;
    property FactoryProduit: IBPProduitFactory2 read Get_FactoryProduit;
    property CP_Intitule: WideString read Get_CP_Intitule write Set_CP_Intitule;
    property CP_Stock: WordBool read Get_CP_Stock write Set_CP_Stock;
    property FactorySousCatalogue: IBPProduitFactory2 read Get_FactorySousCatalogue;
    property CL_Code: WideString read Get_CL_Code write Set_CL_Code;
    property CatalogueParent: IBPProduit2 read Get_CatalogueParent;
  end;

// *********************************************************************//
// DispIntf :    IBPProduit2Disp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {FE278BBF-4234-43EB-A81B-FF0A92107279}
// *********************************************************************//
  IBPProduit2Disp = dispinterface
    ['{FE278BBF-4234-43EB-A81B-FF0A92107279}']
    property FactoryProduit: IBPProduitFactory2 readonly dispid 100;
    property CP_Intitule: WideString dispid 101;
    property CP_Stock: WordBool dispid 102;
    property FactorySousCatalogue: IBPProduitFactory2 readonly dispid 103;
    property CL_Code: WideString dispid 104;
    property CatalogueParent: IBPProduit2 readonly dispid 105;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IBPProduitFactory2
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {EFB726BF-32CF-4168-9A5C-33A8E74A499C}
// *********************************************************************//
  IBPProduitFactory2 = interface(IBITypeObjectFactory)
    ['{EFB726BF-32CF-4168-9A5C-33A8E74A499C}']
    function ExistIntitule(const sIntitule: WideString): WordBool; safecall;
    function ReadIntitule(const sIntitule: WideString): IBPProduit2; safecall;
  end;

// *********************************************************************//
// DispIntf :    IBPProduitFactory2Disp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {EFB726BF-32CF-4168-9A5C-33A8E74A499C}
// *********************************************************************//
  IBPProduitFactory2Disp = dispinterface
    ['{EFB726BF-32CF-4168-9A5C-33A8E74A499C}']
    function ExistIntitule(const sIntitule: WideString): WordBool; dispid 10;
    function ReadIntitule(const sIntitule: WideString): IBPProduit2; dispid 11;
    property List: IBICollection readonly dispid 1;
    function Create: IBIPersistObject; dispid 2;
    function Read(const pOID: IBIObjectID): IBIPersistObject; dispid 3;
    function _QuerySynchro(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                           TypeExtraction: SynchroExtractType): IBICollection; dispid 4;
    function _QuerySynchroRemoved(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                                  TypeExtraction: SynchroExtractType): IBICollectionDispatch; dispid 5;
    function ReadFrom(const pStream: IStream): IBIPersistObject; dispid 6;
    property ListForward: IBICollection readonly dispid 7;
    function QueryPredicate(const pPredicate: IDispatch; const sSortDescriptors: WideString): IBICollection; dispid 8;
  end;

// *********************************************************************//
// Interface :   IBPUnite
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {D5E5967F-96F9-4507-816C-D3DB7157ED64}
// *********************************************************************//
  IBPUnite = interface(IBIPersistObject)
    ['{D5E5967F-96F9-4507-816C-D3DB7157ED64}']
    function Get_FactoryUnite: IBPUniteFactory; safecall;
    function Get_Intitule: WideString; safecall;
    procedure Set_Intitule(const pVal: WideString); safecall;
    function Get_CorrespondancePlanning: WordBool; safecall;
    procedure Set_CorrespondancePlanning(pVal: WordBool); safecall;
    function Get_NbUnite: Smallint; safecall;
    procedure Set_NbUnite(pVal: Smallint); safecall;
    function Get_UniteTemps: UnitePlanning; safecall;
    procedure Set_UniteTemps(pVal: UnitePlanning); safecall;
    property FactoryUnite: IBPUniteFactory read Get_FactoryUnite;
    property Intitule: WideString read Get_Intitule write Set_Intitule;
    property CorrespondancePlanning: WordBool read Get_CorrespondancePlanning write Set_CorrespondancePlanning;
    property NbUnite: Smallint read Get_NbUnite write Set_NbUnite;
    property UniteTemps: UnitePlanning read Get_UniteTemps write Set_UniteTemps;
  end;

// *********************************************************************//
// DispIntf :    IBPUniteDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {D5E5967F-96F9-4507-816C-D3DB7157ED64}
// *********************************************************************//
  IBPUniteDisp = dispinterface
    ['{D5E5967F-96F9-4507-816C-D3DB7157ED64}']
    property FactoryUnite: IBPUniteFactory readonly dispid 100;
    property Intitule: WideString dispid 101;
    property CorrespondancePlanning: WordBool dispid 102;
    property NbUnite: Smallint dispid 103;
    property UniteTemps: UnitePlanning dispid 104;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IBPUniteFactory
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {17DF42EF-AB95-4200-9114-7D4E5A3ED034}
// *********************************************************************//
  IBPUniteFactory = interface(IBITypeObjectFactory)
    ['{17DF42EF-AB95-4200-9114-7D4E5A3ED034}']
    function ExistIntitule(const sIntitule: WideString): WordBool; safecall;
    function ReadIntitule(const sIntitule: WideString): IBPUnite; safecall;
  end;

// *********************************************************************//
// DispIntf :    IBPUniteFactoryDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {17DF42EF-AB95-4200-9114-7D4E5A3ED034}
// *********************************************************************//
  IBPUniteFactoryDisp = dispinterface
    ['{17DF42EF-AB95-4200-9114-7D4E5A3ED034}']
    function ExistIntitule(const sIntitule: WideString): WordBool; dispid 10;
    function ReadIntitule(const sIntitule: WideString): IBPUnite; dispid 11;
    property List: IBICollection readonly dispid 1;
    function Create: IBIPersistObject; dispid 2;
    function Read(const pOID: IBIObjectID): IBIPersistObject; dispid 3;
    function _QuerySynchro(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                           TypeExtraction: SynchroExtractType): IBICollection; dispid 4;
    function _QuerySynchroRemoved(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                                  TypeExtraction: SynchroExtractType): IBICollectionDispatch; dispid 5;
    function ReadFrom(const pStream: IStream): IBIPersistObject; dispid 6;
    property ListForward: IBICollection readonly dispid 7;
    function QueryPredicate(const pPredicate: IDispatch; const sSortDescriptors: WideString): IBICollection; dispid 8;
  end;

// *********************************************************************//
// Interface :   IBOModele2
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {DCFAB54C-F238-4B5D-A8FC-E368FB2B0CD2}
// *********************************************************************//
  IBOModele2 = interface(IBIPersistObject)
    ['{DCFAB54C-F238-4B5D-A8FC-E368FB2B0CD2}']
    function Get_FactoryModele: IBOModeleFactory; safecall;
    function Get_MO_Intitule: WideString; safecall;
    procedure Set_MO_Intitule(const pVal: WideString); safecall;
    function Get_MO_Calcul: WideString; safecall;
    procedure Set_MO_Calcul(const pVal: WideString); safecall;
    property FactoryModele: IBOModeleFactory read Get_FactoryModele;
    property MO_Intitule: WideString read Get_MO_Intitule write Set_MO_Intitule;
    property MO_Calcul: WideString read Get_MO_Calcul write Set_MO_Calcul;
  end;

// *********************************************************************//
// DispIntf :    IBOModele2Disp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {DCFAB54C-F238-4B5D-A8FC-E368FB2B0CD2}
// *********************************************************************//
  IBOModele2Disp = dispinterface
    ['{DCFAB54C-F238-4B5D-A8FC-E368FB2B0CD2}']
    property FactoryModele: IBOModeleFactory readonly dispid 100;
    property MO_Intitule: WideString dispid 101;
    property MO_Calcul: WideString dispid 102;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IBOModeleFactory
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {D4306949-E667-4D20-8A94-317296689089}
// *********************************************************************//
  IBOModeleFactory = interface(IBITypeObjectFactory)
    ['{D4306949-E667-4D20-8A94-317296689089}']
    function ExistIntitule(const sNum: WideString): WordBool; safecall;
    function ReadIntitule(const sNum: WideString): IBOModele2; safecall;
  end;

// *********************************************************************//
// DispIntf :    IBOModeleFactoryDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {D4306949-E667-4D20-8A94-317296689089}
// *********************************************************************//
  IBOModeleFactoryDisp = dispinterface
    ['{D4306949-E667-4D20-8A94-317296689089}']
    function ExistIntitule(const sNum: WideString): WordBool; dispid 10;
    function ReadIntitule(const sNum: WideString): IBOModele2; dispid 11;
    property List: IBICollection readonly dispid 1;
    function Create: IBIPersistObject; dispid 2;
    function Read(const pOID: IBIObjectID): IBIPersistObject; dispid 3;
    function _QuerySynchro(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                           TypeExtraction: SynchroExtractType): IBICollection; dispid 4;
    function _QuerySynchroRemoved(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                                  TypeExtraction: SynchroExtractType): IBICollectionDispatch; dispid 5;
    function ReadFrom(const pStream: IStream): IBIPersistObject; dispid 6;
    property ListForward: IBICollection readonly dispid 7;
    function QueryPredicate(const pPredicate: IDispatch; const sSortDescriptors: WideString): IBICollection; dispid 8;
  end;

// *********************************************************************//
// Interface :   IBOBaremeSolde
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {DF7C73E9-09F8-4A3E-A678-37C12B0DF31F}
// *********************************************************************//
  IBOBaremeSolde = interface(IBIPersistObject)
    ['{DF7C73E9-09F8-4A3E-A678-37C12B0DF31F}']
    function Get_FactoryBaremeSolde: IBOBaremeSoldeFactory; safecall;
    function Get_Intitule: WideString; safecall;
    procedure Set_Intitule(const pVal: WideString); safecall;
    function Get_DateDebut: TDateTime; safecall;
    procedure Set_DateDebut(pVal: TDateTime); safecall;
    function Get_DateFin: TDateTime; safecall;
    procedure Set_DateFin(pVal: TDateTime); safecall;
    function Get_Remise: IRemise2; safecall;
    procedure Set_Remise(const pObject: IRemise2); safecall;
    function Get_type_: BaremeSoldeType; safecall;
    function Get_Fournisseur: IBOFournisseur3; safecall;
    procedure Set_Fournisseur(const pObject: IBOFournisseur3); safecall;
    property FactoryBaremeSolde: IBOBaremeSoldeFactory read Get_FactoryBaremeSolde;
    property Intitule: WideString read Get_Intitule write Set_Intitule;
    property DateDebut: TDateTime read Get_DateDebut write Set_DateDebut;
    property DateFin: TDateTime read Get_DateFin write Set_DateFin;
    property Remise: IRemise2 read Get_Remise write Set_Remise;
    property type_: BaremeSoldeType read Get_type_;
    property Fournisseur: IBOFournisseur3 read Get_Fournisseur write Set_Fournisseur;
  end;

// *********************************************************************//
// DispIntf :    IBOBaremeSoldeDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {DF7C73E9-09F8-4A3E-A678-37C12B0DF31F}
// *********************************************************************//
  IBOBaremeSoldeDisp = dispinterface
    ['{DF7C73E9-09F8-4A3E-A678-37C12B0DF31F}']
    property FactoryBaremeSolde: IBOBaremeSoldeFactory readonly dispid 100;
    property Intitule: WideString dispid 101;
    property DateDebut: TDateTime dispid 102;
    property DateFin: TDateTime dispid 103;
    property Remise: IRemise2 dispid 104;
    property type_: BaremeSoldeType readonly dispid 105;
    property Fournisseur: IBOFournisseur3 dispid 106;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IBOBaremeSoldeFactory
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {4ADADBE9-4B6F-4451-8A97-A2C03083EBEA}
// *********************************************************************//
  IBOBaremeSoldeFactory = interface(IBITypeObjectFactory)
    ['{4ADADBE9-4B6F-4451-8A97-A2C03083EBEA}']
    function ExistIntitule(const sIntitule: WideString): WordBool; safecall;
    function ReadIntitule(const sIntitule: WideString): IBOBaremeSolde; safecall;
    function QueryApplicableDate(dVal: TDateTime): IBICollection; safecall;
    function QueryApplicableArticleDate(const pArticle: IBOArticle3; dVal: TDateTime): IBICollection; safecall;
  end;

// *********************************************************************//
// DispIntf :    IBOBaremeSoldeFactoryDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {4ADADBE9-4B6F-4451-8A97-A2C03083EBEA}
// *********************************************************************//
  IBOBaremeSoldeFactoryDisp = dispinterface
    ['{4ADADBE9-4B6F-4451-8A97-A2C03083EBEA}']
    function ExistIntitule(const sIntitule: WideString): WordBool; dispid 10;
    function ReadIntitule(const sIntitule: WideString): IBOBaremeSolde; dispid 11;
    function QueryApplicableDate(dVal: TDateTime): IBICollection; dispid 12;
    function QueryApplicableArticleDate(const pArticle: IBOArticle3; dVal: TDateTime): IBICollection; dispid 13;
    property List: IBICollection readonly dispid 1;
    function Create: IBIPersistObject; dispid 2;
    function Read(const pOID: IBIObjectID): IBIPersistObject; dispid 3;
    function _QuerySynchro(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                           TypeExtraction: SynchroExtractType): IBICollection; dispid 4;
    function _QuerySynchroRemoved(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                                  TypeExtraction: SynchroExtractType): IBICollectionDispatch; dispid 5;
    function ReadFrom(const pStream: IStream): IBIPersistObject; dispid 6;
    property ListForward: IBICollection readonly dispid 7;
    function QueryPredicate(const pPredicate: IDispatch; const sSortDescriptors: WideString): IBICollection; dispid 8;
  end;

// *********************************************************************//
// Interface :   IBOTiers3
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {CA651533-8F26-41F2-B0D5-855956FDA70F}
// *********************************************************************//
  IBOTiers3 = interface(IBIPersistObject)
    ['{CA651533-8F26-41F2-B0D5-855956FDA70F}']
    function Get_FactoryTiers: IBOTiersFactory3; safecall;
    function Get_FactoryTiersBanque: IBITypeObjectFactory; safecall;
    function Get_FactoryTiersReglement: IBITypeObjectFactory; safecall;
    function Get_FactoryTiersContact: IBITypeObjectFactory; safecall;
    function Get_FactoryTiersCompteG: IBOTiersCompteGFactory3; safecall;
    function Get_FactoryTiersMedia: IBITypeObjectFactory; safecall;
    function Get_CT_Num: WideString; safecall;
    procedure Set_CT_Num(const pVal: WideString); safecall;
    function Get_CT_Intitule: WideString; safecall;
    procedure Set_CT_Intitule(const pVal: WideString); safecall;
    function Get_CT_Type: TiersType; safecall;
    function Get_CompteGPrinc: IBOCompteG3; safecall;
    procedure Set_CompteGPrinc(const pCompteG: IBOCompteG3); safecall;
    function Get_CT_Qualite: WideString; safecall;
    procedure Set_CT_Qualite(const pVal: WideString); safecall;
    function Get_CT_Classement: WideString; safecall;
    procedure Set_CT_Classement(const pVal: WideString); safecall;
    function Get_CT_Contact: WideString; safecall;
    procedure Set_CT_Contact(const pVal: WideString); safecall;
    function Get_Adresse: IAdresse; safecall;
    procedure Set_Adresse(const pAdresse: IAdresse); safecall;
    function Get_CT_Raccourci: WideString; safecall;
    procedure Set_CT_Raccourci(const pVal: WideString); safecall;
    function Get_BanquePrincipale: IBOTiersBanque3; safecall;
    procedure Set_BanquePrincipale(const pTiersBanque: IBOTiersBanque3); safecall;
    function Get_Devise: IBPDevise2; safecall;
    procedure Set_Devise(const pDevise: IBPDevise2); safecall;
    function Get_CT_Ape: WideString; safecall;
    procedure Set_CT_Ape(const pVal: WideString); safecall;
    function Get_CT_Identifiant: WideString; safecall;
    procedure Set_CT_Identifiant(const pVal: WideString); safecall;
    function Get_CT_Siret: WideString; safecall;
    procedure Set_CT_Siret(const pVal: WideString); safecall;
    function Get_CT_Stat(sElt: Smallint): WideString; safecall;
    procedure Set_CT_Stat(sElt: Smallint; const pVal: WideString); safecall;
    function Get_CT_Commentaire: WideString; safecall;
    procedure Set_CT_Commentaire(const pVal: WideString); safecall;
    function Get_CT_Langue: LangueType; safecall;
    procedure Set_CT_Langue(pVal: LangueType); safecall;
    function Get_CT_DateCreate: TDateTime; safecall;
    function Get_CT_SautLigne: Smallint; safecall;
    procedure Set_CT_SautLigne(pVal: Smallint); safecall;
    function Get_CT_SautPage: WordBool; safecall;
    procedure Set_CT_SautPage(pVal: WordBool); safecall;
    function Get_CT_Lettrage: WordBool; safecall;
    procedure Set_CT_Lettrage(pVal: WordBool); safecall;
    function Get_CT_ValidEch: WordBool; safecall;
    procedure Set_CT_ValidEch(pVal: WordBool); safecall;
    function Get_CT_Sommeil: WordBool; safecall;
    procedure Set_CT_Sommeil(pVal: WordBool); safecall;
    function Get_CT_NotRappel: WordBool; safecall;
    procedure Set_CT_NotRappel(pVal: WordBool); safecall;
    function Get_Telecom: ITelecom; safecall;
    procedure Set_Telecom(const pTelecom: ITelecom); safecall;
    function MvtDebit(const pCompteG: IBOCompteG3; const pJournal: IBOJournal3; dDebut: TDateTime; 
                      dFin: TDateTime): Double; safecall;
    function MvtCredit(const pCompteG: IBOCompteG3; const pJournal: IBOJournal3; dDebut: TDateTime; 
                       dFin: TDateTime): Double; safecall;
    function MvtSolde(const pCompteG: IBOCompteG3; const pJournal: IBOJournal3; dDebut: TDateTime; 
                      dFin: TDateTime): Double; safecall;
    function MvtDevDebit(const pCompteG: IBOCompteG3; const pJournal: IBOJournal3; 
                         dDebut: TDateTime; dFin: TDateTime): Double; safecall;
    function MvtDevCredit(const pCompteG: IBOCompteG3; const pJournal: IBOJournal3; 
                          dDebut: TDateTime; dFin: TDateTime): Double; safecall;
    function MvtDevSolde(const pCompteG: IBOCompteG3; const pJournal: IBOJournal3; 
                         dDebut: TDateTime; dFin: TDateTime): Double; safecall;
    function Solde: Double; safecall;
    function Get_CompteAIFRS: IBOCompteA3; safecall;
    procedure Set_CompteAIFRS(const pCompteA: IBOCompteA3); safecall;
    function Get_InfoLibre: IBIValues; safecall;
    function Get_ModeleReglement: IBOModeleReglement; safecall;
    procedure Set_ModeleReglement(const pModeleReglement: IBOModeleReglement); safecall;
    function Get_CT_EdiCodeType: EdiCodeType; safecall;
    procedure Set_CT_EdiCodeType(pVal: EdiCodeType); safecall;
    function Get_CT_EdiCode: WideString; safecall;
    procedure Set_CT_EdiCode(const pVal: WideString); safecall;
    function Get_CT_Facebook: WideString; safecall;
    procedure Set_CT_Facebook(const pVal: WideString); safecall;
    function Get_CT_LinkedIn: WideString; safecall;
    procedure Set_CT_LinkedIn(const pVal: WideString); safecall;
    function Get_ExclureMarketing: WordBool; safecall;
    procedure Set_ExclureMarketing(pVal: WordBool); safecall;
    function Get_ActivateGDPR: WordBool; safecall;
    procedure CleanPersonalData; safecall;
    property FactoryTiers: IBOTiersFactory3 read Get_FactoryTiers;
    property FactoryTiersBanque: IBITypeObjectFactory read Get_FactoryTiersBanque;
    property FactoryTiersReglement: IBITypeObjectFactory read Get_FactoryTiersReglement;
    property FactoryTiersContact: IBITypeObjectFactory read Get_FactoryTiersContact;
    property FactoryTiersCompteG: IBOTiersCompteGFactory3 read Get_FactoryTiersCompteG;
    property FactoryTiersMedia: IBITypeObjectFactory read Get_FactoryTiersMedia;
    property CT_Num: WideString read Get_CT_Num write Set_CT_Num;
    property CT_Intitule: WideString read Get_CT_Intitule write Set_CT_Intitule;
    property CT_Type: TiersType read Get_CT_Type;
    property CompteGPrinc: IBOCompteG3 read Get_CompteGPrinc write Set_CompteGPrinc;
    property CT_Qualite: WideString read Get_CT_Qualite write Set_CT_Qualite;
    property CT_Classement: WideString read Get_CT_Classement write Set_CT_Classement;
    property CT_Contact: WideString read Get_CT_Contact write Set_CT_Contact;
    property Adresse: IAdresse read Get_Adresse write Set_Adresse;
    property CT_Raccourci: WideString read Get_CT_Raccourci write Set_CT_Raccourci;
    property BanquePrincipale: IBOTiersBanque3 read Get_BanquePrincipale write Set_BanquePrincipale;
    property Devise: IBPDevise2 read Get_Devise write Set_Devise;
    property CT_Ape: WideString read Get_CT_Ape write Set_CT_Ape;
    property CT_Identifiant: WideString read Get_CT_Identifiant write Set_CT_Identifiant;
    property CT_Siret: WideString read Get_CT_Siret write Set_CT_Siret;
    property CT_Stat[sElt: Smallint]: WideString read Get_CT_Stat write Set_CT_Stat;
    property CT_Commentaire: WideString read Get_CT_Commentaire write Set_CT_Commentaire;
    property CT_Langue: LangueType read Get_CT_Langue write Set_CT_Langue;
    property CT_DateCreate: TDateTime read Get_CT_DateCreate;
    property CT_SautLigne: Smallint read Get_CT_SautLigne write Set_CT_SautLigne;
    property CT_SautPage: WordBool read Get_CT_SautPage write Set_CT_SautPage;
    property CT_Lettrage: WordBool read Get_CT_Lettrage write Set_CT_Lettrage;
    property CT_ValidEch: WordBool read Get_CT_ValidEch write Set_CT_ValidEch;
    property CT_Sommeil: WordBool read Get_CT_Sommeil write Set_CT_Sommeil;
    property CT_NotRappel: WordBool read Get_CT_NotRappel write Set_CT_NotRappel;
    property Telecom: ITelecom read Get_Telecom write Set_Telecom;
    property CompteAIFRS: IBOCompteA3 read Get_CompteAIFRS write Set_CompteAIFRS;
    property InfoLibre: IBIValues read Get_InfoLibre;
    property ModeleReglement: IBOModeleReglement read Get_ModeleReglement write Set_ModeleReglement;
    property CT_EdiCodeType: EdiCodeType read Get_CT_EdiCodeType write Set_CT_EdiCodeType;
    property CT_EdiCode: WideString read Get_CT_EdiCode write Set_CT_EdiCode;
    property CT_Facebook: WideString read Get_CT_Facebook write Set_CT_Facebook;
    property CT_LinkedIn: WideString read Get_CT_LinkedIn write Set_CT_LinkedIn;
    property ExclureMarketing: WordBool read Get_ExclureMarketing write Set_ExclureMarketing;
    property ActivateGDPR: WordBool read Get_ActivateGDPR;
  end;

// *********************************************************************//
// DispIntf :    IBOTiers3Disp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {CA651533-8F26-41F2-B0D5-855956FDA70F}
// *********************************************************************//
  IBOTiers3Disp = dispinterface
    ['{CA651533-8F26-41F2-B0D5-855956FDA70F}']
    property FactoryTiers: IBOTiersFactory3 readonly dispid 100;
    property FactoryTiersBanque: IBITypeObjectFactory readonly dispid 101;
    property FactoryTiersReglement: IBITypeObjectFactory readonly dispid 102;
    property FactoryTiersContact: IBITypeObjectFactory readonly dispid 103;
    property FactoryTiersCompteG: IBOTiersCompteGFactory3 readonly dispid 104;
    property FactoryTiersMedia: IBITypeObjectFactory readonly dispid 105;
    property CT_Num: WideString dispid 106;
    property CT_Intitule: WideString dispid 107;
    property CT_Type: TiersType readonly dispid 108;
    property CompteGPrinc: IBOCompteG3 dispid 109;
    property CT_Qualite: WideString dispid 110;
    property CT_Classement: WideString dispid 111;
    property CT_Contact: WideString dispid 112;
    property Adresse: IAdresse dispid 113;
    property CT_Raccourci: WideString dispid 119;
    property BanquePrincipale: IBOTiersBanque3 dispid 120;
    property Devise: IBPDevise2 dispid 121;
    property CT_Ape: WideString dispid 122;
    property CT_Identifiant: WideString dispid 123;
    property CT_Siret: WideString dispid 124;
    property CT_Stat[sElt: Smallint]: WideString dispid 125;
    property CT_Commentaire: WideString dispid 126;
    property CT_Langue: LangueType dispid 128;
    property CT_DateCreate: TDateTime readonly dispid 132;
    property CT_SautLigne: Smallint dispid 133;
    property CT_SautPage: WordBool dispid 134;
    property CT_Lettrage: WordBool dispid 135;
    property CT_ValidEch: WordBool dispid 136;
    property CT_Sommeil: WordBool dispid 137;
    property CT_NotRappel: WordBool dispid 138;
    property Telecom: ITelecom dispid 139;
    function MvtDebit(const pCompteG: IBOCompteG3; const pJournal: IBOJournal3; dDebut: TDateTime; 
                      dFin: TDateTime): Double; dispid 143;
    function MvtCredit(const pCompteG: IBOCompteG3; const pJournal: IBOJournal3; dDebut: TDateTime; 
                       dFin: TDateTime): Double; dispid 144;
    function MvtSolde(const pCompteG: IBOCompteG3; const pJournal: IBOJournal3; dDebut: TDateTime; 
                      dFin: TDateTime): Double; dispid 145;
    function MvtDevDebit(const pCompteG: IBOCompteG3; const pJournal: IBOJournal3; 
                         dDebut: TDateTime; dFin: TDateTime): Double; dispid 146;
    function MvtDevCredit(const pCompteG: IBOCompteG3; const pJournal: IBOJournal3; 
                          dDebut: TDateTime; dFin: TDateTime): Double; dispid 147;
    function MvtDevSolde(const pCompteG: IBOCompteG3; const pJournal: IBOJournal3; 
                         dDebut: TDateTime; dFin: TDateTime): Double; dispid 148;
    function Solde: Double; dispid 149;
    property CompteAIFRS: IBOCompteA3 dispid 150;
    property InfoLibre: IBIValues readonly dispid 151;
    property ModeleReglement: IBOModeleReglement dispid 152;
    property CT_EdiCodeType: EdiCodeType dispid 153;
    property CT_EdiCode: WideString dispid 154;
    property CT_Facebook: WideString dispid 155;
    property CT_LinkedIn: WideString dispid 156;
    property ExclureMarketing: WordBool dispid 157;
    property ActivateGDPR: WordBool readonly dispid 158;
    procedure CleanPersonalData; dispid 159;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IBOTiersPart3
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {F5C77FD4-4820-4AFD-AD17-194C8998EAFB}
// *********************************************************************//
  IBOTiersPart3 = interface(IBOTiers3)
    ['{F5C77FD4-4820-4AFD-AD17-194C8998EAFB}']
    function Get_TiersPayeur: IBOTiersPart3; safecall;
    procedure Set_TiersPayeur(const pTiers: IBOTiersPart3); safecall;
    function Get_CT_Encours: Double; safecall;
    procedure Set_CT_Encours(pVal: Double); safecall;
    function Get_CategorieCompta: IBICategorieCompta; safecall;
    procedure Set_CategorieCompta(const pCategorieCompta: IBICategorieCompta); safecall;
    function Get_Depot: IBODepot3; safecall;
    procedure Set_Depot(const pDepot: IBODepot3); safecall;
    function Get_CompteA: IBOCompteA3; safecall;
    procedure Set_CompteA(const pCompteA: IBOCompteA3); safecall;
    function Get_CT_Coface: WideString; safecall;
    procedure Set_CT_Coface(const pVal: WideString); safecall;
    function Get_CT_Surveillance: WordBool; safecall;
    procedure Set_CT_Surveillance(pVal: WordBool); safecall;
    function Get_CT_SvDateCreate: TDateTime; safecall;
    function Get_CT_SvFormeJuri: WideString; safecall;
    function Get_CT_SvEffectif: WideString; safecall;
    function Get_CT_SvCA: Double; safecall;
    function Get_CT_SvResultat: Double; safecall;
    function Get_CT_SvIncident: Smallint; safecall;
    function Get_CT_SvDateIncid: TDateTime; safecall;
    function Get_CT_SvPrivil: Smallint; safecall;
    function Get_CT_SvRegul: WideString; safecall;
    function Get_CT_SvCotation: WideString; safecall;
    function Get_CT_SvDateMaj: TDateTime; safecall;
    function Get_CT_SvObjetMaj: WideString; safecall;
    function Get_CT_SvDateBilan: TDateTime; safecall;
    function Get_CT_SvNbMoisBilan: Smallint; safecall;
    function CA_HTBrut(dDebut: TDateTime; dFin: TDateTime; TypeDe: DocumentType; TypeA: DocumentType): Double; safecall;
    function CA_HTNet(dDebut: TDateTime; dFin: TDateTime; TypeDe: DocumentType; TypeA: DocumentType): Double; safecall;
    function CA_TTC(dDebut: TDateTime; dFin: TDateTime; TypeDe: DocumentType; TypeA: DocumentType): Double; safecall;
    function TotalPrixRevient(dDebut: TDateTime; dFin: TDateTime; TypeDe: DocumentType; 
                              TypeA: DocumentType): Double; safecall;
    function TotalQtes(dDebut: TDateTime; dFin: TDateTime; TypeDe: DocumentType; TypeA: DocumentType): Double; safecall;
    function TotalQtesColises(dDebut: TDateTime; dFin: TDateTime; TypeDe: DocumentType; 
                              TypeA: DocumentType): Double; safecall;
    function TotalPoidsNet(dDebut: TDateTime; dFin: TDateTime; TypeDe: DocumentType; 
                           TypeA: DocumentType): Double; safecall;
    function TotalPoidsBrut(dDebut: TDateTime; dFin: TDateTime; TypeDe: DocumentType; 
                            TypeA: DocumentType): Double; safecall;
    function TauxRemiseMoyen(dDebut: TDateTime; dFin: TDateTime; TypeDe: DocumentType; 
                             TypeA: DocumentType): Double; safecall;
    function SoldeEchus1: Double; safecall;
    function SoldeEchus2: Double; safecall;
    function SoldeEchus3: Double; safecall;
    function SoldeNonEchus: Double; safecall;
    function DepassementEncours: Double; safecall;
    function DepassementEncours2: Double; safecall;
    function Portefeuille: Double; safecall;
    function PortefeuilleCommande: Double; safecall;
    function TotalReglement: Double; safecall;
    function DerniereFacture: TDateTime; safecall;
    function DernierReglement: TDateTime; safecall;
    function Get_TauxRemise: Double; safecall;
    procedure Set_TauxRemise(pVal: Double); safecall;
    function Get_TauxEscompte: Double; safecall;
    procedure Set_TauxEscompte(pVal: Double); safecall;
    function Get_TauxReleve: Double; safecall;
    procedure Set_TauxReleve(pVal: Double); safecall;
    function Get_TauxRFA: Double; safecall;
    procedure Set_TauxRFA(pVal: Double); safecall;
    function Get_CT_DateFermetureDebut: TDateTime; safecall;
    procedure Set_CT_DateFermetureDebut(pVal: TDateTime); safecall;
    function Get_CT_DateFermetureFin: TDateTime; safecall;
    procedure Set_CT_DateFermetureFin(pVal: TDateTime); safecall;
    function Get_Representant: IBOCollaborateur; safecall;
    procedure Set_Representant(const pCollaborateur: IBOCollaborateur); safecall;
    property TiersPayeur: IBOTiersPart3 read Get_TiersPayeur write Set_TiersPayeur;
    property CT_Encours: Double read Get_CT_Encours write Set_CT_Encours;
    property CategorieCompta: IBICategorieCompta read Get_CategorieCompta write Set_CategorieCompta;
    property Depot: IBODepot3 read Get_Depot write Set_Depot;
    property CompteA: IBOCompteA3 read Get_CompteA write Set_CompteA;
    property CT_Coface: WideString read Get_CT_Coface write Set_CT_Coface;
    property CT_Surveillance: WordBool read Get_CT_Surveillance write Set_CT_Surveillance;
    property CT_SvDateCreate: TDateTime read Get_CT_SvDateCreate;
    property CT_SvFormeJuri: WideString read Get_CT_SvFormeJuri;
    property CT_SvEffectif: WideString read Get_CT_SvEffectif;
    property CT_SvCA: Double read Get_CT_SvCA;
    property CT_SvResultat: Double read Get_CT_SvResultat;
    property CT_SvIncident: Smallint read Get_CT_SvIncident;
    property CT_SvDateIncid: TDateTime read Get_CT_SvDateIncid;
    property CT_SvPrivil: Smallint read Get_CT_SvPrivil;
    property CT_SvRegul: WideString read Get_CT_SvRegul;
    property CT_SvCotation: WideString read Get_CT_SvCotation;
    property CT_SvDateMaj: TDateTime read Get_CT_SvDateMaj;
    property CT_SvObjetMaj: WideString read Get_CT_SvObjetMaj;
    property CT_SvDateBilan: TDateTime read Get_CT_SvDateBilan;
    property CT_SvNbMoisBilan: Smallint read Get_CT_SvNbMoisBilan;
    property TauxRemise: Double read Get_TauxRemise write Set_TauxRemise;
    property TauxEscompte: Double read Get_TauxEscompte write Set_TauxEscompte;
    property TauxReleve: Double read Get_TauxReleve write Set_TauxReleve;
    property TauxRFA: Double read Get_TauxRFA write Set_TauxRFA;
    property CT_DateFermetureDebut: TDateTime read Get_CT_DateFermetureDebut write Set_CT_DateFermetureDebut;
    property CT_DateFermetureFin: TDateTime read Get_CT_DateFermetureFin write Set_CT_DateFermetureFin;
    property Representant: IBOCollaborateur read Get_Representant write Set_Representant;
  end;

// *********************************************************************//
// DispIntf :    IBOTiersPart3Disp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {F5C77FD4-4820-4AFD-AD17-194C8998EAFB}
// *********************************************************************//
  IBOTiersPart3Disp = dispinterface
    ['{F5C77FD4-4820-4AFD-AD17-194C8998EAFB}']
    property TiersPayeur: IBOTiersPart3 dispid 241;
    property CT_Encours: Double dispid 200;
    property CategorieCompta: IBICategorieCompta dispid 201;
    property Depot: IBODepot3 dispid 202;
    property CompteA: IBOCompteA3 dispid 203;
    property CT_Coface: WideString dispid 204;
    property CT_Surveillance: WordBool dispid 205;
    property CT_SvDateCreate: TDateTime readonly dispid 206;
    property CT_SvFormeJuri: WideString readonly dispid 207;
    property CT_SvEffectif: WideString readonly dispid 208;
    property CT_SvCA: Double readonly dispid 209;
    property CT_SvResultat: Double readonly dispid 210;
    property CT_SvIncident: Smallint readonly dispid 211;
    property CT_SvDateIncid: TDateTime readonly dispid 212;
    property CT_SvPrivil: Smallint readonly dispid 213;
    property CT_SvRegul: WideString readonly dispid 214;
    property CT_SvCotation: WideString readonly dispid 215;
    property CT_SvDateMaj: TDateTime readonly dispid 216;
    property CT_SvObjetMaj: WideString readonly dispid 217;
    property CT_SvDateBilan: TDateTime readonly dispid 218;
    property CT_SvNbMoisBilan: Smallint readonly dispid 219;
    function CA_HTBrut(dDebut: TDateTime; dFin: TDateTime; TypeDe: DocumentType; TypeA: DocumentType): Double; dispid 220;
    function CA_HTNet(dDebut: TDateTime; dFin: TDateTime; TypeDe: DocumentType; TypeA: DocumentType): Double; dispid 221;
    function CA_TTC(dDebut: TDateTime; dFin: TDateTime; TypeDe: DocumentType; TypeA: DocumentType): Double; dispid 222;
    function TotalPrixRevient(dDebut: TDateTime; dFin: TDateTime; TypeDe: DocumentType; 
                              TypeA: DocumentType): Double; dispid 223;
    function TotalQtes(dDebut: TDateTime; dFin: TDateTime; TypeDe: DocumentType; TypeA: DocumentType): Double; dispid 224;
    function TotalQtesColises(dDebut: TDateTime; dFin: TDateTime; TypeDe: DocumentType; 
                              TypeA: DocumentType): Double; dispid 225;
    function TotalPoidsNet(dDebut: TDateTime; dFin: TDateTime; TypeDe: DocumentType; 
                           TypeA: DocumentType): Double; dispid 226;
    function TotalPoidsBrut(dDebut: TDateTime; dFin: TDateTime; TypeDe: DocumentType; 
                            TypeA: DocumentType): Double; dispid 227;
    function TauxRemiseMoyen(dDebut: TDateTime; dFin: TDateTime; TypeDe: DocumentType; 
                             TypeA: DocumentType): Double; dispid 229;
    function SoldeEchus1: Double; dispid 230;
    function SoldeEchus2: Double; dispid 231;
    function SoldeEchus3: Double; dispid 232;
    function SoldeNonEchus: Double; dispid 233;
    function DepassementEncours: Double; dispid 234;
    function DepassementEncours2: Double; dispid 235;
    function Portefeuille: Double; dispid 236;
    function PortefeuilleCommande: Double; dispid 237;
    function TotalReglement: Double; dispid 238;
    function DerniereFacture: TDateTime; dispid 239;
    function DernierReglement: TDateTime; dispid 240;
    property TauxRemise: Double dispid 242;
    property TauxEscompte: Double dispid 243;
    property TauxReleve: Double dispid 244;
    property TauxRFA: Double dispid 245;
    property CT_DateFermetureDebut: TDateTime dispid 246;
    property CT_DateFermetureFin: TDateTime dispid 247;
    property Representant: IBOCollaborateur dispid 304;
    property FactoryTiers: IBOTiersFactory3 readonly dispid 100;
    property FactoryTiersBanque: IBITypeObjectFactory readonly dispid 101;
    property FactoryTiersReglement: IBITypeObjectFactory readonly dispid 102;
    property FactoryTiersContact: IBITypeObjectFactory readonly dispid 103;
    property FactoryTiersCompteG: IBOTiersCompteGFactory3 readonly dispid 104;
    property FactoryTiersMedia: IBITypeObjectFactory readonly dispid 105;
    property CT_Num: WideString dispid 106;
    property CT_Intitule: WideString dispid 107;
    property CT_Type: TiersType readonly dispid 108;
    property CompteGPrinc: IBOCompteG3 dispid 109;
    property CT_Qualite: WideString dispid 110;
    property CT_Classement: WideString dispid 111;
    property CT_Contact: WideString dispid 112;
    property Adresse: IAdresse dispid 113;
    property CT_Raccourci: WideString dispid 119;
    property BanquePrincipale: IBOTiersBanque3 dispid 120;
    property Devise: IBPDevise2 dispid 121;
    property CT_Ape: WideString dispid 122;
    property CT_Identifiant: WideString dispid 123;
    property CT_Siret: WideString dispid 124;
    property CT_Stat[sElt: Smallint]: WideString dispid 125;
    property CT_Commentaire: WideString dispid 126;
    property CT_Langue: LangueType dispid 128;
    property CT_DateCreate: TDateTime readonly dispid 132;
    property CT_SautLigne: Smallint dispid 133;
    property CT_SautPage: WordBool dispid 134;
    property CT_Lettrage: WordBool dispid 135;
    property CT_ValidEch: WordBool dispid 136;
    property CT_Sommeil: WordBool dispid 137;
    property CT_NotRappel: WordBool dispid 138;
    property Telecom: ITelecom dispid 139;
    function MvtDebit(const pCompteG: IBOCompteG3; const pJournal: IBOJournal3; dDebut: TDateTime; 
                      dFin: TDateTime): Double; dispid 143;
    function MvtCredit(const pCompteG: IBOCompteG3; const pJournal: IBOJournal3; dDebut: TDateTime; 
                       dFin: TDateTime): Double; dispid 144;
    function MvtSolde(const pCompteG: IBOCompteG3; const pJournal: IBOJournal3; dDebut: TDateTime; 
                      dFin: TDateTime): Double; dispid 145;
    function MvtDevDebit(const pCompteG: IBOCompteG3; const pJournal: IBOJournal3; 
                         dDebut: TDateTime; dFin: TDateTime): Double; dispid 146;
    function MvtDevCredit(const pCompteG: IBOCompteG3; const pJournal: IBOJournal3; 
                          dDebut: TDateTime; dFin: TDateTime): Double; dispid 147;
    function MvtDevSolde(const pCompteG: IBOCompteG3; const pJournal: IBOJournal3; 
                         dDebut: TDateTime; dFin: TDateTime): Double; dispid 148;
    function Solde: Double; dispid 149;
    property CompteAIFRS: IBOCompteA3 dispid 150;
    property InfoLibre: IBIValues readonly dispid 151;
    property ModeleReglement: IBOModeleReglement dispid 152;
    property CT_EdiCodeType: EdiCodeType dispid 153;
    property CT_EdiCode: WideString dispid 154;
    property CT_Facebook: WideString dispid 155;
    property CT_LinkedIn: WideString dispid 156;
    property ExclureMarketing: WordBool dispid 157;
    property ActivateGDPR: WordBool readonly dispid 158;
    procedure CleanPersonalData; dispid 159;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IBOFournisseur3
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {3429256D-78D7-477B-9E0F-1DEC316C490D}
// *********************************************************************//
  IBOFournisseur3 = interface(IBOTiersPart3)
    ['{3429256D-78D7-477B-9E0F-1DEC316C490D}']
    function Get_FactoryFournisseur: IBOFournisseurFactory3; safecall;
    function Get_FactoryFournisseurTarif: IBOFournisseurTarifFactory3; safecall;
    function Get_Expedition: IBPExpedition3; safecall;
    procedure Set_Expedition(const pExpedition: IBPExpedition3); safecall;
    function Get_ConditionLivraison: IBPConditionLivraison; safecall;
    procedure Set_ConditionLivraison(const pConditionLivraison: IBPConditionLivraison); safecall;
    function Get_FactoryFournisseurTarifFamille: IBOFournisseurTarifFamilleFactory; safecall;
    function Get_CT_DelaiAppro: Smallint; safecall;
    procedure Set_CT_DelaiAppro(pVal: Smallint); safecall;
    property FactoryFournisseur: IBOFournisseurFactory3 read Get_FactoryFournisseur;
    property FactoryFournisseurTarif: IBOFournisseurTarifFactory3 read Get_FactoryFournisseurTarif;
    property Expedition: IBPExpedition3 read Get_Expedition write Set_Expedition;
    property ConditionLivraison: IBPConditionLivraison read Get_ConditionLivraison write Set_ConditionLivraison;
    property FactoryFournisseurTarifFamille: IBOFournisseurTarifFamilleFactory read Get_FactoryFournisseurTarifFamille;
    property CT_DelaiAppro: Smallint read Get_CT_DelaiAppro write Set_CT_DelaiAppro;
  end;

// *********************************************************************//
// DispIntf :    IBOFournisseur3Disp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {3429256D-78D7-477B-9E0F-1DEC316C490D}
// *********************************************************************//
  IBOFournisseur3Disp = dispinterface
    ['{3429256D-78D7-477B-9E0F-1DEC316C490D}']
    property FactoryFournisseur: IBOFournisseurFactory3 readonly dispid 299;
    property FactoryFournisseurTarif: IBOFournisseurTarifFactory3 readonly dispid 300;
    property Expedition: IBPExpedition3 dispid 301;
    property ConditionLivraison: IBPConditionLivraison dispid 302;
    property FactoryFournisseurTarifFamille: IBOFournisseurTarifFamilleFactory readonly dispid 303;
    property CT_DelaiAppro: Smallint dispid 305;
    property TiersPayeur: IBOTiersPart3 dispid 241;
    property CT_Encours: Double dispid 200;
    property CategorieCompta: IBICategorieCompta dispid 201;
    property Depot: IBODepot3 dispid 202;
    property CompteA: IBOCompteA3 dispid 203;
    property CT_Coface: WideString dispid 204;
    property CT_Surveillance: WordBool dispid 205;
    property CT_SvDateCreate: TDateTime readonly dispid 206;
    property CT_SvFormeJuri: WideString readonly dispid 207;
    property CT_SvEffectif: WideString readonly dispid 208;
    property CT_SvCA: Double readonly dispid 209;
    property CT_SvResultat: Double readonly dispid 210;
    property CT_SvIncident: Smallint readonly dispid 211;
    property CT_SvDateIncid: TDateTime readonly dispid 212;
    property CT_SvPrivil: Smallint readonly dispid 213;
    property CT_SvRegul: WideString readonly dispid 214;
    property CT_SvCotation: WideString readonly dispid 215;
    property CT_SvDateMaj: TDateTime readonly dispid 216;
    property CT_SvObjetMaj: WideString readonly dispid 217;
    property CT_SvDateBilan: TDateTime readonly dispid 218;
    property CT_SvNbMoisBilan: Smallint readonly dispid 219;
    function CA_HTBrut(dDebut: TDateTime; dFin: TDateTime; TypeDe: DocumentType; TypeA: DocumentType): Double; dispid 220;
    function CA_HTNet(dDebut: TDateTime; dFin: TDateTime; TypeDe: DocumentType; TypeA: DocumentType): Double; dispid 221;
    function CA_TTC(dDebut: TDateTime; dFin: TDateTime; TypeDe: DocumentType; TypeA: DocumentType): Double; dispid 222;
    function TotalPrixRevient(dDebut: TDateTime; dFin: TDateTime; TypeDe: DocumentType; 
                              TypeA: DocumentType): Double; dispid 223;
    function TotalQtes(dDebut: TDateTime; dFin: TDateTime; TypeDe: DocumentType; TypeA: DocumentType): Double; dispid 224;
    function TotalQtesColises(dDebut: TDateTime; dFin: TDateTime; TypeDe: DocumentType; 
                              TypeA: DocumentType): Double; dispid 225;
    function TotalPoidsNet(dDebut: TDateTime; dFin: TDateTime; TypeDe: DocumentType; 
                           TypeA: DocumentType): Double; dispid 226;
    function TotalPoidsBrut(dDebut: TDateTime; dFin: TDateTime; TypeDe: DocumentType; 
                            TypeA: DocumentType): Double; dispid 227;
    function TauxRemiseMoyen(dDebut: TDateTime; dFin: TDateTime; TypeDe: DocumentType; 
                             TypeA: DocumentType): Double; dispid 229;
    function SoldeEchus1: Double; dispid 230;
    function SoldeEchus2: Double; dispid 231;
    function SoldeEchus3: Double; dispid 232;
    function SoldeNonEchus: Double; dispid 233;
    function DepassementEncours: Double; dispid 234;
    function DepassementEncours2: Double; dispid 235;
    function Portefeuille: Double; dispid 236;
    function PortefeuilleCommande: Double; dispid 237;
    function TotalReglement: Double; dispid 238;
    function DerniereFacture: TDateTime; dispid 239;
    function DernierReglement: TDateTime; dispid 240;
    property TauxRemise: Double dispid 242;
    property TauxEscompte: Double dispid 243;
    property TauxReleve: Double dispid 244;
    property TauxRFA: Double dispid 245;
    property CT_DateFermetureDebut: TDateTime dispid 246;
    property CT_DateFermetureFin: TDateTime dispid 247;
    property Representant: IBOCollaborateur dispid 304;
    property FactoryTiers: IBOTiersFactory3 readonly dispid 100;
    property FactoryTiersBanque: IBITypeObjectFactory readonly dispid 101;
    property FactoryTiersReglement: IBITypeObjectFactory readonly dispid 102;
    property FactoryTiersContact: IBITypeObjectFactory readonly dispid 103;
    property FactoryTiersCompteG: IBOTiersCompteGFactory3 readonly dispid 104;
    property FactoryTiersMedia: IBITypeObjectFactory readonly dispid 105;
    property CT_Num: WideString dispid 106;
    property CT_Intitule: WideString dispid 107;
    property CT_Type: TiersType readonly dispid 108;
    property CompteGPrinc: IBOCompteG3 dispid 109;
    property CT_Qualite: WideString dispid 110;
    property CT_Classement: WideString dispid 111;
    property CT_Contact: WideString dispid 112;
    property Adresse: IAdresse dispid 113;
    property CT_Raccourci: WideString dispid 119;
    property BanquePrincipale: IBOTiersBanque3 dispid 120;
    property Devise: IBPDevise2 dispid 121;
    property CT_Ape: WideString dispid 122;
    property CT_Identifiant: WideString dispid 123;
    property CT_Siret: WideString dispid 124;
    property CT_Stat[sElt: Smallint]: WideString dispid 125;
    property CT_Commentaire: WideString dispid 126;
    property CT_Langue: LangueType dispid 128;
    property CT_DateCreate: TDateTime readonly dispid 132;
    property CT_SautLigne: Smallint dispid 133;
    property CT_SautPage: WordBool dispid 134;
    property CT_Lettrage: WordBool dispid 135;
    property CT_ValidEch: WordBool dispid 136;
    property CT_Sommeil: WordBool dispid 137;
    property CT_NotRappel: WordBool dispid 138;
    property Telecom: ITelecom dispid 139;
    function MvtDebit(const pCompteG: IBOCompteG3; const pJournal: IBOJournal3; dDebut: TDateTime; 
                      dFin: TDateTime): Double; dispid 143;
    function MvtCredit(const pCompteG: IBOCompteG3; const pJournal: IBOJournal3; dDebut: TDateTime; 
                       dFin: TDateTime): Double; dispid 144;
    function MvtSolde(const pCompteG: IBOCompteG3; const pJournal: IBOJournal3; dDebut: TDateTime; 
                      dFin: TDateTime): Double; dispid 145;
    function MvtDevDebit(const pCompteG: IBOCompteG3; const pJournal: IBOJournal3; 
                         dDebut: TDateTime; dFin: TDateTime): Double; dispid 146;
    function MvtDevCredit(const pCompteG: IBOCompteG3; const pJournal: IBOJournal3; 
                          dDebut: TDateTime; dFin: TDateTime): Double; dispid 147;
    function MvtDevSolde(const pCompteG: IBOCompteG3; const pJournal: IBOJournal3; 
                         dDebut: TDateTime; dFin: TDateTime): Double; dispid 148;
    function Solde: Double; dispid 149;
    property CompteAIFRS: IBOCompteA3 dispid 150;
    property InfoLibre: IBIValues readonly dispid 151;
    property ModeleReglement: IBOModeleReglement dispid 152;
    property CT_EdiCodeType: EdiCodeType dispid 153;
    property CT_EdiCode: WideString dispid 154;
    property CT_Facebook: WideString dispid 155;
    property CT_LinkedIn: WideString dispid 156;
    property ExclureMarketing: WordBool dispid 157;
    property ActivateGDPR: WordBool readonly dispid 158;
    procedure CleanPersonalData; dispid 159;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IBOTiersFactory3
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {87FE686C-A20E-4716-AB17-41691E470227}
// *********************************************************************//
  IBOTiersFactory3 = interface(IBITypeObjectFactory)
    ['{87FE686C-A20E-4716-AB17-41691E470227}']
    function Get_ListOrderNumero: IBICollection; safecall;
    function Get_ListOrderClassement: IBICollection; safecall;
    function Get_ListOrderType: IBICollection; safecall;
    function ExistNumero(const sNum: WideString): WordBool; safecall;
    function ReadNumero(const sNum: WideString): IBOTiers3; safecall;
    function QueryActifOrderNumero: IBICollection; safecall;
    function QueryTypeNumeroOrderNumero(sType: TiersType; const sNumDe: WideString; 
                                        const sNumA: WideString): IBICollection; safecall;
    function QueryReplicate(lIndice: Integer): IBICollection; safecall;
    function QueryMouvementeOrderNumero: IBICollection; safecall;
    function Get_InfoLibreFields: IBIFields; safecall;
    function QueryCollaborateur(const pObj: IBOCollaborateur): IBICollection; safecall;
    procedure CreateInfoLibre(const sName: WideString; sType: eTypeInfoLibre; ilength: Smallint); safecall;
    property ListOrderNumero: IBICollection read Get_ListOrderNumero;
    property ListOrderClassement: IBICollection read Get_ListOrderClassement;
    property ListOrderType: IBICollection read Get_ListOrderType;
    property InfoLibreFields: IBIFields read Get_InfoLibreFields;
  end;

// *********************************************************************//
// DispIntf :    IBOTiersFactory3Disp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {87FE686C-A20E-4716-AB17-41691E470227}
// *********************************************************************//
  IBOTiersFactory3Disp = dispinterface
    ['{87FE686C-A20E-4716-AB17-41691E470227}']
    property ListOrderNumero: IBICollection readonly dispid 10;
    property ListOrderClassement: IBICollection readonly dispid 11;
    property ListOrderType: IBICollection readonly dispid 12;
    function ExistNumero(const sNum: WideString): WordBool; dispid 13;
    function ReadNumero(const sNum: WideString): IBOTiers3; dispid 14;
    function QueryActifOrderNumero: IBICollection; dispid 15;
    function QueryTypeNumeroOrderNumero(sType: TiersType; const sNumDe: WideString; 
                                        const sNumA: WideString): IBICollection; dispid 17;
    function QueryReplicate(lIndice: Integer): IBICollection; dispid 18;
    function QueryMouvementeOrderNumero: IBICollection; dispid 19;
    property InfoLibreFields: IBIFields readonly dispid 20;
    function QueryCollaborateur(const pObj: IBOCollaborateur): IBICollection; dispid 21;
    procedure CreateInfoLibre(const sName: WideString; sType: eTypeInfoLibre; ilength: Smallint); dispid 22;
    property List: IBICollection readonly dispid 1;
    function Create: IBIPersistObject; dispid 2;
    function Read(const pOID: IBIObjectID): IBIPersistObject; dispid 3;
    function _QuerySynchro(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                           TypeExtraction: SynchroExtractType): IBICollection; dispid 4;
    function _QuerySynchroRemoved(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                                  TypeExtraction: SynchroExtractType): IBICollectionDispatch; dispid 5;
    function ReadFrom(const pStream: IStream): IBIPersistObject; dispid 6;
    property ListForward: IBICollection readonly dispid 7;
    function QueryPredicate(const pPredicate: IDispatch; const sSortDescriptors: WideString): IBICollection; dispid 8;
  end;

// *********************************************************************//
// Interface :   IBOTiersCompteGFactory3
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {0636206A-E39C-4B75-AB57-1B821E65E957}
// *********************************************************************//
  IBOTiersCompteGFactory3 = interface(IBITypeObjectFactory)
    ['{0636206A-E39C-4B75-AB57-1B821E65E957}']
    procedure AddCompteG(const pCompteG: IBOCompteG3); safecall;
  end;

// *********************************************************************//
// DispIntf :    IBOTiersCompteGFactory3Disp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {0636206A-E39C-4B75-AB57-1B821E65E957}
// *********************************************************************//
  IBOTiersCompteGFactory3Disp = dispinterface
    ['{0636206A-E39C-4B75-AB57-1B821E65E957}']
    procedure AddCompteG(const pCompteG: IBOCompteG3); dispid 10;
    property List: IBICollection readonly dispid 1;
    function Create: IBIPersistObject; dispid 2;
    function Read(const pOID: IBIObjectID): IBIPersistObject; dispid 3;
    function _QuerySynchro(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                           TypeExtraction: SynchroExtractType): IBICollection; dispid 4;
    function _QuerySynchroRemoved(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                                  TypeExtraction: SynchroExtractType): IBICollectionDispatch; dispid 5;
    function ReadFrom(const pStream: IStream): IBIPersistObject; dispid 6;
    property ListForward: IBICollection readonly dispid 7;
    function QueryPredicate(const pPredicate: IDispatch; const sSortDescriptors: WideString): IBICollection; dispid 8;
  end;

// *********************************************************************//
// Interface :   IBOCompteG3
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {BD1D89D6-795E-4FCC-BA51-85EFC0BC9B7A}
// *********************************************************************//
  IBOCompteG3 = interface(IBIPersistObject)
    ['{BD1D89D6-795E-4FCC-BA51-85EFC0BC9B7A}']
    function Get_FactoryCompteG: IBOCompteGFactory3; safecall;
    function Get_FactoryCompteGTiers: IBOCompteGTiersFactory3; safecall;
    function Get_CG_Num: WideString; safecall;
    procedure Set_CG_Num(const pVal: WideString); safecall;
    function Get_CG_Intitule: WideString; safecall;
    procedure Set_CG_Intitule(const pVal: WideString); safecall;
    function Get_CG_Type: CompteGType; safecall;
    procedure Set_CG_Type(pVal: CompteGType); safecall;
    function Get_CG_Classement: WideString; safecall;
    procedure Set_CG_Classement(const pVal: WideString); safecall;
    function Get_CG_Report: CompteGReportType; safecall;
    procedure Set_CG_Report(pVal: CompteGReportType); safecall;
    function Get_CG_Raccourci: WideString; safecall;
    procedure Set_CG_Raccourci(const pVal: WideString); safecall;
    function Get_CG_SautLigne: Smallint; safecall;
    procedure Set_CG_SautLigne(pVal: Smallint); safecall;
    function Get_CG_SautPage: WordBool; safecall;
    procedure Set_CG_SautPage(pVal: WordBool); safecall;
    function Get_CG_Regroup: WordBool; safecall;
    procedure Set_CG_Regroup(pVal: WordBool); safecall;
    function Get_CG_Analytique: WordBool; safecall;
    procedure Set_CG_Analytique(pVal: WordBool); safecall;
    function Get_CG_Echeance: WordBool; safecall;
    procedure Set_CG_Echeance(pVal: WordBool); safecall;
    function Get_CG_Quantite: WordBool; safecall;
    procedure Set_CG_Quantite(pVal: WordBool); safecall;
    function Get_CG_Lettrage: WordBool; safecall;
    procedure Set_CG_Lettrage(pVal: WordBool); safecall;
    function Get_CG_Tiers: WordBool; safecall;
    procedure Set_CG_Tiers(pVal: WordBool); safecall;
    function Get_CG_DateCreate: TDateTime; safecall;
    function Get_CG_Devise: WordBool; safecall;
    procedure Set_CG_Devise(pVal: WordBool); safecall;
    function Get_Devise: IBPDevise2; safecall;
    procedure Set_Devise(const pDevise: IBPDevise2); safecall;
    function Get_Taxe: IBOTaxe3; safecall;
    procedure Set_Taxe(const pTaxe: IBOTaxe3); safecall;
    function Get_InfoLibre: IBIValues; safecall;
    function Get_CG_Sommeil: WordBool; safecall;
    procedure Set_CG_Sommeil(pVal: WordBool); safecall;
    function Get_NatureCompte: IBPNatureCompte; safecall;
    procedure Set_NatureCompte(const pNatureCompte: IBPNatureCompte); safecall;
    function Get_CompteR: IBOCompteR; safecall;
    procedure Set_CompteR(const pCompteR: IBOCompteR); safecall;
    function Get_CG_LettrageSaisie: WordBool; safecall;
    procedure Set_CG_LettrageSaisie(pVal: WordBool); safecall;
    property FactoryCompteG: IBOCompteGFactory3 read Get_FactoryCompteG;
    property FactoryCompteGTiers: IBOCompteGTiersFactory3 read Get_FactoryCompteGTiers;
    property CG_Num: WideString read Get_CG_Num write Set_CG_Num;
    property CG_Intitule: WideString read Get_CG_Intitule write Set_CG_Intitule;
    property CG_Type: CompteGType read Get_CG_Type write Set_CG_Type;
    property CG_Classement: WideString read Get_CG_Classement write Set_CG_Classement;
    property CG_Report: CompteGReportType read Get_CG_Report write Set_CG_Report;
    property CG_Raccourci: WideString read Get_CG_Raccourci write Set_CG_Raccourci;
    property CG_SautLigne: Smallint read Get_CG_SautLigne write Set_CG_SautLigne;
    property CG_SautPage: WordBool read Get_CG_SautPage write Set_CG_SautPage;
    property CG_Regroup: WordBool read Get_CG_Regroup write Set_CG_Regroup;
    property CG_Analytique: WordBool read Get_CG_Analytique write Set_CG_Analytique;
    property CG_Echeance: WordBool read Get_CG_Echeance write Set_CG_Echeance;
    property CG_Quantite: WordBool read Get_CG_Quantite write Set_CG_Quantite;
    property CG_Lettrage: WordBool read Get_CG_Lettrage write Set_CG_Lettrage;
    property CG_Tiers: WordBool read Get_CG_Tiers write Set_CG_Tiers;
    property CG_DateCreate: TDateTime read Get_CG_DateCreate;
    property CG_Devise: WordBool read Get_CG_Devise write Set_CG_Devise;
    property Devise: IBPDevise2 read Get_Devise write Set_Devise;
    property Taxe: IBOTaxe3 read Get_Taxe write Set_Taxe;
    property InfoLibre: IBIValues read Get_InfoLibre;
    property CG_Sommeil: WordBool read Get_CG_Sommeil write Set_CG_Sommeil;
    property NatureCompte: IBPNatureCompte read Get_NatureCompte write Set_NatureCompte;
    property CompteR: IBOCompteR read Get_CompteR write Set_CompteR;
    property CG_LettrageSaisie: WordBool read Get_CG_LettrageSaisie write Set_CG_LettrageSaisie;
  end;

// *********************************************************************//
// DispIntf :    IBOCompteG3Disp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {BD1D89D6-795E-4FCC-BA51-85EFC0BC9B7A}
// *********************************************************************//
  IBOCompteG3Disp = dispinterface
    ['{BD1D89D6-795E-4FCC-BA51-85EFC0BC9B7A}']
    property FactoryCompteG: IBOCompteGFactory3 readonly dispid 100;
    property FactoryCompteGTiers: IBOCompteGTiersFactory3 readonly dispid 101;
    property CG_Num: WideString dispid 102;
    property CG_Intitule: WideString dispid 103;
    property CG_Type: CompteGType dispid 104;
    property CG_Classement: WideString dispid 105;
    property CG_Report: CompteGReportType dispid 106;
    property CG_Raccourci: WideString dispid 107;
    property CG_SautLigne: Smallint dispid 108;
    property CG_SautPage: WordBool dispid 109;
    property CG_Regroup: WordBool dispid 110;
    property CG_Analytique: WordBool dispid 111;
    property CG_Echeance: WordBool dispid 112;
    property CG_Quantite: WordBool dispid 113;
    property CG_Lettrage: WordBool dispid 114;
    property CG_Tiers: WordBool dispid 115;
    property CG_DateCreate: TDateTime readonly dispid 116;
    property CG_Devise: WordBool dispid 117;
    property Devise: IBPDevise2 dispid 118;
    property Taxe: IBOTaxe3 dispid 119;
    property InfoLibre: IBIValues readonly dispid 120;
    property CG_Sommeil: WordBool dispid 121;
    property NatureCompte: IBPNatureCompte dispid 122;
    property CompteR: IBOCompteR dispid 123;
    property CG_LettrageSaisie: WordBool dispid 124;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IBOCompteGFactory3
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {766FC622-F25F-45E3-8D10-8EAF2154174B}
// *********************************************************************//
  IBOCompteGFactory3 = interface(IBITypeObjectFactory)
    ['{766FC622-F25F-45E3-8D10-8EAF2154174B}']
    function Get_ListOrderClassement: IBICollection; safecall;
    function Get_ListOrderType: IBICollection; safecall;
    function ExistNumero(const sNum: WideString): WordBool; safecall;
    function ReadNumero(const sNum: WideString): IBOCompteG3; safecall;
    function QueryTypeNumeroOrderNumero(sType: CompteGType; const sNumDe: WideString; 
                                        const sNumA: WideString): IBICollection; safecall;
    function Get_InfoLibreFields: IBIFields; safecall;
    function QueryActifOrderNumero: IBICollection; safecall;
    function QueryActifOrderType: IBICollection; safecall;
    function QueryActifOrderClassement: IBICollection; safecall;
    function QueryCompteR(const CompteR: IBOCompteR): IBICollection; safecall;
    procedure CreateInfoLibre(const sName: WideString; sType: eTypeInfoLibre; ilength: Smallint); safecall;
    property ListOrderClassement: IBICollection read Get_ListOrderClassement;
    property ListOrderType: IBICollection read Get_ListOrderType;
    property InfoLibreFields: IBIFields read Get_InfoLibreFields;
  end;

// *********************************************************************//
// DispIntf :    IBOCompteGFactory3Disp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {766FC622-F25F-45E3-8D10-8EAF2154174B}
// *********************************************************************//
  IBOCompteGFactory3Disp = dispinterface
    ['{766FC622-F25F-45E3-8D10-8EAF2154174B}']
    property ListOrderClassement: IBICollection readonly dispid 10;
    property ListOrderType: IBICollection readonly dispid 11;
    function ExistNumero(const sNum: WideString): WordBool; dispid 12;
    function ReadNumero(const sNum: WideString): IBOCompteG3; dispid 13;
    function QueryTypeNumeroOrderNumero(sType: CompteGType; const sNumDe: WideString; 
                                        const sNumA: WideString): IBICollection; dispid 14;
    property InfoLibreFields: IBIFields readonly dispid 15;
    function QueryActifOrderNumero: IBICollection; dispid 16;
    function QueryActifOrderType: IBICollection; dispid 17;
    function QueryActifOrderClassement: IBICollection; dispid 18;
    function QueryCompteR(const CompteR: IBOCompteR): IBICollection; dispid 19;
    procedure CreateInfoLibre(const sName: WideString; sType: eTypeInfoLibre; ilength: Smallint); dispid 20;
    property List: IBICollection readonly dispid 1;
    function Create: IBIPersistObject; dispid 2;
    function Read(const pOID: IBIObjectID): IBIPersistObject; dispid 3;
    function _QuerySynchro(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                           TypeExtraction: SynchroExtractType): IBICollection; dispid 4;
    function _QuerySynchroRemoved(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                                  TypeExtraction: SynchroExtractType): IBICollectionDispatch; dispid 5;
    function ReadFrom(const pStream: IStream): IBIPersistObject; dispid 6;
    property ListForward: IBICollection readonly dispid 7;
    function QueryPredicate(const pPredicate: IDispatch; const sSortDescriptors: WideString): IBICollection; dispid 8;
  end;

// *********************************************************************//
// Interface :   IBOCompteR
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {34254DB0-A71C-4B9E-99A3-6E6B38582609}
// *********************************************************************//
  IBOCompteR = interface(IBIPersistObject)
    ['{34254DB0-A71C-4B9E-99A3-6E6B38582609}']
    function Get_CR_Num: WideString; safecall;
    procedure Set_CR_Num(const pVal: WideString); safecall;
    function Get_CR_Intitule: WideString; safecall;
    procedure Set_CR_Intitule(const pVal: WideString); safecall;
    function Get_CR_Type: CompteRType; safecall;
    procedure Set_CR_Type(pVal: CompteRType); safecall;
    function Get_CR_Classement: WideString; safecall;
    procedure Set_CR_Classement(const pVal: WideString); safecall;
    function Get_CR_SautLigne: Smallint; safecall;
    procedure Set_CR_SautLigne(pVal: Smallint); safecall;
    function Get_CR_SautPage: WordBool; safecall;
    procedure Set_CR_SautPage(pVal: WordBool); safecall;
    property CR_Num: WideString read Get_CR_Num write Set_CR_Num;
    property CR_Intitule: WideString read Get_CR_Intitule write Set_CR_Intitule;
    property CR_Type: CompteRType read Get_CR_Type write Set_CR_Type;
    property CR_Classement: WideString read Get_CR_Classement write Set_CR_Classement;
    property CR_SautLigne: Smallint read Get_CR_SautLigne write Set_CR_SautLigne;
    property CR_SautPage: WordBool read Get_CR_SautPage write Set_CR_SautPage;
  end;

// *********************************************************************//
// DispIntf :    IBOCompteRDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {34254DB0-A71C-4B9E-99A3-6E6B38582609}
// *********************************************************************//
  IBOCompteRDisp = dispinterface
    ['{34254DB0-A71C-4B9E-99A3-6E6B38582609}']
    property CR_Num: WideString dispid 102;
    property CR_Intitule: WideString dispid 103;
    property CR_Type: CompteRType dispid 104;
    property CR_Classement: WideString dispid 105;
    property CR_SautLigne: Smallint dispid 108;
    property CR_SautPage: WordBool dispid 109;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IBOCompteGTiersFactory3
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {84334E10-A439-46CC-9F65-9A01E9642D77}
// *********************************************************************//
  IBOCompteGTiersFactory3 = interface(IBITypeObjectFactory)
    ['{84334E10-A439-46CC-9F65-9A01E9642D77}']
    procedure AddTiers(const pTiers: IBOTiers3); safecall;
  end;

// *********************************************************************//
// DispIntf :    IBOCompteGTiersFactory3Disp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {84334E10-A439-46CC-9F65-9A01E9642D77}
// *********************************************************************//
  IBOCompteGTiersFactory3Disp = dispinterface
    ['{84334E10-A439-46CC-9F65-9A01E9642D77}']
    procedure AddTiers(const pTiers: IBOTiers3); dispid 10;
    property List: IBICollection readonly dispid 1;
    function Create: IBIPersistObject; dispid 2;
    function Read(const pOID: IBIObjectID): IBIPersistObject; dispid 3;
    function _QuerySynchro(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                           TypeExtraction: SynchroExtractType): IBICollection; dispid 4;
    function _QuerySynchroRemoved(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                                  TypeExtraction: SynchroExtractType): IBICollectionDispatch; dispid 5;
    function ReadFrom(const pStream: IStream): IBIPersistObject; dispid 6;
    property ListForward: IBICollection readonly dispid 7;
    function QueryPredicate(const pPredicate: IDispatch; const sSortDescriptors: WideString): IBICollection; dispid 8;
  end;

// *********************************************************************//
// Interface :   IBOTaxe3
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {99035D0A-F5E5-466E-A919-8174DE96725B}
// *********************************************************************//
  IBOTaxe3 = interface(IBIPersistObject)
    ['{99035D0A-F5E5-466E-A919-8174DE96725B}']
    function Get_FactoryTaxe: IBOTaxeFactory3; safecall;
    function Get_TA_Intitule: WideString; safecall;
    procedure Set_TA_Intitule(const pVal: WideString); safecall;
    function Get_TA_TTaux: TaxeTauxType; safecall;
    procedure Set_TA_TTaux(pVal: TaxeTauxType); safecall;
    function Get_TA_Taux: Double; safecall;
    procedure Set_TA_Taux(pVal: Double); safecall;
    function Get_TA_Type: TaxeType; safecall;
    procedure Set_TA_Type(pVal: TaxeType); safecall;
    function Get_CompteG: IBOCompteG3; safecall;
    procedure Set_CompteG(const pCompteG: IBOCompteG3); safecall;
    function Get_TA_Code: WideString; safecall;
    procedure Set_TA_Code(const pVal: WideString); safecall;
    function Get_TA_NP: WordBool; safecall;
    procedure Set_TA_NP(pVal: WordBool); safecall;
    function Get_TA_Sens: TaxeSensType; safecall;
    procedure Set_TA_Sens(pVal: TaxeSensType); safecall;
    function Get_TA_Provenance: TaxeProvenanceType; safecall;
    procedure Set_TA_Provenance(pVal: TaxeProvenanceType); safecall;
    function Get_TA_Regroup: WideString; safecall;
    procedure Set_TA_Regroup(const pVal: WideString); safecall;
    function Get_TA_Assujet: Double; safecall;
    procedure Set_TA_Assujet(pVal: Double); safecall;
    function Get_TA_GrilleBase: WideString; safecall;
    procedure Set_TA_GrilleBase(const pVal: WideString); safecall;
    function Get_TA_GrilleTaxe: WideString; safecall;
    procedure Set_TA_GrilleTaxe(const pVal: WideString); safecall;
    property FactoryTaxe: IBOTaxeFactory3 read Get_FactoryTaxe;
    property TA_Intitule: WideString read Get_TA_Intitule write Set_TA_Intitule;
    property TA_TTaux: TaxeTauxType read Get_TA_TTaux write Set_TA_TTaux;
    property TA_Taux: Double read Get_TA_Taux write Set_TA_Taux;
    property TA_Type: TaxeType read Get_TA_Type write Set_TA_Type;
    property CompteG: IBOCompteG3 read Get_CompteG write Set_CompteG;
    property TA_Code: WideString read Get_TA_Code write Set_TA_Code;
    property TA_NP: WordBool read Get_TA_NP write Set_TA_NP;
    property TA_Sens: TaxeSensType read Get_TA_Sens write Set_TA_Sens;
    property TA_Provenance: TaxeProvenanceType read Get_TA_Provenance write Set_TA_Provenance;
    property TA_Regroup: WideString read Get_TA_Regroup write Set_TA_Regroup;
    property TA_Assujet: Double read Get_TA_Assujet write Set_TA_Assujet;
    property TA_GrilleBase: WideString read Get_TA_GrilleBase write Set_TA_GrilleBase;
    property TA_GrilleTaxe: WideString read Get_TA_GrilleTaxe write Set_TA_GrilleTaxe;
  end;

// *********************************************************************//
// DispIntf :    IBOTaxe3Disp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {99035D0A-F5E5-466E-A919-8174DE96725B}
// *********************************************************************//
  IBOTaxe3Disp = dispinterface
    ['{99035D0A-F5E5-466E-A919-8174DE96725B}']
    property FactoryTaxe: IBOTaxeFactory3 readonly dispid 100;
    property TA_Intitule: WideString dispid 101;
    property TA_TTaux: TaxeTauxType dispid 102;
    property TA_Taux: Double dispid 103;
    property TA_Type: TaxeType dispid 104;
    property CompteG: IBOCompteG3 dispid 105;
    property TA_Code: WideString dispid 106;
    property TA_NP: WordBool dispid 107;
    property TA_Sens: TaxeSensType dispid 108;
    property TA_Provenance: TaxeProvenanceType dispid 109;
    property TA_Regroup: WideString dispid 110;
    property TA_Assujet: Double dispid 111;
    property TA_GrilleBase: WideString dispid 112;
    property TA_GrilleTaxe: WideString dispid 113;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IBOTaxeFactory3
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {7DFE3CA8-2D3C-4DF1-9B8F-7F28AD2B5439}
// *********************************************************************//
  IBOTaxeFactory3 = interface(IBITypeObjectFactory)
    ['{7DFE3CA8-2D3C-4DF1-9B8F-7F28AD2B5439}']
    function ExistCode(const sNum: WideString): WordBool; safecall;
    function ReadCode(const sNum: WideString): IBOTaxe3; safecall;
  end;

// *********************************************************************//
// DispIntf :    IBOTaxeFactory3Disp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {7DFE3CA8-2D3C-4DF1-9B8F-7F28AD2B5439}
// *********************************************************************//
  IBOTaxeFactory3Disp = dispinterface
    ['{7DFE3CA8-2D3C-4DF1-9B8F-7F28AD2B5439}']
    function ExistCode(const sNum: WideString): WordBool; dispid 10;
    function ReadCode(const sNum: WideString): IBOTaxe3; dispid 11;
    property List: IBICollection readonly dispid 1;
    function Create: IBIPersistObject; dispid 2;
    function Read(const pOID: IBIObjectID): IBIPersistObject; dispid 3;
    function _QuerySynchro(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                           TypeExtraction: SynchroExtractType): IBICollection; dispid 4;
    function _QuerySynchroRemoved(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                                  TypeExtraction: SynchroExtractType): IBICollectionDispatch; dispid 5;
    function ReadFrom(const pStream: IStream): IBIPersistObject; dispid 6;
    property ListForward: IBICollection readonly dispid 7;
    function QueryPredicate(const pPredicate: IDispatch; const sSortDescriptors: WideString): IBICollection; dispid 8;
  end;

// *********************************************************************//
// Interface :   IBPNatureCompte
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {838ED02B-7688-430E-BDAC-C659E326FE95}
// *********************************************************************//
  IBPNatureCompte = interface(IBIPersistObject)
    ['{838ED02B-7688-430E-BDAC-C659E326FE95}']
    function Get_FactoryNatureCompte: IBPNatureCompteFactory; safecall;
    function Get_FactoryNatureCompteDet: IBPNatureCompteDetFactory; safecall;
    function Get_NatureCompteType: NatureCompteType; safecall;
    function Get_Intitule: WideString; safecall;
    property FactoryNatureCompte: IBPNatureCompteFactory read Get_FactoryNatureCompte;
    property FactoryNatureCompteDet: IBPNatureCompteDetFactory read Get_FactoryNatureCompteDet;
    property NatureCompteType: NatureCompteType read Get_NatureCompteType;
    property Intitule: WideString read Get_Intitule;
  end;

// *********************************************************************//
// DispIntf :    IBPNatureCompteDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {838ED02B-7688-430E-BDAC-C659E326FE95}
// *********************************************************************//
  IBPNatureCompteDisp = dispinterface
    ['{838ED02B-7688-430E-BDAC-C659E326FE95}']
    property FactoryNatureCompte: IBPNatureCompteFactory readonly dispid 100;
    property FactoryNatureCompteDet: IBPNatureCompteDetFactory readonly dispid 101;
    property NatureCompteType: NatureCompteType readonly dispid 102;
    property Intitule: WideString readonly dispid 103;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IBPNatureCompteFactory
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {B6942D0F-D5E1-41F7-8B80-674F0FD31172}
// *********************************************************************//
  IBPNatureCompteFactory = interface(IBITypeObjectFactory)
    ['{B6942D0F-D5E1-41F7-8B80-674F0FD31172}']
    function ReadNature(sNature: NatureCompteType): IBPNatureCompte; safecall;
    function FindNatureProche(const sRacine: WideString): IBPNatureCompteDet; safecall;
  end;

// *********************************************************************//
// DispIntf :    IBPNatureCompteFactoryDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {B6942D0F-D5E1-41F7-8B80-674F0FD31172}
// *********************************************************************//
  IBPNatureCompteFactoryDisp = dispinterface
    ['{B6942D0F-D5E1-41F7-8B80-674F0FD31172}']
    function ReadNature(sNature: NatureCompteType): IBPNatureCompte; dispid 11;
    function FindNatureProche(const sRacine: WideString): IBPNatureCompteDet; dispid 12;
    property List: IBICollection readonly dispid 1;
    function Create: IBIPersistObject; dispid 2;
    function Read(const pOID: IBIObjectID): IBIPersistObject; dispid 3;
    function _QuerySynchro(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                           TypeExtraction: SynchroExtractType): IBICollection; dispid 4;
    function _QuerySynchroRemoved(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                                  TypeExtraction: SynchroExtractType): IBICollectionDispatch; dispid 5;
    function ReadFrom(const pStream: IStream): IBIPersistObject; dispid 6;
    property ListForward: IBICollection readonly dispid 7;
    function QueryPredicate(const pPredicate: IDispatch; const sSortDescriptors: WideString): IBICollection; dispid 8;
  end;

// *********************************************************************//
// Interface :   IBPNatureCompteDet
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {2D4C8625-1C83-4E1C-9B25-67E86ED2CD7E}
// *********************************************************************//
  IBPNatureCompteDet = interface(IBIPersistObject)
    ['{2D4C8625-1C83-4E1C-9B25-67E86ED2CD7E}']
    function Get_FactoryNatureCompteDet: IBPNatureCompteDetFactory; safecall;
    function Get_FourchetteDebut: WideString; safecall;
    procedure Set_FourchetteDebut(const pVal: WideString); safecall;
    function Get_FourchetteFin: WideString; safecall;
    procedure Set_FourchetteFin(const pVal: WideString); safecall;
    function Get_CG_Regroup: WordBool; safecall;
    procedure Set_CG_Regroup(pVal: WordBool); safecall;
    function Get_CG_Analytique: WordBool; safecall;
    procedure Set_CG_Analytique(pVal: WordBool); safecall;
    function Get_CG_Devise: WordBool; safecall;
    procedure Set_CG_Devise(pVal: WordBool); safecall;
    function Get_Devise: IBPDevise2; safecall;
    procedure Set_Devise(const pDevise: IBPDevise2); safecall;
    function Get_CG_Echeance: WordBool; safecall;
    procedure Set_CG_Echeance(pVal: WordBool); safecall;
    function Get_CG_Quantite: WordBool; safecall;
    procedure Set_CG_Quantite(pVal: WordBool); safecall;
    function Get_CG_Lettrage: WordBool; safecall;
    procedure Set_CG_Lettrage(pVal: WordBool); safecall;
    function Get_CG_Tiers: WordBool; safecall;
    procedure Set_CG_Tiers(pVal: WordBool); safecall;
    function Get_CG_Report: CompteGReportType; safecall;
    procedure Set_CG_Report(pVal: CompteGReportType); safecall;
    property FactoryNatureCompteDet: IBPNatureCompteDetFactory read Get_FactoryNatureCompteDet;
    property FourchetteDebut: WideString read Get_FourchetteDebut write Set_FourchetteDebut;
    property FourchetteFin: WideString read Get_FourchetteFin write Set_FourchetteFin;
    property CG_Regroup: WordBool read Get_CG_Regroup write Set_CG_Regroup;
    property CG_Analytique: WordBool read Get_CG_Analytique write Set_CG_Analytique;
    property CG_Devise: WordBool read Get_CG_Devise write Set_CG_Devise;
    property Devise: IBPDevise2 read Get_Devise write Set_Devise;
    property CG_Echeance: WordBool read Get_CG_Echeance write Set_CG_Echeance;
    property CG_Quantite: WordBool read Get_CG_Quantite write Set_CG_Quantite;
    property CG_Lettrage: WordBool read Get_CG_Lettrage write Set_CG_Lettrage;
    property CG_Tiers: WordBool read Get_CG_Tiers write Set_CG_Tiers;
    property CG_Report: CompteGReportType read Get_CG_Report write Set_CG_Report;
  end;

// *********************************************************************//
// DispIntf :    IBPNatureCompteDetDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {2D4C8625-1C83-4E1C-9B25-67E86ED2CD7E}
// *********************************************************************//
  IBPNatureCompteDetDisp = dispinterface
    ['{2D4C8625-1C83-4E1C-9B25-67E86ED2CD7E}']
    property FactoryNatureCompteDet: IBPNatureCompteDetFactory readonly dispid 100;
    property FourchetteDebut: WideString dispid 101;
    property FourchetteFin: WideString dispid 102;
    property CG_Regroup: WordBool dispid 103;
    property CG_Analytique: WordBool dispid 104;
    property CG_Devise: WordBool dispid 105;
    property Devise: IBPDevise2 dispid 106;
    property CG_Echeance: WordBool dispid 107;
    property CG_Quantite: WordBool dispid 108;
    property CG_Lettrage: WordBool dispid 109;
    property CG_Tiers: WordBool dispid 110;
    property CG_Report: CompteGReportType dispid 111;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IBPNatureCompteDetFactory
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {FC127295-7674-4D27-B7D6-DE8CE60AC5EA}
// *********************************************************************//
  IBPNatureCompteDetFactory = interface(IBITypeObjectFactory)
    ['{FC127295-7674-4D27-B7D6-DE8CE60AC5EA}']
    function FindNatureProche(const sRacine: WideString): IBPNatureCompteDet; safecall;
  end;

// *********************************************************************//
// DispIntf :    IBPNatureCompteDetFactoryDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {FC127295-7674-4D27-B7D6-DE8CE60AC5EA}
// *********************************************************************//
  IBPNatureCompteDetFactoryDisp = dispinterface
    ['{FC127295-7674-4D27-B7D6-DE8CE60AC5EA}']
    function FindNatureProche(const sRacine: WideString): IBPNatureCompteDet; dispid 11;
    property List: IBICollection readonly dispid 1;
    function Create: IBIPersistObject; dispid 2;
    function Read(const pOID: IBIObjectID): IBIPersistObject; dispid 3;
    function _QuerySynchro(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                           TypeExtraction: SynchroExtractType): IBICollection; dispid 4;
    function _QuerySynchroRemoved(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                                  TypeExtraction: SynchroExtractType): IBICollectionDispatch; dispid 5;
    function ReadFrom(const pStream: IStream): IBIPersistObject; dispid 6;
    property ListForward: IBICollection readonly dispid 7;
    function QueryPredicate(const pPredicate: IDispatch; const sSortDescriptors: WideString): IBICollection; dispid 8;
  end;

// *********************************************************************//
// Interface :   IBOTiersBanque3
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {3AA5D2A8-7452-47AC-B0EF-D73BE63B757F}
// *********************************************************************//
  IBOTiersBanque3 = interface(IBIPersistObject)
    ['{3AA5D2A8-7452-47AC-B0EF-D73BE63B757F}']
    function Get_FactoryTiersBanque: IBITypeObjectFactory; safecall;
    function Get_Tiers: IBOTiers3; safecall;
    function Get_BT_Intitule: WideString; safecall;
    procedure Set_BT_Intitule(const pVal: WideString); safecall;
    function Get_BT_Banque: WideString; safecall;
    procedure Set_BT_Banque(const pVal: WideString); safecall;
    function Get_BT_Guichet: WideString; safecall;
    procedure Set_BT_Guichet(const pVal: WideString); safecall;
    function Get_BT_Compte: WideString; safecall;
    procedure Set_BT_Compte(const pVal: WideString); safecall;
    function Get_BT_Cle: WideString; safecall;
    procedure Set_BT_Cle(const pVal: WideString); safecall;
    function Get_BT_Commentaire: WideString; safecall;
    procedure Set_BT_Commentaire(const pVal: WideString); safecall;
    function Get_BT_Struct: RibType; safecall;
    procedure Set_BT_Struct(pVal: RibType); safecall;
    function Get_Devise: IBPDevise2; safecall;
    procedure Set_Devise(const pVal: IBPDevise2); safecall;
    function Get_Adresse: IAdresse; safecall;
    procedure Set_Adresse(const pAdresse: IAdresse); safecall;
    function Get_BT_Bic: WideString; safecall;
    procedure Set_BT_Bic(const pVal: WideString); safecall;
    function Get_BT_IBAN: WideString; safecall;
    procedure Set_BT_IBAN(const pVal: WideString); safecall;
    function Get_BT_CalculIBAN: WordBool; safecall;
    procedure Set_BT_CalculIBAN(pVal: WordBool); safecall;
    function Get_BT_MandatRef: WideString; safecall;
    procedure Set_BT_MandatRef(const pVal: WideString); safecall;
    function Get_BT_MandatDate: TDateTime; safecall;
    procedure Set_BT_MandatDate(pVal: TDateTime); safecall;
    function Get_BT_NomAgence: WideString; safecall;
    procedure Set_BT_NomAgence(const pVal: WideString); safecall;
    function Get_BT_PaysAgence: WideString; safecall;
    procedure Set_BT_PaysAgence(const pVal: WideString); safecall;
    function Get_BT_Pays: WideString; safecall;
    procedure Set_BT_Pays(const pVal: WideString); safecall;
    property FactoryTiersBanque: IBITypeObjectFactory read Get_FactoryTiersBanque;
    property Tiers: IBOTiers3 read Get_Tiers;
    property BT_Intitule: WideString read Get_BT_Intitule write Set_BT_Intitule;
    property BT_Banque: WideString read Get_BT_Banque write Set_BT_Banque;
    property BT_Guichet: WideString read Get_BT_Guichet write Set_BT_Guichet;
    property BT_Compte: WideString read Get_BT_Compte write Set_BT_Compte;
    property BT_Cle: WideString read Get_BT_Cle write Set_BT_Cle;
    property BT_Commentaire: WideString read Get_BT_Commentaire write Set_BT_Commentaire;
    property BT_Struct: RibType read Get_BT_Struct write Set_BT_Struct;
    property Devise: IBPDevise2 read Get_Devise write Set_Devise;
    property Adresse: IAdresse read Get_Adresse write Set_Adresse;
    property BT_Bic: WideString read Get_BT_Bic write Set_BT_Bic;
    property BT_IBAN: WideString read Get_BT_IBAN write Set_BT_IBAN;
    property BT_CalculIBAN: WordBool read Get_BT_CalculIBAN write Set_BT_CalculIBAN;
    property BT_MandatRef: WideString read Get_BT_MandatRef write Set_BT_MandatRef;
    property BT_MandatDate: TDateTime read Get_BT_MandatDate write Set_BT_MandatDate;
    property BT_NomAgence: WideString read Get_BT_NomAgence write Set_BT_NomAgence;
    property BT_PaysAgence: WideString read Get_BT_PaysAgence write Set_BT_PaysAgence;
    property BT_Pays: WideString read Get_BT_Pays write Set_BT_Pays;
  end;

// *********************************************************************//
// DispIntf :    IBOTiersBanque3Disp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {3AA5D2A8-7452-47AC-B0EF-D73BE63B757F}
// *********************************************************************//
  IBOTiersBanque3Disp = dispinterface
    ['{3AA5D2A8-7452-47AC-B0EF-D73BE63B757F}']
    property FactoryTiersBanque: IBITypeObjectFactory readonly dispid 100;
    property Tiers: IBOTiers3 readonly dispid 101;
    property BT_Intitule: WideString dispid 102;
    property BT_Banque: WideString dispid 103;
    property BT_Guichet: WideString dispid 104;
    property BT_Compte: WideString dispid 105;
    property BT_Cle: WideString dispid 106;
    property BT_Commentaire: WideString dispid 107;
    property BT_Struct: RibType dispid 108;
    property Devise: IBPDevise2 dispid 109;
    property Adresse: IAdresse dispid 113;
    property BT_Bic: WideString dispid 115;
    property BT_IBAN: WideString dispid 116;
    property BT_CalculIBAN: WordBool dispid 117;
    property BT_MandatRef: WideString dispid 118;
    property BT_MandatDate: TDateTime dispid 119;
    property BT_NomAgence: WideString dispid 120;
    property BT_PaysAgence: WideString dispid 121;
    property BT_Pays: WideString dispid 122;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IBOJournal3
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {1837F306-0725-455A-8C15-1EC716483DDC}
// *********************************************************************//
  IBOJournal3 = interface(IBIPersistObject)
    ['{1837F306-0725-455A-8C15-1EC716483DDC}']
    function Get_FactoryJournal: IBOJournalFactory3; safecall;
    function Get_JO_Num: WideString; safecall;
    procedure Set_JO_Num(const pVal: WideString); safecall;
    function Get_JO_Intitule: WideString; safecall;
    procedure Set_JO_Intitule(const pVal: WideString); safecall;
    function Get_CompteG: IBOCompteG3; safecall;
    procedure Set_CompteG(const pCompteG: IBOCompteG3); safecall;
    function Get_JO_Type: JournalType; safecall;
    procedure Set_JO_Type(pVal: JournalType); safecall;
    function Get_JO_NumPiece: JournalNumPieceType; safecall;
    procedure Set_JO_NumPiece(pVal: JournalNumPieceType); safecall;
    function Get_JO_Contrepartie: WordBool; safecall;
    procedure Set_JO_Contrepartie(pVal: WordBool); safecall;
    function Get_JO_SaisAnal: WordBool; safecall;
    procedure Set_JO_SaisAnal(pVal: WordBool); safecall;
    function Get_JO_NotCalcTot: WordBool; safecall;
    procedure Set_JO_NotCalcTot(pVal: WordBool); safecall;
    function Get_JO_Rappro: JournalRapproType; safecall;
    procedure Set_JO_Rappro(pVal: JournalRapproType); safecall;
    function Get_JO_Sommeil: WordBool; safecall;
    procedure Set_JO_Sommeil(pVal: WordBool); safecall;
    function Get_JO_IFRS: WordBool; safecall;
    procedure Set_JO_IFRS(pVal: WordBool); safecall;
    function Get_JO_Reglement: WordBool; safecall;
    procedure Set_JO_Reglement(pVal: WordBool); safecall;
    function Get_NextEC_Piece(DatePeriode: TDateTime): WideString; safecall;
    function Get_TypePeriodCloture(DatePeriode: TDateTime): PeriodClotureType; safecall;
    function Get_JO_LettrageSaisie: WordBool; safecall;
    procedure Set_JO_LettrageSaisie(pVal: WordBool); safecall;
    function Get_JO_Protec: WordBool; safecall;
    procedure Set_JO_Protec(pVal: WordBool); safecall;
    property FactoryJournal: IBOJournalFactory3 read Get_FactoryJournal;
    property JO_Num: WideString read Get_JO_Num write Set_JO_Num;
    property JO_Intitule: WideString read Get_JO_Intitule write Set_JO_Intitule;
    property CompteG: IBOCompteG3 read Get_CompteG write Set_CompteG;
    property JO_Type: JournalType read Get_JO_Type write Set_JO_Type;
    property JO_NumPiece: JournalNumPieceType read Get_JO_NumPiece write Set_JO_NumPiece;
    property JO_Contrepartie: WordBool read Get_JO_Contrepartie write Set_JO_Contrepartie;
    property JO_SaisAnal: WordBool read Get_JO_SaisAnal write Set_JO_SaisAnal;
    property JO_NotCalcTot: WordBool read Get_JO_NotCalcTot write Set_JO_NotCalcTot;
    property JO_Rappro: JournalRapproType read Get_JO_Rappro write Set_JO_Rappro;
    property JO_Sommeil: WordBool read Get_JO_Sommeil write Set_JO_Sommeil;
    property JO_IFRS: WordBool read Get_JO_IFRS write Set_JO_IFRS;
    property JO_Reglement: WordBool read Get_JO_Reglement write Set_JO_Reglement;
    property NextEC_Piece[DatePeriode: TDateTime]: WideString read Get_NextEC_Piece;
    property TypePeriodCloture[DatePeriode: TDateTime]: PeriodClotureType read Get_TypePeriodCloture;
    property JO_LettrageSaisie: WordBool read Get_JO_LettrageSaisie write Set_JO_LettrageSaisie;
    property JO_Protec: WordBool read Get_JO_Protec write Set_JO_Protec;
  end;

// *********************************************************************//
// DispIntf :    IBOJournal3Disp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {1837F306-0725-455A-8C15-1EC716483DDC}
// *********************************************************************//
  IBOJournal3Disp = dispinterface
    ['{1837F306-0725-455A-8C15-1EC716483DDC}']
    property FactoryJournal: IBOJournalFactory3 readonly dispid 100;
    property JO_Num: WideString dispid 101;
    property JO_Intitule: WideString dispid 102;
    property CompteG: IBOCompteG3 dispid 103;
    property JO_Type: JournalType dispid 104;
    property JO_NumPiece: JournalNumPieceType dispid 105;
    property JO_Contrepartie: WordBool dispid 106;
    property JO_SaisAnal: WordBool dispid 107;
    property JO_NotCalcTot: WordBool dispid 108;
    property JO_Rappro: JournalRapproType dispid 109;
    property JO_Sommeil: WordBool dispid 110;
    property JO_IFRS: WordBool dispid 111;
    property JO_Reglement: WordBool dispid 112;
    property NextEC_Piece[DatePeriode: TDateTime]: WideString readonly dispid 113;
    property TypePeriodCloture[DatePeriode: TDateTime]: PeriodClotureType readonly dispid 114;
    property JO_LettrageSaisie: WordBool dispid 115;
    property JO_Protec: WordBool dispid 116;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IBOJournalFactory3
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {D117B205-3ECD-47C6-BDEB-FBA2CA55B484}
// *********************************************************************//
  IBOJournalFactory3 = interface(IBITypeObjectFactory)
    ['{D117B205-3ECD-47C6-BDEB-FBA2CA55B484}']
    function ExistNumero(const sNum: WideString): WordBool; safecall;
    function ReadNumero(const sNum: WideString): IBOJournal3; safecall;
  end;

// *********************************************************************//
// DispIntf :    IBOJournalFactory3Disp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {D117B205-3ECD-47C6-BDEB-FBA2CA55B484}
// *********************************************************************//
  IBOJournalFactory3Disp = dispinterface
    ['{D117B205-3ECD-47C6-BDEB-FBA2CA55B484}']
    function ExistNumero(const sNum: WideString): WordBool; dispid 10;
    function ReadNumero(const sNum: WideString): IBOJournal3; dispid 11;
    property List: IBICollection readonly dispid 1;
    function Create: IBIPersistObject; dispid 2;
    function Read(const pOID: IBIObjectID): IBIPersistObject; dispid 3;
    function _QuerySynchro(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                           TypeExtraction: SynchroExtractType): IBICollection; dispid 4;
    function _QuerySynchroRemoved(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                                  TypeExtraction: SynchroExtractType): IBICollectionDispatch; dispid 5;
    function ReadFrom(const pStream: IStream): IBIPersistObject; dispid 6;
    property ListForward: IBICollection readonly dispid 7;
    function QueryPredicate(const pPredicate: IDispatch; const sSortDescriptors: WideString): IBICollection; dispid 8;
  end;

// *********************************************************************//
// Interface :   IBOModeleReglement
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {CE004984-85E4-4CFF-9C59-94F7A2F64DB1}
// *********************************************************************//
  IBOModeleReglement = interface(IBIPersistObject)
    ['{CE004984-85E4-4CFF-9C59-94F7A2F64DB1}']
    function Get_FactoryModeleReglement: IBOModeleReglementFactory; safecall;
    function Get_FactoryModeleReglementLigne: IBITypeObjectFactory; safecall;
    function Get_Intitule: WideString; safecall;
    procedure Set_Intitule(const pVal: WideString); safecall;
    property FactoryModeleReglement: IBOModeleReglementFactory read Get_FactoryModeleReglement;
    property FactoryModeleReglementLigne: IBITypeObjectFactory read Get_FactoryModeleReglementLigne;
    property Intitule: WideString read Get_Intitule write Set_Intitule;
  end;

// *********************************************************************//
// DispIntf :    IBOModeleReglementDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {CE004984-85E4-4CFF-9C59-94F7A2F64DB1}
// *********************************************************************//
  IBOModeleReglementDisp = dispinterface
    ['{CE004984-85E4-4CFF-9C59-94F7A2F64DB1}']
    property FactoryModeleReglement: IBOModeleReglementFactory readonly dispid 100;
    property FactoryModeleReglementLigne: IBITypeObjectFactory readonly dispid 101;
    property Intitule: WideString dispid 102;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IBOModeleReglementFactory
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {FEC25A08-6DB9-4A35-B6AC-3B8A385B7EAC}
// *********************************************************************//
  IBOModeleReglementFactory = interface(IBITypeObjectFactory)
    ['{FEC25A08-6DB9-4A35-B6AC-3B8A385B7EAC}']
    function ExistIntitule(const sNum: WideString): WordBool; safecall;
    function ReadIntitule(const sNum: WideString): IBOModeleReglement; safecall;
  end;

// *********************************************************************//
// DispIntf :    IBOModeleReglementFactoryDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {FEC25A08-6DB9-4A35-B6AC-3B8A385B7EAC}
// *********************************************************************//
  IBOModeleReglementFactoryDisp = dispinterface
    ['{FEC25A08-6DB9-4A35-B6AC-3B8A385B7EAC}']
    function ExistIntitule(const sNum: WideString): WordBool; dispid 10;
    function ReadIntitule(const sNum: WideString): IBOModeleReglement; dispid 11;
    property List: IBICollection readonly dispid 1;
    function Create: IBIPersistObject; dispid 2;
    function Read(const pOID: IBIObjectID): IBIPersistObject; dispid 3;
    function _QuerySynchro(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                           TypeExtraction: SynchroExtractType): IBICollection; dispid 4;
    function _QuerySynchroRemoved(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                                  TypeExtraction: SynchroExtractType): IBICollectionDispatch; dispid 5;
    function ReadFrom(const pStream: IStream): IBIPersistObject; dispid 6;
    property ListForward: IBICollection readonly dispid 7;
    function QueryPredicate(const pPredicate: IDispatch; const sSortDescriptors: WideString): IBICollection; dispid 8;
  end;

// *********************************************************************//
// Interface :   IBOFournisseurFactory3
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {DCA2B175-C276-4507-B8C8-957D9C926ECA}
// *********************************************************************//
  IBOFournisseurFactory3 = interface(IBITypeObjectFactory)
    ['{DCA2B175-C276-4507-B8C8-957D9C926ECA}']
    function Get_ListOrderClassement: IBICollection; safecall;
    function ExistNumero(const sNum: WideString): WordBool; safecall;
    function ReadNumero(const sNum: WideString): IBOFournisseur3; safecall;
    property ListOrderClassement: IBICollection read Get_ListOrderClassement;
  end;

// *********************************************************************//
// DispIntf :    IBOFournisseurFactory3Disp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {DCA2B175-C276-4507-B8C8-957D9C926ECA}
// *********************************************************************//
  IBOFournisseurFactory3Disp = dispinterface
    ['{DCA2B175-C276-4507-B8C8-957D9C926ECA}']
    property ListOrderClassement: IBICollection readonly dispid 10;
    function ExistNumero(const sNum: WideString): WordBool; dispid 11;
    function ReadNumero(const sNum: WideString): IBOFournisseur3; dispid 12;
    property List: IBICollection readonly dispid 1;
    function Create: IBIPersistObject; dispid 2;
    function Read(const pOID: IBIObjectID): IBIPersistObject; dispid 3;
    function _QuerySynchro(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                           TypeExtraction: SynchroExtractType): IBICollection; dispid 4;
    function _QuerySynchroRemoved(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                                  TypeExtraction: SynchroExtractType): IBICollectionDispatch; dispid 5;
    function ReadFrom(const pStream: IStream): IBIPersistObject; dispid 6;
    property ListForward: IBICollection readonly dispid 7;
    function QueryPredicate(const pPredicate: IDispatch; const sSortDescriptors: WideString): IBICollection; dispid 8;
  end;

// *********************************************************************//
// Interface :   IBOFournisseurTarifFactory3
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {A215FD6B-A2D8-47D1-AE4F-40607DC18914}
// *********************************************************************//
  IBOFournisseurTarifFactory3 = interface(IBITypeObjectFactory)
    ['{A215FD6B-A2D8-47D1-AE4F-40607DC18914}']
    function ExistArticle(const pArticle: IBOArticle3): WordBool; safecall;
    function ReadArticle(const pArticle: IBOArticle3): IBOArticleTarifFournisseur3; safecall;
  end;

// *********************************************************************//
// DispIntf :    IBOFournisseurTarifFactory3Disp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {A215FD6B-A2D8-47D1-AE4F-40607DC18914}
// *********************************************************************//
  IBOFournisseurTarifFactory3Disp = dispinterface
    ['{A215FD6B-A2D8-47D1-AE4F-40607DC18914}']
    function ExistArticle(const pArticle: IBOArticle3): WordBool; dispid 10;
    function ReadArticle(const pArticle: IBOArticle3): IBOArticleTarifFournisseur3; dispid 11;
    property List: IBICollection readonly dispid 1;
    function Create: IBIPersistObject; dispid 2;
    function Read(const pOID: IBIObjectID): IBIPersistObject; dispid 3;
    function _QuerySynchro(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                           TypeExtraction: SynchroExtractType): IBICollection; dispid 4;
    function _QuerySynchroRemoved(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                                  TypeExtraction: SynchroExtractType): IBICollectionDispatch; dispid 5;
    function ReadFrom(const pStream: IStream): IBIPersistObject; dispid 6;
    property ListForward: IBICollection readonly dispid 7;
    function QueryPredicate(const pPredicate: IDispatch; const sSortDescriptors: WideString): IBICollection; dispid 8;
  end;

// *********************************************************************//
// Interface :   IBIArticleTarif3
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {C83AA501-A86D-4013-9604-DB7A80CFC893}
// *********************************************************************//
  IBIArticleTarif3 = interface(IBIPersistObject)
    ['{C83AA501-A86D-4013-9604-DB7A80CFC893}']
    function Get_FactoryArticleTarifGamme: IBITypeObjectFactory; safecall;
    function Get_FactoryArticleTarifQte: IBITypeObjectFactory; safecall;
    function Get_Article: IBOArticle3; safecall;
    procedure Set_Article(const pObject: IBOArticle3); safecall;
    function Get_Prix: Double; safecall;
    procedure Set_Prix(pVal: Double); safecall;
    function Get_GammeRemise: IBPGamme; safecall;
    procedure Set_GammeRemise(const pObject: IBPGamme); safecall;
    function Get_PrixDevise: Double; safecall;
    procedure Set_PrixDevise(pVal: Double); safecall;
    function Get_Devise: IBPDevise2; safecall;
    procedure Set_Devise(const pObject: IBPDevise2); safecall;
    function Get_Remise: IRemise2; safecall;
    procedure Set_Remise(const pObject: IRemise2); safecall;
    function Get_IsHorsRemise: WordBool; safecall;
    procedure Set_IsHorsRemise(pVal: WordBool); safecall;
    property FactoryArticleTarifGamme: IBITypeObjectFactory read Get_FactoryArticleTarifGamme;
    property FactoryArticleTarifQte: IBITypeObjectFactory read Get_FactoryArticleTarifQte;
    property Article: IBOArticle3 read Get_Article write Set_Article;
    property Prix: Double read Get_Prix write Set_Prix;
    property GammeRemise: IBPGamme read Get_GammeRemise write Set_GammeRemise;
    property PrixDevise: Double read Get_PrixDevise write Set_PrixDevise;
    property Devise: IBPDevise2 read Get_Devise write Set_Devise;
    property Remise: IRemise2 read Get_Remise write Set_Remise;
    property IsHorsRemise: WordBool read Get_IsHorsRemise write Set_IsHorsRemise;
  end;

// *********************************************************************//
// DispIntf :    IBIArticleTarif3Disp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {C83AA501-A86D-4013-9604-DB7A80CFC893}
// *********************************************************************//
  IBIArticleTarif3Disp = dispinterface
    ['{C83AA501-A86D-4013-9604-DB7A80CFC893}']
    property FactoryArticleTarifGamme: IBITypeObjectFactory readonly dispid 100;
    property FactoryArticleTarifQte: IBITypeObjectFactory readonly dispid 101;
    property Article: IBOArticle3 dispid 102;
    property Prix: Double dispid 103;
    property GammeRemise: IBPGamme dispid 104;
    property PrixDevise: Double dispid 105;
    property Devise: IBPDevise2 dispid 106;
    property Remise: IRemise2 dispid 107;
    property IsHorsRemise: WordBool dispid 108;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IBOArticleTarifFournisseur3
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {0717F9A2-9759-4C9E-9F7B-1B4F14DEDCD9}
// *********************************************************************//
  IBOArticleTarifFournisseur3 = interface(IBIArticleTarif3)
    ['{0717F9A2-9759-4C9E-9F7B-1B4F14DEDCD9}']
    function Get_Fournisseur: IBOFournisseur3; safecall;
    procedure Set_Fournisseur(const pFournisseur: IBOFournisseur3); safecall;
    function Get_Unite: IBPUnite; safecall;
    procedure Set_Unite(const pUnite: IBPUnite); safecall;
    function Get_AF_Conversion: Double; safecall;
    procedure Set_AF_Conversion(pVal: Double); safecall;
    function Get_AF_DelaiAppro: Smallint; safecall;
    procedure Set_AF_DelaiAppro(pVal: Smallint); safecall;
    function Get_AF_Garantie: Smallint; safecall;
    procedure Set_AF_Garantie(pVal: Smallint); safecall;
    function Get_AF_Colisage: Double; safecall;
    procedure Set_AF_Colisage(pVal: Double); safecall;
    function Get_AF_QteMini: Double; safecall;
    procedure Set_AF_QteMini(pVal: Double); safecall;
    function Get_AF_ConvDiv: Double; safecall;
    procedure Set_AF_ConvDiv(pVal: Double); safecall;
    function Get_AF_CodeBarre: WideString; safecall;
    procedure Set_AF_CodeBarre(const pVal: WideString); safecall;
    function Get_Reference: WideString; safecall;
    procedure Set_Reference(const pVal: WideString); safecall;
    property Fournisseur: IBOFournisseur3 read Get_Fournisseur write Set_Fournisseur;
    property Unite: IBPUnite read Get_Unite write Set_Unite;
    property AF_Conversion: Double read Get_AF_Conversion write Set_AF_Conversion;
    property AF_DelaiAppro: Smallint read Get_AF_DelaiAppro write Set_AF_DelaiAppro;
    property AF_Garantie: Smallint read Get_AF_Garantie write Set_AF_Garantie;
    property AF_Colisage: Double read Get_AF_Colisage write Set_AF_Colisage;
    property AF_QteMini: Double read Get_AF_QteMini write Set_AF_QteMini;
    property AF_ConvDiv: Double read Get_AF_ConvDiv write Set_AF_ConvDiv;
    property AF_CodeBarre: WideString read Get_AF_CodeBarre write Set_AF_CodeBarre;
    property Reference: WideString read Get_Reference write Set_Reference;
  end;

// *********************************************************************//
// DispIntf :    IBOArticleTarifFournisseur3Disp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {0717F9A2-9759-4C9E-9F7B-1B4F14DEDCD9}
// *********************************************************************//
  IBOArticleTarifFournisseur3Disp = dispinterface
    ['{0717F9A2-9759-4C9E-9F7B-1B4F14DEDCD9}']
    property Fournisseur: IBOFournisseur3 dispid 121;
    property Unite: IBPUnite dispid 122;
    property AF_Conversion: Double dispid 123;
    property AF_DelaiAppro: Smallint dispid 124;
    property AF_Garantie: Smallint dispid 125;
    property AF_Colisage: Double dispid 126;
    property AF_QteMini: Double dispid 127;
    property AF_ConvDiv: Double dispid 128;
    property AF_CodeBarre: WideString dispid 129;
    property Reference: WideString dispid 130;
    property FactoryArticleTarifGamme: IBITypeObjectFactory readonly dispid 100;
    property FactoryArticleTarifQte: IBITypeObjectFactory readonly dispid 101;
    property Article: IBOArticle3 dispid 102;
    property Prix: Double dispid 103;
    property GammeRemise: IBPGamme dispid 104;
    property PrixDevise: Double dispid 105;
    property Devise: IBPDevise2 dispid 106;
    property Remise: IRemise2 dispid 107;
    property IsHorsRemise: WordBool dispid 108;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IBPGamme
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {A8D210EC-F571-4A8E-A8EA-3321FC63CEA4}
// *********************************************************************//
  IBPGamme = interface(IBIPersistObject)
    ['{A8D210EC-F571-4A8E-A8EA-3321FC63CEA4}']
    function Get_FactoryGamme: IBPGammeFactory; safecall;
    function Get_G_Intitule: WideString; safecall;
    procedure Set_G_Intitule(const pVal: WideString); safecall;
    function Get_G_Type: GammeType; safecall;
    procedure Set_G_Type(pVal: GammeType); safecall;
    function Get_Enums: IBIValuesInsertable; safecall;
    property FactoryGamme: IBPGammeFactory read Get_FactoryGamme;
    property G_Intitule: WideString read Get_G_Intitule write Set_G_Intitule;
    property G_Type: GammeType read Get_G_Type write Set_G_Type;
    property Enums: IBIValuesInsertable read Get_Enums;
  end;

// *********************************************************************//
// DispIntf :    IBPGammeDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {A8D210EC-F571-4A8E-A8EA-3321FC63CEA4}
// *********************************************************************//
  IBPGammeDisp = dispinterface
    ['{A8D210EC-F571-4A8E-A8EA-3321FC63CEA4}']
    property FactoryGamme: IBPGammeFactory readonly dispid 100;
    property G_Intitule: WideString dispid 101;
    property G_Type: GammeType dispid 102;
    property Enums: IBIValuesInsertable readonly dispid 103;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IBPGammeFactory
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {9B668A94-4D86-4F0E-B090-78BEE0D375C6}
// *********************************************************************//
  IBPGammeFactory = interface(IBITypeObjectFactory)
    ['{9B668A94-4D86-4F0E-B090-78BEE0D375C6}']
    function ExistIntitule(const sIntitule: WideString): WordBool; safecall;
    function ReadIntitule(const sIntitule: WideString): IBPGamme; safecall;
  end;

// *********************************************************************//
// DispIntf :    IBPGammeFactoryDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {9B668A94-4D86-4F0E-B090-78BEE0D375C6}
// *********************************************************************//
  IBPGammeFactoryDisp = dispinterface
    ['{9B668A94-4D86-4F0E-B090-78BEE0D375C6}']
    function ExistIntitule(const sIntitule: WideString): WordBool; dispid 10;
    function ReadIntitule(const sIntitule: WideString): IBPGamme; dispid 11;
    property List: IBICollection readonly dispid 1;
    function Create: IBIPersistObject; dispid 2;
    function Read(const pOID: IBIObjectID): IBIPersistObject; dispid 3;
    function _QuerySynchro(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                           TypeExtraction: SynchroExtractType): IBICollection; dispid 4;
    function _QuerySynchroRemoved(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                                  TypeExtraction: SynchroExtractType): IBICollectionDispatch; dispid 5;
    function ReadFrom(const pStream: IStream): IBIPersistObject; dispid 6;
    property ListForward: IBICollection readonly dispid 7;
    function QueryPredicate(const pPredicate: IDispatch; const sSortDescriptors: WideString): IBICollection; dispid 8;
  end;

// *********************************************************************//
// Interface :   IBPExpedition3
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {24446917-6395-47E7-AB91-3AC9EAF0EBCB}
// *********************************************************************//
  IBPExpedition3 = interface(IBIPersistObject)
    ['{24446917-6395-47E7-AB91-3AC9EAF0EBCB}']
    function Get_FactoryExpedition: IBPExpeditionFactory3; safecall;
    function Get_E_Intitule: WideString; safecall;
    procedure Set_E_Intitule(const pVal: WideString); safecall;
    function Get_E_Mode: WideString; safecall;
    procedure Set_E_Mode(const pVal: WideString); safecall;
    function Get_ArticleFraisExpedition: IBOArticle3; safecall;
    procedure Set_ArticleFraisExpedition(const pArticle: IBOArticle3); safecall;
    function Get_E_TypeFrais: DocumentFraisType; safecall;
    procedure Set_E_TypeFrais(pVal: DocumentFraisType); safecall;
    function Get_E_ValFrais: Double; safecall;
    procedure Set_E_ValFrais(pVal: Double); safecall;
    function Get_E_TypeFraisTTC: WordBool; safecall;
    procedure Set_E_TypeFraisTTC(pVal: WordBool); safecall;
    function Get_E_TypeFranco: DocumentFraisType; safecall;
    procedure Set_E_TypeFranco(pVal: DocumentFraisType); safecall;
    function Get_E_ValFranco: Double; safecall;
    procedure Set_E_ValFranco(pVal: Double); safecall;
    function Get_E_TypeFrancoTTC: WordBool; safecall;
    procedure Set_E_TypeFrancoTTC(pVal: WordBool); safecall;
    function Get_E_TypeCalcul: DocumentFraisCalculType; safecall;
    procedure Set_E_TypeCalcul(pVal: DocumentFraisCalculType); safecall;
    property FactoryExpedition: IBPExpeditionFactory3 read Get_FactoryExpedition;
    property E_Intitule: WideString read Get_E_Intitule write Set_E_Intitule;
    property E_Mode: WideString read Get_E_Mode write Set_E_Mode;
    property ArticleFraisExpedition: IBOArticle3 read Get_ArticleFraisExpedition write Set_ArticleFraisExpedition;
    property E_TypeFrais: DocumentFraisType read Get_E_TypeFrais write Set_E_TypeFrais;
    property E_ValFrais: Double read Get_E_ValFrais write Set_E_ValFrais;
    property E_TypeFraisTTC: WordBool read Get_E_TypeFraisTTC write Set_E_TypeFraisTTC;
    property E_TypeFranco: DocumentFraisType read Get_E_TypeFranco write Set_E_TypeFranco;
    property E_ValFranco: Double read Get_E_ValFranco write Set_E_ValFranco;
    property E_TypeFrancoTTC: WordBool read Get_E_TypeFrancoTTC write Set_E_TypeFrancoTTC;
    property E_TypeCalcul: DocumentFraisCalculType read Get_E_TypeCalcul write Set_E_TypeCalcul;
  end;

// *********************************************************************//
// DispIntf :    IBPExpedition3Disp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {24446917-6395-47E7-AB91-3AC9EAF0EBCB}
// *********************************************************************//
  IBPExpedition3Disp = dispinterface
    ['{24446917-6395-47E7-AB91-3AC9EAF0EBCB}']
    property FactoryExpedition: IBPExpeditionFactory3 readonly dispid 100;
    property E_Intitule: WideString dispid 101;
    property E_Mode: WideString dispid 102;
    property ArticleFraisExpedition: IBOArticle3 dispid 103;
    property E_TypeFrais: DocumentFraisType dispid 104;
    property E_ValFrais: Double dispid 105;
    property E_TypeFraisTTC: WordBool dispid 106;
    property E_TypeFranco: DocumentFraisType dispid 107;
    property E_ValFranco: Double dispid 108;
    property E_TypeFrancoTTC: WordBool dispid 109;
    property E_TypeCalcul: DocumentFraisCalculType dispid 110;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IBPExpeditionFactory3
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {06CAA04C-B790-4499-B2E6-D406B5436AC5}
// *********************************************************************//
  IBPExpeditionFactory3 = interface(IBITypeObjectFactory)
    ['{06CAA04C-B790-4499-B2E6-D406B5436AC5}']
    function ExistIntitule(const sIntitule: WideString): WordBool; safecall;
    function ReadIntitule(const sIntitule: WideString): IBPExpedition3; safecall;
  end;

// *********************************************************************//
// DispIntf :    IBPExpeditionFactory3Disp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {06CAA04C-B790-4499-B2E6-D406B5436AC5}
// *********************************************************************//
  IBPExpeditionFactory3Disp = dispinterface
    ['{06CAA04C-B790-4499-B2E6-D406B5436AC5}']
    function ExistIntitule(const sIntitule: WideString): WordBool; dispid 10;
    function ReadIntitule(const sIntitule: WideString): IBPExpedition3; dispid 11;
    property List: IBICollection readonly dispid 1;
    function Create: IBIPersistObject; dispid 2;
    function Read(const pOID: IBIObjectID): IBIPersistObject; dispid 3;
    function _QuerySynchro(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                           TypeExtraction: SynchroExtractType): IBICollection; dispid 4;
    function _QuerySynchroRemoved(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                                  TypeExtraction: SynchroExtractType): IBICollectionDispatch; dispid 5;
    function ReadFrom(const pStream: IStream): IBIPersistObject; dispid 6;
    property ListForward: IBICollection readonly dispid 7;
    function QueryPredicate(const pPredicate: IDispatch; const sSortDescriptors: WideString): IBICollection; dispid 8;
  end;

// *********************************************************************//
// Interface :   IBPConditionLivraison
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {1810CC00-BD69-4636-879F-6D8721659B26}
// *********************************************************************//
  IBPConditionLivraison = interface(IBIPersistObject)
    ['{1810CC00-BD69-4636-879F-6D8721659B26}']
    function Get_FactoryConditionLivraison: IBPConditionLivraisonFactory; safecall;
    function Get_C_Intitule: WideString; safecall;
    procedure Set_C_Intitule(const pVal: WideString); safecall;
    function Get_C_Mode: WideString; safecall;
    procedure Set_C_Mode(const pVal: WideString); safecall;
    property FactoryConditionLivraison: IBPConditionLivraisonFactory read Get_FactoryConditionLivraison;
    property C_Intitule: WideString read Get_C_Intitule write Set_C_Intitule;
    property C_Mode: WideString read Get_C_Mode write Set_C_Mode;
  end;

// *********************************************************************//
// DispIntf :    IBPConditionLivraisonDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {1810CC00-BD69-4636-879F-6D8721659B26}
// *********************************************************************//
  IBPConditionLivraisonDisp = dispinterface
    ['{1810CC00-BD69-4636-879F-6D8721659B26}']
    property FactoryConditionLivraison: IBPConditionLivraisonFactory readonly dispid 100;
    property C_Intitule: WideString dispid 101;
    property C_Mode: WideString dispid 102;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IBPConditionLivraisonFactory
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {332BD75D-11D5-4EAC-97D0-317C5A870C92}
// *********************************************************************//
  IBPConditionLivraisonFactory = interface(IBITypeObjectFactory)
    ['{332BD75D-11D5-4EAC-97D0-317C5A870C92}']
    function ExistIntitule(const sIntitule: WideString): WordBool; safecall;
    function ReadIntitule(const sIntitule: WideString): IBPConditionLivraison; safecall;
  end;

// *********************************************************************//
// DispIntf :    IBPConditionLivraisonFactoryDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {332BD75D-11D5-4EAC-97D0-317C5A870C92}
// *********************************************************************//
  IBPConditionLivraisonFactoryDisp = dispinterface
    ['{332BD75D-11D5-4EAC-97D0-317C5A870C92}']
    function ExistIntitule(const sIntitule: WideString): WordBool; dispid 10;
    function ReadIntitule(const sIntitule: WideString): IBPConditionLivraison; dispid 11;
    property List: IBICollection readonly dispid 1;
    function Create: IBIPersistObject; dispid 2;
    function Read(const pOID: IBIObjectID): IBIPersistObject; dispid 3;
    function _QuerySynchro(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                           TypeExtraction: SynchroExtractType): IBICollection; dispid 4;
    function _QuerySynchroRemoved(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                                  TypeExtraction: SynchroExtractType): IBICollectionDispatch; dispid 5;
    function ReadFrom(const pStream: IStream): IBIPersistObject; dispid 6;
    property ListForward: IBICollection readonly dispid 7;
    function QueryPredicate(const pPredicate: IDispatch; const sSortDescriptors: WideString): IBICollection; dispid 8;
  end;

// *********************************************************************//
// Interface :   IBOFournisseurTarifFamilleFactory
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {E475E6B5-3557-4AC7-ABAD-08D18EE1C85F}
// *********************************************************************//
  IBOFournisseurTarifFamilleFactory = interface(IBITypeObjectFactory)
    ['{E475E6B5-3557-4AC7-ABAD-08D18EE1C85F}']
    function ExistFamille(const pFamille: IBOFamille3): WordBool; safecall;
    function ReadFamille(const pFamille: IBOFamille3): IBOFamilleTarifFournisseur; safecall;
  end;

// *********************************************************************//
// DispIntf :    IBOFournisseurTarifFamilleFactoryDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {E475E6B5-3557-4AC7-ABAD-08D18EE1C85F}
// *********************************************************************//
  IBOFournisseurTarifFamilleFactoryDisp = dispinterface
    ['{E475E6B5-3557-4AC7-ABAD-08D18EE1C85F}']
    function ExistFamille(const pFamille: IBOFamille3): WordBool; dispid 10;
    function ReadFamille(const pFamille: IBOFamille3): IBOFamilleTarifFournisseur; dispid 11;
    property List: IBICollection readonly dispid 1;
    function Create: IBIPersistObject; dispid 2;
    function Read(const pOID: IBIObjectID): IBIPersistObject; dispid 3;
    function _QuerySynchro(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                           TypeExtraction: SynchroExtractType): IBICollection; dispid 4;
    function _QuerySynchroRemoved(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                                  TypeExtraction: SynchroExtractType): IBICollectionDispatch; dispid 5;
    function ReadFrom(const pStream: IStream): IBIPersistObject; dispid 6;
    property ListForward: IBICollection readonly dispid 7;
    function QueryPredicate(const pPredicate: IDispatch; const sSortDescriptors: WideString): IBICollection; dispid 8;
  end;

// *********************************************************************//
// Interface :   IBIFamilleTarif
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {37E54430-C444-4A17-BE0A-33BB1D7501E4}
// *********************************************************************//
  IBIFamilleTarif = interface(IBIPersistObject)
    ['{37E54430-C444-4A17-BE0A-33BB1D7501E4}']
    function Get_FactoryFamilleTarifQte: IBITypeObjectFactory; safecall;
    function Get_Famille: IBOFamille3; safecall;
    procedure Set_Famille(const pObject: IBOFamille3); safecall;
    function Get_GammeRemise: IBPGamme; safecall;
    procedure Set_GammeRemise(const pObject: IBPGamme); safecall;
    function Get_Devise: IBPDevise2; safecall;
    procedure Set_Devise(const pObject: IBPDevise2); safecall;
    function Get_Remise: IRemise2; safecall;
    procedure Set_Remise(const pObject: IRemise2); safecall;
    function Get_IsHorsRemise: WordBool; safecall;
    procedure Set_IsHorsRemise(pVal: WordBool); safecall;
    property FactoryFamilleTarifQte: IBITypeObjectFactory read Get_FactoryFamilleTarifQte;
    property Famille: IBOFamille3 read Get_Famille write Set_Famille;
    property GammeRemise: IBPGamme read Get_GammeRemise write Set_GammeRemise;
    property Devise: IBPDevise2 read Get_Devise write Set_Devise;
    property Remise: IRemise2 read Get_Remise write Set_Remise;
    property IsHorsRemise: WordBool read Get_IsHorsRemise write Set_IsHorsRemise;
  end;

// *********************************************************************//
// DispIntf :    IBIFamilleTarifDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {37E54430-C444-4A17-BE0A-33BB1D7501E4}
// *********************************************************************//
  IBIFamilleTarifDisp = dispinterface
    ['{37E54430-C444-4A17-BE0A-33BB1D7501E4}']
    property FactoryFamilleTarifQte: IBITypeObjectFactory readonly dispid 101;
    property Famille: IBOFamille3 dispid 102;
    property GammeRemise: IBPGamme dispid 104;
    property Devise: IBPDevise2 dispid 106;
    property Remise: IRemise2 dispid 107;
    property IsHorsRemise: WordBool dispid 108;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IBOFamilleTarifFournisseur
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {21B9B379-C74C-43C1-94A1-CA84B97CFC85}
// *********************************************************************//
  IBOFamilleTarifFournisseur = interface(IBIFamilleTarif)
    ['{21B9B379-C74C-43C1-94A1-CA84B97CFC85}']
    function Get_Fournisseur: IBOFournisseur3; safecall;
    procedure Set_Fournisseur(const pFournisseur: IBOFournisseur3); safecall;
    function Get_Unite: IBPUnite; safecall;
    procedure Set_Unite(const pUnite: IBPUnite); safecall;
    function Get_FF_Conversion: Double; safecall;
    procedure Set_FF_Conversion(pVal: Double); safecall;
    function Get_FF_DelaiAppro: Smallint; safecall;
    procedure Set_FF_DelaiAppro(pVal: Smallint); safecall;
    function Get_FF_Garantie: Smallint; safecall;
    procedure Set_FF_Garantie(pVal: Smallint); safecall;
    function Get_FF_Colisage: Double; safecall;
    procedure Set_FF_Colisage(pVal: Double); safecall;
    function Get_FF_QteMini: Double; safecall;
    procedure Set_FF_QteMini(pVal: Double); safecall;
    function Get_FF_ConvDiv: Double; safecall;
    procedure Set_FF_ConvDiv(pVal: Double); safecall;
    property Fournisseur: IBOFournisseur3 read Get_Fournisseur write Set_Fournisseur;
    property Unite: IBPUnite read Get_Unite write Set_Unite;
    property FF_Conversion: Double read Get_FF_Conversion write Set_FF_Conversion;
    property FF_DelaiAppro: Smallint read Get_FF_DelaiAppro write Set_FF_DelaiAppro;
    property FF_Garantie: Smallint read Get_FF_Garantie write Set_FF_Garantie;
    property FF_Colisage: Double read Get_FF_Colisage write Set_FF_Colisage;
    property FF_QteMini: Double read Get_FF_QteMini write Set_FF_QteMini;
    property FF_ConvDiv: Double read Get_FF_ConvDiv write Set_FF_ConvDiv;
  end;

// *********************************************************************//
// DispIntf :    IBOFamilleTarifFournisseurDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {21B9B379-C74C-43C1-94A1-CA84B97CFC85}
// *********************************************************************//
  IBOFamilleTarifFournisseurDisp = dispinterface
    ['{21B9B379-C74C-43C1-94A1-CA84B97CFC85}']
    property Fournisseur: IBOFournisseur3 dispid 121;
    property Unite: IBPUnite dispid 122;
    property FF_Conversion: Double dispid 123;
    property FF_DelaiAppro: Smallint dispid 124;
    property FF_Garantie: Smallint dispid 125;
    property FF_Colisage: Double dispid 126;
    property FF_QteMini: Double dispid 127;
    property FF_ConvDiv: Double dispid 128;
    property FactoryFamilleTarifQte: IBITypeObjectFactory readonly dispid 101;
    property Famille: IBOFamille3 dispid 102;
    property GammeRemise: IBPGamme dispid 104;
    property Devise: IBPDevise2 dispid 106;
    property Remise: IRemise2 dispid 107;
    property IsHorsRemise: WordBool dispid 108;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IBOArticleGlossaireFactory2
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {3D4D334C-0678-49C3-8387-C57A62BEAE19}
// *********************************************************************//
  IBOArticleGlossaireFactory2 = interface(IBITypeObjectFactory)
    ['{3D4D334C-0678-49C3-8387-C57A62BEAE19}']
    procedure AddGlossaire(const pGlossaire: IBOGlossaire2); safecall;
  end;

// *********************************************************************//
// DispIntf :    IBOArticleGlossaireFactory2Disp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {3D4D334C-0678-49C3-8387-C57A62BEAE19}
// *********************************************************************//
  IBOArticleGlossaireFactory2Disp = dispinterface
    ['{3D4D334C-0678-49C3-8387-C57A62BEAE19}']
    procedure AddGlossaire(const pGlossaire: IBOGlossaire2); dispid 10;
    property List: IBICollection readonly dispid 1;
    function Create: IBIPersistObject; dispid 2;
    function Read(const pOID: IBIObjectID): IBIPersistObject; dispid 3;
    function _QuerySynchro(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                           TypeExtraction: SynchroExtractType): IBICollection; dispid 4;
    function _QuerySynchroRemoved(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                                  TypeExtraction: SynchroExtractType): IBICollectionDispatch; dispid 5;
    function ReadFrom(const pStream: IStream): IBIPersistObject; dispid 6;
    property ListForward: IBICollection readonly dispid 7;
    function QueryPredicate(const pPredicate: IDispatch; const sSortDescriptors: WideString): IBICollection; dispid 8;
  end;

// *********************************************************************//
// Interface :   IBOGlossaire2
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {FF14BB30-6D4C-47D2-8580-1A4F453FB1B3}
// *********************************************************************//
  IBOGlossaire2 = interface(IBIPersistObject)
    ['{FF14BB30-6D4C-47D2-8580-1A4F453FB1B3}']
    function Get_FactoryGlossaire: IBOGlossaireFactory; safecall;
    function Get_GL_Domaine: GlossaireDomaineType; safecall;
    procedure Set_GL_Domaine(pVal: GlossaireDomaineType); safecall;
    function Get_GL_Intitule: WideString; safecall;
    procedure Set_GL_Intitule(const pVal: WideString); safecall;
    function Get_GL_Raccourci: WideString; safecall;
    procedure Set_GL_Raccourci(const pVal: WideString); safecall;
    function Get_GL_PeriodeDeb: TDateTime; safecall;
    procedure Set_GL_PeriodeDeb(pVal: TDateTime); safecall;
    function Get_GL_PeriodeFin: TDateTime; safecall;
    procedure Set_GL_PeriodeFin(pVal: TDateTime); safecall;
    function Get_GL_Text: WideString; safecall;
    procedure Set_GL_Text(const pVal: WideString); safecall;
    function Get_GL_Langue1: WideString; safecall;
    procedure Set_GL_Langue1(const pVal: WideString); safecall;
    function Get_GL_Langue2: WideString; safecall;
    procedure Set_GL_Langue2(const pVal: WideString); safecall;
    property FactoryGlossaire: IBOGlossaireFactory read Get_FactoryGlossaire;
    property GL_Domaine: GlossaireDomaineType read Get_GL_Domaine write Set_GL_Domaine;
    property GL_Intitule: WideString read Get_GL_Intitule write Set_GL_Intitule;
    property GL_Raccourci: WideString read Get_GL_Raccourci write Set_GL_Raccourci;
    property GL_PeriodeDeb: TDateTime read Get_GL_PeriodeDeb write Set_GL_PeriodeDeb;
    property GL_PeriodeFin: TDateTime read Get_GL_PeriodeFin write Set_GL_PeriodeFin;
    property GL_Text: WideString read Get_GL_Text write Set_GL_Text;
    property GL_Langue1: WideString read Get_GL_Langue1 write Set_GL_Langue1;
    property GL_Langue2: WideString read Get_GL_Langue2 write Set_GL_Langue2;
  end;

// *********************************************************************//
// DispIntf :    IBOGlossaire2Disp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {FF14BB30-6D4C-47D2-8580-1A4F453FB1B3}
// *********************************************************************//
  IBOGlossaire2Disp = dispinterface
    ['{FF14BB30-6D4C-47D2-8580-1A4F453FB1B3}']
    property FactoryGlossaire: IBOGlossaireFactory readonly dispid 120;
    property GL_Domaine: GlossaireDomaineType dispid 121;
    property GL_Intitule: WideString dispid 122;
    property GL_Raccourci: WideString dispid 123;
    property GL_PeriodeDeb: TDateTime dispid 124;
    property GL_PeriodeFin: TDateTime dispid 125;
    property GL_Text: WideString dispid 126;
    property GL_Langue1: WideString dispid 127;
    property GL_Langue2: WideString dispid 128;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IBOGlossaireFactory
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {D11C2E26-63C5-4C3E-A709-02C87420B297}
// *********************************************************************//
  IBOGlossaireFactory = interface(IBITypeObjectFactory)
    ['{D11C2E26-63C5-4C3E-A709-02C87420B297}']
    function ExistIntitule(GL_Domain: GlossaireDomaineType; const sNum: WideString): WordBool; safecall;
    function ReadIntitule(GL_Domain: GlossaireDomaineType; const sNum: WideString): IBOGlossaire2; safecall;
  end;

// *********************************************************************//
// DispIntf :    IBOGlossaireFactoryDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {D11C2E26-63C5-4C3E-A709-02C87420B297}
// *********************************************************************//
  IBOGlossaireFactoryDisp = dispinterface
    ['{D11C2E26-63C5-4C3E-A709-02C87420B297}']
    function ExistIntitule(GL_Domain: GlossaireDomaineType; const sNum: WideString): WordBool; dispid 10;
    function ReadIntitule(GL_Domain: GlossaireDomaineType; const sNum: WideString): IBOGlossaire2; dispid 11;
    property List: IBICollection readonly dispid 1;
    function Create: IBIPersistObject; dispid 2;
    function Read(const pOID: IBIObjectID): IBIPersistObject; dispid 3;
    function _QuerySynchro(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                           TypeExtraction: SynchroExtractType): IBICollection; dispid 4;
    function _QuerySynchroRemoved(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                                  TypeExtraction: SynchroExtractType): IBICollectionDispatch; dispid 5;
    function ReadFrom(const pStream: IStream): IBIPersistObject; dispid 6;
    property ListForward: IBICollection readonly dispid 7;
    function QueryPredicate(const pPredicate: IDispatch; const sSortDescriptors: WideString): IBICollection; dispid 8;
  end;

// *********************************************************************//
// Interface :   IBOArticleParamComptaFactory3
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {A4EABB4A-6694-424D-841F-F835740942AF}
// *********************************************************************//
  IBOArticleParamComptaFactory3 = interface(IBITypeObjectFactory)
    ['{A4EABB4A-6694-424D-841F-F835740942AF}']
    function QueryVente: IBICollection; safecall;
    function QueryAchat: IBICollection; safecall;
    function QueryStock: IBICollection; safecall;
    function ExistCategorieCompta(const pCatCompta: IBICategorieCompta): WordBool; safecall;
    function ReadCategorieCompta(const pCatCompta: IBICategorieCompta): IBOArticleParamCompta3; safecall;
  end;

// *********************************************************************//
// DispIntf :    IBOArticleParamComptaFactory3Disp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {A4EABB4A-6694-424D-841F-F835740942AF}
// *********************************************************************//
  IBOArticleParamComptaFactory3Disp = dispinterface
    ['{A4EABB4A-6694-424D-841F-F835740942AF}']
    function QueryVente: IBICollection; dispid 10;
    function QueryAchat: IBICollection; dispid 11;
    function QueryStock: IBICollection; dispid 12;
    function ExistCategorieCompta(const pCatCompta: IBICategorieCompta): WordBool; dispid 13;
    function ReadCategorieCompta(const pCatCompta: IBICategorieCompta): IBOArticleParamCompta3; dispid 14;
    property List: IBICollection readonly dispid 1;
    function Create: IBIPersistObject; dispid 2;
    function Read(const pOID: IBIObjectID): IBIPersistObject; dispid 3;
    function _QuerySynchro(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                           TypeExtraction: SynchroExtractType): IBICollection; dispid 4;
    function _QuerySynchroRemoved(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                                  TypeExtraction: SynchroExtractType): IBICollectionDispatch; dispid 5;
    function ReadFrom(const pStream: IStream): IBIPersistObject; dispid 6;
    property ListForward: IBICollection readonly dispid 7;
    function QueryPredicate(const pPredicate: IDispatch; const sSortDescriptors: WideString): IBICollection; dispid 8;
  end;

// *********************************************************************//
// Interface :   IBIParamCompta3
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {265553D6-F316-44CF-9A43-B03A3FC11227}
// *********************************************************************//
  IBIParamCompta3 = interface(IBIPersistObject)
    ['{265553D6-F316-44CF-9A43-B03A3FC11227}']
    function Get_CategorieCompta: IBICategorieCompta; safecall;
    procedure Set_CategorieCompta(const pObject: IBICategorieCompta); safecall;
    function Get_CompteG: IBOCompteG3; safecall;
    procedure Set_CompteG(const pObject: IBOCompteG3); safecall;
    function Get_CompteA: IBOCompteA3; safecall;
    procedure Set_CompteA(const pObject: IBOCompteA3); safecall;
    function Get_Taxe(sElt: Smallint): IBOTaxe3; safecall;
    procedure Set_Taxe(sElt: Smallint; const pObject: IBOTaxe3); safecall;
    function Get_OldTaxe(sElt: Smallint): IBOTaxe3; safecall;
    procedure Set_OldTaxe(sElt: Smallint; const pObject: IBOTaxe3); safecall;
    function Get_DateApplication(sElt: Smallint): TDateTime; safecall;
    procedure Set_DateApplication(sElt: Smallint; pVal: TDateTime); safecall;
    function Get_TaxeDateApplication(sElt: Smallint; dVal: TDateTime): IBOTaxe3; safecall;
    property CategorieCompta: IBICategorieCompta read Get_CategorieCompta write Set_CategorieCompta;
    property CompteG: IBOCompteG3 read Get_CompteG write Set_CompteG;
    property CompteA: IBOCompteA3 read Get_CompteA write Set_CompteA;
    property Taxe[sElt: Smallint]: IBOTaxe3 read Get_Taxe write Set_Taxe;
    property OldTaxe[sElt: Smallint]: IBOTaxe3 read Get_OldTaxe write Set_OldTaxe;
    property DateApplication[sElt: Smallint]: TDateTime read Get_DateApplication write Set_DateApplication;
    property TaxeDateApplication[sElt: Smallint; dVal: TDateTime]: IBOTaxe3 read Get_TaxeDateApplication;
  end;

// *********************************************************************//
// DispIntf :    IBIParamCompta3Disp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {265553D6-F316-44CF-9A43-B03A3FC11227}
// *********************************************************************//
  IBIParamCompta3Disp = dispinterface
    ['{265553D6-F316-44CF-9A43-B03A3FC11227}']
    property CategorieCompta: IBICategorieCompta dispid 100;
    property CompteG: IBOCompteG3 dispid 101;
    property CompteA: IBOCompteA3 dispid 102;
    property Taxe[sElt: Smallint]: IBOTaxe3 dispid 103;
    property OldTaxe[sElt: Smallint]: IBOTaxe3 dispid 104;
    property DateApplication[sElt: Smallint]: TDateTime dispid 105;
    property TaxeDateApplication[sElt: Smallint; dVal: TDateTime]: IBOTaxe3 readonly dispid 106;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IBOArticleParamCompta3
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {AE8D2D0A-1E07-4E40-9C49-6749CE488E40}
// *********************************************************************//
  IBOArticleParamCompta3 = interface(IBIParamCompta3)
    ['{AE8D2D0A-1E07-4E40-9C49-6749CE488E40}']
    function Get_FactoryArticleParamCompta: IBOArticleParamComptaFactory3; safecall;
    function Get_Article: IBOArticle3; safecall;
    property FactoryArticleParamCompta: IBOArticleParamComptaFactory3 read Get_FactoryArticleParamCompta;
    property Article: IBOArticle3 read Get_Article;
  end;

// *********************************************************************//
// DispIntf :    IBOArticleParamCompta3Disp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {AE8D2D0A-1E07-4E40-9C49-6749CE488E40}
// *********************************************************************//
  IBOArticleParamCompta3Disp = dispinterface
    ['{AE8D2D0A-1E07-4E40-9C49-6749CE488E40}']
    property FactoryArticleParamCompta: IBOArticleParamComptaFactory3 readonly dispid 110;
    property Article: IBOArticle3 readonly dispid 111;
    property CategorieCompta: IBICategorieCompta dispid 100;
    property CompteG: IBOCompteG3 dispid 101;
    property CompteA: IBOCompteA3 dispid 102;
    property Taxe[sElt: Smallint]: IBOTaxe3 dispid 103;
    property OldTaxe[sElt: Smallint]: IBOTaxe3 dispid 104;
    property DateApplication[sElt: Smallint]: TDateTime dispid 105;
    property TaxeDateApplication[sElt: Smallint; dVal: TDateTime]: IBOTaxe3 readonly dispid 106;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IBOArticleDepotFactory
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {D3A62EEB-4AD8-405B-81B8-1E405B2A3388}
// *********************************************************************//
  IBOArticleDepotFactory = interface(IBITypeObjectFactory)
    ['{D3A62EEB-4AD8-405B-81B8-1E405B2A3388}']
    function ExistDepot(const pDepot: IBODepot3): WordBool; safecall;
    function ReadDepot(const pDepot: IBODepot3): IBOArticleDepot3; safecall;
  end;

// *********************************************************************//
// DispIntf :    IBOArticleDepotFactoryDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {D3A62EEB-4AD8-405B-81B8-1E405B2A3388}
// *********************************************************************//
  IBOArticleDepotFactoryDisp = dispinterface
    ['{D3A62EEB-4AD8-405B-81B8-1E405B2A3388}']
    function ExistDepot(const pDepot: IBODepot3): WordBool; dispid 10;
    function ReadDepot(const pDepot: IBODepot3): IBOArticleDepot3; dispid 11;
    property List: IBICollection readonly dispid 1;
    function Create: IBIPersistObject; dispid 2;
    function Read(const pOID: IBIObjectID): IBIPersistObject; dispid 3;
    function _QuerySynchro(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                           TypeExtraction: SynchroExtractType): IBICollection; dispid 4;
    function _QuerySynchroRemoved(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                                  TypeExtraction: SynchroExtractType): IBICollectionDispatch; dispid 5;
    function ReadFrom(const pStream: IStream): IBIPersistObject; dispid 6;
    property ListForward: IBICollection readonly dispid 7;
    function QueryPredicate(const pPredicate: IDispatch; const sSortDescriptors: WideString): IBICollection; dispid 8;
  end;

// *********************************************************************//
// Interface :   IBIArticleStock3
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {7CE6D0E2-0CD6-4E2E-8FE7-6AC17BF6C22B}
// *********************************************************************//
  IBIArticleStock3 = interface(IBIPersistObject)
    ['{7CE6D0E2-0CD6-4E2E-8FE7-6AC17BF6C22B}']
    function Get_Article: IBOArticle3; safecall;
    function Get_Montant: Double; safecall;
    function StockValeur(DateStock: TDateTime): Double; safecall;
    function StockQte(DateStock: TDateTime): Double; safecall;
    function StockReel: Double; safecall;
    function StockCommande: Double; safecall;
    function StockReserve: Double; safecall;
    function StockATerme: Double; safecall;
    function StockPrepare: Double; safecall;
    function StockReserveContremarque: Double; safecall;
    function StockCommandeContremarque: Double; safecall;
    function StockDispo: Double; safecall;
    function StockAControler: Double; safecall;
    function Get_EmplacementPrincipal: IBODepotEmplacement; safecall;
    procedure Set_EmplacementPrincipal(const pObj: IBODepotEmplacement); safecall;
    function Get_EmplacementControle: IBODepotEmplacement; safecall;
    procedure Set_EmplacementControle(const pObj: IBODepotEmplacement); safecall;
    function Get_FactoryArticleStockEmpl: IBIArticleStockEmplFactory; safecall;
    function Get_CMUP: Double; safecall;
    property Article: IBOArticle3 read Get_Article;
    property Montant: Double read Get_Montant;
    property EmplacementPrincipal: IBODepotEmplacement read Get_EmplacementPrincipal write Set_EmplacementPrincipal;
    property EmplacementControle: IBODepotEmplacement read Get_EmplacementControle write Set_EmplacementControle;
    property FactoryArticleStockEmpl: IBIArticleStockEmplFactory read Get_FactoryArticleStockEmpl;
    property CMUP: Double read Get_CMUP;
  end;

// *********************************************************************//
// DispIntf :    IBIArticleStock3Disp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {7CE6D0E2-0CD6-4E2E-8FE7-6AC17BF6C22B}
// *********************************************************************//
  IBIArticleStock3Disp = dispinterface
    ['{7CE6D0E2-0CD6-4E2E-8FE7-6AC17BF6C22B}']
    property Article: IBOArticle3 readonly dispid 100;
    property Montant: Double readonly dispid 102;
    function StockValeur(DateStock: TDateTime): Double; dispid 104;
    function StockQte(DateStock: TDateTime): Double; dispid 105;
    function StockReel: Double; dispid 106;
    function StockCommande: Double; dispid 107;
    function StockReserve: Double; dispid 108;
    function StockATerme: Double; dispid 109;
    function StockPrepare: Double; dispid 110;
    function StockReserveContremarque: Double; dispid 111;
    function StockCommandeContremarque: Double; dispid 112;
    function StockDispo: Double; dispid 113;
    function StockAControler: Double; dispid 114;
    property EmplacementPrincipal: IBODepotEmplacement dispid 115;
    property EmplacementControle: IBODepotEmplacement dispid 116;
    property FactoryArticleStockEmpl: IBIArticleStockEmplFactory readonly dispid 117;
    property CMUP: Double readonly dispid 118;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IBOArticleDepot3
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {2F5884FD-3A5E-4729-B00D-E801A252F938}
// *********************************************************************//
  IBOArticleDepot3 = interface(IBIArticleStock3)
    ['{2F5884FD-3A5E-4729-B00D-E801A252F938}']
    function Get_FactoryArticleDepot: IBITypeObjectFactory; safecall;
    function Get_FactoryArticleDepotGamme: IBOArticleDepotGammeFactory; safecall;
    function Get_Depot: IBODepot3; safecall;
    procedure Set_Depot(const pObject: IBODepot3); safecall;
    function Get_AS_QteMini: Double; safecall;
    procedure Set_AS_QteMini(pVal: Double); safecall;
    function Get_AS_QteMaxi: Double; safecall;
    procedure Set_AS_QteMaxi(pVal: Double); safecall;
    function Get_AS_Emplacement: WideString; safecall;
    procedure Set_AS_Emplacement(const pVal: WideString); safecall;
    function Get_FactoryArticleDepotLot: IBOArticleDepotLotFactory; safecall;
    property FactoryArticleDepot: IBITypeObjectFactory read Get_FactoryArticleDepot;
    property FactoryArticleDepotGamme: IBOArticleDepotGammeFactory read Get_FactoryArticleDepotGamme;
    property Depot: IBODepot3 read Get_Depot write Set_Depot;
    property AS_QteMini: Double read Get_AS_QteMini write Set_AS_QteMini;
    property AS_QteMaxi: Double read Get_AS_QteMaxi write Set_AS_QteMaxi;
    property AS_Emplacement: WideString read Get_AS_Emplacement write Set_AS_Emplacement;
    property FactoryArticleDepotLot: IBOArticleDepotLotFactory read Get_FactoryArticleDepotLot;
  end;

// *********************************************************************//
// DispIntf :    IBOArticleDepot3Disp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {2F5884FD-3A5E-4729-B00D-E801A252F938}
// *********************************************************************//
  IBOArticleDepot3Disp = dispinterface
    ['{2F5884FD-3A5E-4729-B00D-E801A252F938}']
    property FactoryArticleDepot: IBITypeObjectFactory readonly dispid 120;
    property FactoryArticleDepotGamme: IBOArticleDepotGammeFactory readonly dispid 121;
    property Depot: IBODepot3 dispid 122;
    property AS_QteMini: Double dispid 123;
    property AS_QteMaxi: Double dispid 124;
    property AS_Emplacement: WideString dispid 125;
    property FactoryArticleDepotLot: IBOArticleDepotLotFactory readonly dispid 126;
    property Article: IBOArticle3 readonly dispid 100;
    property Montant: Double readonly dispid 102;
    function StockValeur(DateStock: TDateTime): Double; dispid 104;
    function StockQte(DateStock: TDateTime): Double; dispid 105;
    function StockReel: Double; dispid 106;
    function StockCommande: Double; dispid 107;
    function StockReserve: Double; dispid 108;
    function StockATerme: Double; dispid 109;
    function StockPrepare: Double; dispid 110;
    function StockReserveContremarque: Double; dispid 111;
    function StockCommandeContremarque: Double; dispid 112;
    function StockDispo: Double; dispid 113;
    function StockAControler: Double; dispid 114;
    property EmplacementPrincipal: IBODepotEmplacement dispid 115;
    property EmplacementControle: IBODepotEmplacement dispid 116;
    property FactoryArticleStockEmpl: IBIArticleStockEmplFactory readonly dispid 117;
    property CMUP: Double readonly dispid 118;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IBIArticleStockEmplFactory
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {15BEC968-6889-4E2D-99E7-6F16FCE810C2}
// *********************************************************************//
  IBIArticleStockEmplFactory = interface(IBITypeObjectFactory)
    ['{15BEC968-6889-4E2D-99E7-6F16FCE810C2}']
    function ExistEmplacement(const pDepotEmpl: IBODepotEmplacement): WordBool; safecall;
    function ReadEmplacement(const pDepotEmpl: IBODepotEmplacement): IBIArticleStockEmpl; safecall;
  end;

// *********************************************************************//
// DispIntf :    IBIArticleStockEmplFactoryDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {15BEC968-6889-4E2D-99E7-6F16FCE810C2}
// *********************************************************************//
  IBIArticleStockEmplFactoryDisp = dispinterface
    ['{15BEC968-6889-4E2D-99E7-6F16FCE810C2}']
    function ExistEmplacement(const pDepotEmpl: IBODepotEmplacement): WordBool; dispid 10;
    function ReadEmplacement(const pDepotEmpl: IBODepotEmplacement): IBIArticleStockEmpl; dispid 11;
    property List: IBICollection readonly dispid 1;
    function Create: IBIPersistObject; dispid 2;
    function Read(const pOID: IBIObjectID): IBIPersistObject; dispid 3;
    function _QuerySynchro(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                           TypeExtraction: SynchroExtractType): IBICollection; dispid 4;
    function _QuerySynchroRemoved(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                                  TypeExtraction: SynchroExtractType): IBICollectionDispatch; dispid 5;
    function ReadFrom(const pStream: IStream): IBIPersistObject; dispid 6;
    property ListForward: IBICollection readonly dispid 7;
    function QueryPredicate(const pPredicate: IDispatch; const sSortDescriptors: WideString): IBICollection; dispid 8;
  end;

// *********************************************************************//
// Interface :   IBIArticleStockEmpl
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {CC7A5597-5EBF-4F1E-9297-1AD17CEA6469}
// *********************************************************************//
  IBIArticleStockEmpl = interface(IBIPersistObject)
    ['{CC7A5597-5EBF-4F1E-9297-1AD17CEA6469}']
    function Get_ArticleStock: IBIArticleStock3; safecall;
    function Get_Emplacement: IBODepotEmplacement; safecall;
    function StockQte(DateStock: TDateTime): Double; safecall;
    function StockReel: Double; safecall;
    function StockATerme: Double; safecall;
    function StockPrepare: Double; safecall;
    function StockDispo: Double; safecall;
    property ArticleStock: IBIArticleStock3 read Get_ArticleStock;
    property Emplacement: IBODepotEmplacement read Get_Emplacement;
  end;

// *********************************************************************//
// DispIntf :    IBIArticleStockEmplDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {CC7A5597-5EBF-4F1E-9297-1AD17CEA6469}
// *********************************************************************//
  IBIArticleStockEmplDisp = dispinterface
    ['{CC7A5597-5EBF-4F1E-9297-1AD17CEA6469}']
    property ArticleStock: IBIArticleStock3 readonly dispid 100;
    property Emplacement: IBODepotEmplacement readonly dispid 101;
    function StockQte(DateStock: TDateTime): Double; dispid 102;
    function StockReel: Double; dispid 103;
    function StockATerme: Double; dispid 104;
    function StockPrepare: Double; dispid 105;
    function StockDispo: Double; dispid 106;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IBOArticleDepotGammeFactory
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {42612014-B818-4C79-8148-6B5865839427}
// *********************************************************************//
  IBOArticleDepotGammeFactory = interface(IBITypeObjectFactory)
    ['{42612014-B818-4C79-8148-6B5865839427}']
    function ExistMonoGamme(const pEnum: IBOArticleGammeEnum3): WordBool; safecall;
    function ReadMonoGamme(const pEnum: IBOArticleGammeEnum3): IBOArticleDepotGamme3; safecall;
    function ExistDoubleGamme(const pEnum1: IBOArticleGammeEnum3; const pEnum2: IBOArticleGammeEnum3): WordBool; safecall;
    function ReadDoubleGamme(const pEnum1: IBOArticleGammeEnum3; const pEnum2: IBOArticleGammeEnum3): IBOArticleDepotGamme3; safecall;
  end;

// *********************************************************************//
// DispIntf :    IBOArticleDepotGammeFactoryDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {42612014-B818-4C79-8148-6B5865839427}
// *********************************************************************//
  IBOArticleDepotGammeFactoryDisp = dispinterface
    ['{42612014-B818-4C79-8148-6B5865839427}']
    function ExistMonoGamme(const pEnum: IBOArticleGammeEnum3): WordBool; dispid 10;
    function ReadMonoGamme(const pEnum: IBOArticleGammeEnum3): IBOArticleDepotGamme3; dispid 11;
    function ExistDoubleGamme(const pEnum1: IBOArticleGammeEnum3; const pEnum2: IBOArticleGammeEnum3): WordBool; dispid 12;
    function ReadDoubleGamme(const pEnum1: IBOArticleGammeEnum3; const pEnum2: IBOArticleGammeEnum3): IBOArticleDepotGamme3; dispid 13;
    property List: IBICollection readonly dispid 1;
    function Create: IBIPersistObject; dispid 2;
    function Read(const pOID: IBIObjectID): IBIPersistObject; dispid 3;
    function _QuerySynchro(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                           TypeExtraction: SynchroExtractType): IBICollection; dispid 4;
    function _QuerySynchroRemoved(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                                  TypeExtraction: SynchroExtractType): IBICollectionDispatch; dispid 5;
    function ReadFrom(const pStream: IStream): IBIPersistObject; dispid 6;
    property ListForward: IBICollection readonly dispid 7;
    function QueryPredicate(const pPredicate: IDispatch; const sSortDescriptors: WideString): IBICollection; dispid 8;
  end;

// *********************************************************************//
// Interface :   IBOArticleGammeEnum3
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {7B4F4FD4-510E-41E2-AB40-8675514BD227}
// *********************************************************************//
  IBOArticleGammeEnum3 = interface(IBIPersistObject)
    ['{7B4F4FD4-510E-41E2-AB40-8675514BD227}']
    function Get_FactoryArticleGammeEnum: IBITypeObjectFactory; safecall;
    function Get_FactoryArticleGammeEnumRef: IBITypeObjectFactory; safecall;
    function Get_Article: IBOArticle3; safecall;
    function Get_EG_Enumere: WideString; safecall;
    procedure Set_EG_Enumere(const pVal: WideString); safecall;
    function Get_Compteur: Integer; safecall;
    property FactoryArticleGammeEnum: IBITypeObjectFactory read Get_FactoryArticleGammeEnum;
    property FactoryArticleGammeEnumRef: IBITypeObjectFactory read Get_FactoryArticleGammeEnumRef;
    property Article: IBOArticle3 read Get_Article;
    property EG_Enumere: WideString read Get_EG_Enumere write Set_EG_Enumere;
    property Compteur: Integer read Get_Compteur;
  end;

// *********************************************************************//
// DispIntf :    IBOArticleGammeEnum3Disp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {7B4F4FD4-510E-41E2-AB40-8675514BD227}
// *********************************************************************//
  IBOArticleGammeEnum3Disp = dispinterface
    ['{7B4F4FD4-510E-41E2-AB40-8675514BD227}']
    property FactoryArticleGammeEnum: IBITypeObjectFactory readonly dispid 100;
    property FactoryArticleGammeEnumRef: IBITypeObjectFactory readonly dispid 101;
    property Article: IBOArticle3 readonly dispid 102;
    property EG_Enumere: WideString dispid 103;
    property Compteur: Integer readonly dispid 104;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IBOArticleDepotGamme3
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {B45B336F-48B6-4667-BB61-4073BAB2396B}
// *********************************************************************//
  IBOArticleDepotGamme3 = interface(IBIArticleStock3)
    ['{B45B336F-48B6-4667-BB61-4073BAB2396B}']
    function Get_FactoryArticleDepotGamme: IBITypeObjectFactory; safecall;
    function Get_ArticleDepot: IBOArticleDepot3; safecall;
    function Get_ArticleGammeEnum1: IBOArticleGammeEnum3; safecall;
    procedure Set_ArticleGammeEnum1(const pArticleGammeEnum: IBOArticleGammeEnum3); safecall;
    function Get_ArticleGammeEnum2: IBOArticleGammeEnum3; safecall;
    procedure Set_ArticleGammeEnum2(const pArticleGammeEnum: IBOArticleGammeEnum3); safecall;
    function Get_GS_QteMini: Double; safecall;
    procedure Set_GS_QteMini(pVal: Double); safecall;
    function Get_GS_QteMaxi: Double; safecall;
    procedure Set_GS_QteMaxi(pVal: Double); safecall;
    function Get_GS_Emplacement: WideString; safecall;
    procedure Set_GS_Emplacement(const pVal: WideString); safecall;
    property FactoryArticleDepotGamme: IBITypeObjectFactory read Get_FactoryArticleDepotGamme;
    property ArticleDepot: IBOArticleDepot3 read Get_ArticleDepot;
    property ArticleGammeEnum1: IBOArticleGammeEnum3 read Get_ArticleGammeEnum1 write Set_ArticleGammeEnum1;
    property ArticleGammeEnum2: IBOArticleGammeEnum3 read Get_ArticleGammeEnum2 write Set_ArticleGammeEnum2;
    property GS_QteMini: Double read Get_GS_QteMini write Set_GS_QteMini;
    property GS_QteMaxi: Double read Get_GS_QteMaxi write Set_GS_QteMaxi;
    property GS_Emplacement: WideString read Get_GS_Emplacement write Set_GS_Emplacement;
  end;

// *********************************************************************//
// DispIntf :    IBOArticleDepotGamme3Disp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {B45B336F-48B6-4667-BB61-4073BAB2396B}
// *********************************************************************//
  IBOArticleDepotGamme3Disp = dispinterface
    ['{B45B336F-48B6-4667-BB61-4073BAB2396B}']
    property FactoryArticleDepotGamme: IBITypeObjectFactory readonly dispid 120;
    property ArticleDepot: IBOArticleDepot3 readonly dispid 121;
    property ArticleGammeEnum1: IBOArticleGammeEnum3 dispid 122;
    property ArticleGammeEnum2: IBOArticleGammeEnum3 dispid 123;
    property GS_QteMini: Double dispid 124;
    property GS_QteMaxi: Double dispid 125;
    property GS_Emplacement: WideString dispid 126;
    property Article: IBOArticle3 readonly dispid 100;
    property Montant: Double readonly dispid 102;
    function StockValeur(DateStock: TDateTime): Double; dispid 104;
    function StockQte(DateStock: TDateTime): Double; dispid 105;
    function StockReel: Double; dispid 106;
    function StockCommande: Double; dispid 107;
    function StockReserve: Double; dispid 108;
    function StockATerme: Double; dispid 109;
    function StockPrepare: Double; dispid 110;
    function StockReserveContremarque: Double; dispid 111;
    function StockCommandeContremarque: Double; dispid 112;
    function StockDispo: Double; dispid 113;
    function StockAControler: Double; dispid 114;
    property EmplacementPrincipal: IBODepotEmplacement dispid 115;
    property EmplacementControle: IBODepotEmplacement dispid 116;
    property FactoryArticleStockEmpl: IBIArticleStockEmplFactory readonly dispid 117;
    property CMUP: Double readonly dispid 118;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IBOArticleDepotLotFactory
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {7D19DF66-979C-4941-A44C-1781EF1169D6}
// *********************************************************************//
  IBOArticleDepotLotFactory = interface(IBITypeObjectFactory)
    ['{7D19DF66-979C-4941-A44C-1781EF1169D6}']
    function ExistNoSerie(const sNoSerie: WideString): WordBool; safecall;
    function ReadNoSerie(const sNoSerie: WideString): IBOArticleDepotLot; safecall;
    function QueryNonEpuise: IBICollection; safecall;
    function Get_InfoLibreFields: IBIFields; safecall;
    function Get_NextNoSerie(const sNumSerie: WideString): WideString; safecall;
    function ExistNoSerieEmpl(const sNoSerie: WideString; const pEmpl: IBODepotEmplacement): WordBool; safecall;
    function ReadNoSerieEmpl(const sNoSerie: WideString; const pEmpl: IBODepotEmplacement): IBOArticleDepotLot; safecall;
    function QueryNoSerie(const sNoSerie: WideString): IBICollection; safecall;
    function QueryNonEpuiseNoSerie(const sNoSerie: WideString): IBICollection; safecall;
    property InfoLibreFields: IBIFields read Get_InfoLibreFields;
    property NextNoSerie[const sNumSerie: WideString]: WideString read Get_NextNoSerie;
  end;

// *********************************************************************//
// DispIntf :    IBOArticleDepotLotFactoryDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {7D19DF66-979C-4941-A44C-1781EF1169D6}
// *********************************************************************//
  IBOArticleDepotLotFactoryDisp = dispinterface
    ['{7D19DF66-979C-4941-A44C-1781EF1169D6}']
    function ExistNoSerie(const sNoSerie: WideString): WordBool; dispid 10;
    function ReadNoSerie(const sNoSerie: WideString): IBOArticleDepotLot; dispid 11;
    function QueryNonEpuise: IBICollection; dispid 12;
    property InfoLibreFields: IBIFields readonly dispid 13;
    property NextNoSerie[const sNumSerie: WideString]: WideString readonly dispid 14;
    function ExistNoSerieEmpl(const sNoSerie: WideString; const pEmpl: IBODepotEmplacement): WordBool; dispid 15;
    function ReadNoSerieEmpl(const sNoSerie: WideString; const pEmpl: IBODepotEmplacement): IBOArticleDepotLot; dispid 16;
    function QueryNoSerie(const sNoSerie: WideString): IBICollection; dispid 17;
    function QueryNonEpuiseNoSerie(const sNoSerie: WideString): IBICollection; dispid 18;
    property List: IBICollection readonly dispid 1;
    function Create: IBIPersistObject; dispid 2;
    function Read(const pOID: IBIObjectID): IBIPersistObject; dispid 3;
    function _QuerySynchro(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                           TypeExtraction: SynchroExtractType): IBICollection; dispid 4;
    function _QuerySynchroRemoved(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                                  TypeExtraction: SynchroExtractType): IBICollectionDispatch; dispid 5;
    function ReadFrom(const pStream: IStream): IBIPersistObject; dispid 6;
    property ListForward: IBICollection readonly dispid 7;
    function QueryPredicate(const pPredicate: IDispatch; const sSortDescriptors: WideString): IBICollection; dispid 8;
  end;

// *********************************************************************//
// Interface :   IBILot
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {8F0A81DA-61F3-4E59-A517-711854C64094}
// *********************************************************************//
  IBILot = interface(IBIPersistObject)
    ['{8F0A81DA-61F3-4E59-A517-711854C64094}']
    function Get_ArticleDepot: IBIArticleStock3; safecall;
    function StockReel: Double; safecall;
    function StockATerme: Double; safecall;
    function Get_IsEpuised: WordBool; safecall;
    function Get_LigneEntree: IBODocumentLigne3; safecall;
    function Get_IsEntamed: WordBool; safecall;
    property ArticleDepot: IBIArticleStock3 read Get_ArticleDepot;
    property IsEpuised: WordBool read Get_IsEpuised;
    property LigneEntree: IBODocumentLigne3 read Get_LigneEntree;
    property IsEntamed: WordBool read Get_IsEntamed;
  end;

// *********************************************************************//
// DispIntf :    IBILotDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {8F0A81DA-61F3-4E59-A517-711854C64094}
// *********************************************************************//
  IBILotDisp = dispinterface
    ['{8F0A81DA-61F3-4E59-A517-711854C64094}']
    property ArticleDepot: IBIArticleStock3 readonly dispid 101;
    function StockReel: Double; dispid 102;
    function StockATerme: Double; dispid 103;
    property IsEpuised: WordBool readonly dispid 104;
    property LigneEntree: IBODocumentLigne3 readonly dispid 105;
    property IsEntamed: WordBool readonly dispid 106;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IBOArticleDepotLot
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {0FBEB56F-ECB1-4620-9121-7A9A19E6CA66}
// *********************************************************************//
  IBOArticleDepotLot = interface(IBILot)
    ['{0FBEB56F-ECB1-4620-9121-7A9A19E6CA66}']
    function Get_FactoryArticleDepotLot: IBOArticleDepotLotFactory; safecall;
    function Get_QteReserved: Double; safecall;
    function Get_NoSerie: WideString; safecall;
    procedure Set_NoSerie(const pVal: WideString); safecall;
    function Get_DatePeremption: TDateTime; safecall;
    procedure Set_DatePeremption(pVal: TDateTime); safecall;
    function Get_DateFabrication: TDateTime; safecall;
    procedure Set_DateFabrication(pVal: TDateTime); safecall;
    function Get_Complement: WideString; safecall;
    procedure Set_Complement(const pVal: WideString); safecall;
    function Get_InfoLibre: IBIValues; safecall;
    property FactoryArticleDepotLot: IBOArticleDepotLotFactory read Get_FactoryArticleDepotLot;
    property QteReserved: Double read Get_QteReserved;
    property NoSerie: WideString read Get_NoSerie write Set_NoSerie;
    property DatePeremption: TDateTime read Get_DatePeremption write Set_DatePeremption;
    property DateFabrication: TDateTime read Get_DateFabrication write Set_DateFabrication;
    property Complement: WideString read Get_Complement write Set_Complement;
    property InfoLibre: IBIValues read Get_InfoLibre;
  end;

// *********************************************************************//
// DispIntf :    IBOArticleDepotLotDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {0FBEB56F-ECB1-4620-9121-7A9A19E6CA66}
// *********************************************************************//
  IBOArticleDepotLotDisp = dispinterface
    ['{0FBEB56F-ECB1-4620-9121-7A9A19E6CA66}']
    property FactoryArticleDepotLot: IBOArticleDepotLotFactory readonly dispid 150;
    property QteReserved: Double readonly dispid 151;
    property NoSerie: WideString dispid 152;
    property DatePeremption: TDateTime dispid 153;
    property DateFabrication: TDateTime dispid 154;
    property Complement: WideString dispid 155;
    property InfoLibre: IBIValues readonly dispid 156;
    property ArticleDepot: IBIArticleStock3 readonly dispid 101;
    function StockReel: Double; dispid 102;
    function StockATerme: Double; dispid 103;
    property IsEpuised: WordBool readonly dispid 104;
    property LigneEntree: IBODocumentLigne3 readonly dispid 105;
    property IsEntamed: WordBool readonly dispid 106;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IBOArticleGammeEnumFactory
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {D6B92633-1367-4753-BFD4-EC95C08D985D}
// *********************************************************************//
  IBOArticleGammeEnumFactory = interface(IBITypeObjectFactory)
    ['{D6B92633-1367-4753-BFD4-EC95C08D985D}']
    function ExistEnumere(const sEnum: WideString): WordBool; safecall;
    function ReadEnumere(const sEnum: WideString): IBOArticleGammeEnum3; safecall;
    function ExistCompteur(AG_No: Integer): WordBool; safecall;
    function ReadCompteur(AG_No: Integer): IBOArticleGammeEnum3; safecall;
  end;

// *********************************************************************//
// DispIntf :    IBOArticleGammeEnumFactoryDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {D6B92633-1367-4753-BFD4-EC95C08D985D}
// *********************************************************************//
  IBOArticleGammeEnumFactoryDisp = dispinterface
    ['{D6B92633-1367-4753-BFD4-EC95C08D985D}']
    function ExistEnumere(const sEnum: WideString): WordBool; dispid 10;
    function ReadEnumere(const sEnum: WideString): IBOArticleGammeEnum3; dispid 11;
    function ExistCompteur(AG_No: Integer): WordBool; dispid 12;
    function ReadCompteur(AG_No: Integer): IBOArticleGammeEnum3; dispid 13;
    property List: IBICollection readonly dispid 1;
    function Create: IBIPersistObject; dispid 2;
    function Read(const pOID: IBIObjectID): IBIPersistObject; dispid 3;
    function _QuerySynchro(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                           TypeExtraction: SynchroExtractType): IBICollection; dispid 4;
    function _QuerySynchroRemoved(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                                  TypeExtraction: SynchroExtractType): IBICollectionDispatch; dispid 5;
    function ReadFrom(const pStream: IStream): IBIPersistObject; dispid 6;
    property ListForward: IBICollection readonly dispid 7;
    function QueryPredicate(const pPredicate: IDispatch; const sSortDescriptors: WideString): IBICollection; dispid 8;
  end;

// *********************************************************************//
// Interface :   IBOArticleCondFactory
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {2A9626FB-6EB3-4F95-82BB-307CD430E9E9}
// *********************************************************************//
  IBOArticleCondFactory = interface(IBITypeObjectFactory)
    ['{2A9626FB-6EB3-4F95-82BB-307CD430E9E9}']
    function ExistEnumere(const sEnum: WideString; dQte: Double): WordBool; safecall;
    function ReadEnumere(const sEnum: WideString; dQte: Double): IBOArticleCond3; safecall;
    function ExistReference(const sReference: WideString): WordBool; safecall;
    function ReadReference(const sReference: WideString): IBOArticleCond3; safecall;
    function ExistPrincipal: WordBool; safecall;
    function ReadPrincipal: IBOArticleCond3; safecall;
  end;

// *********************************************************************//
// DispIntf :    IBOArticleCondFactoryDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {2A9626FB-6EB3-4F95-82BB-307CD430E9E9}
// *********************************************************************//
  IBOArticleCondFactoryDisp = dispinterface
    ['{2A9626FB-6EB3-4F95-82BB-307CD430E9E9}']
    function ExistEnumere(const sEnum: WideString; dQte: Double): WordBool; dispid 10;
    function ReadEnumere(const sEnum: WideString; dQte: Double): IBOArticleCond3; dispid 11;
    function ExistReference(const sReference: WideString): WordBool; dispid 12;
    function ReadReference(const sReference: WideString): IBOArticleCond3; dispid 13;
    function ExistPrincipal: WordBool; dispid 14;
    function ReadPrincipal: IBOArticleCond3; dispid 15;
    property List: IBICollection readonly dispid 1;
    function Create: IBIPersistObject; dispid 2;
    function Read(const pOID: IBIObjectID): IBIPersistObject; dispid 3;
    function _QuerySynchro(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                           TypeExtraction: SynchroExtractType): IBICollection; dispid 4;
    function _QuerySynchroRemoved(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                                  TypeExtraction: SynchroExtractType): IBICollectionDispatch; dispid 5;
    function ReadFrom(const pStream: IStream): IBIPersistObject; dispid 6;
    property ListForward: IBICollection readonly dispid 7;
    function QueryPredicate(const pPredicate: IDispatch; const sSortDescriptors: WideString): IBICollection; dispid 8;
  end;

// *********************************************************************//
// Interface :   IBOArticleCond3
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {35A9D616-54B7-4A6B-A996-0E49C819430C}
// *********************************************************************//
  IBOArticleCond3 = interface(IBIPersistObject)
    ['{35A9D616-54B7-4A6B-A996-0E49C819430C}']
    function Get_FactoryArticleCond: IBOArticleCondFactory; safecall;
    function Get_Article: IBOArticle3; safecall;
    function Get_EC_Enumere: WideString; safecall;
    procedure Set_EC_Enumere(const pVal: WideString); safecall;
    function Get_EC_Quantite: Double; safecall;
    procedure Set_EC_Quantite(pVal: Double); safecall;
    function Get_CO_Ref: WideString; safecall;
    procedure Set_CO_Ref(const pVal: WideString); safecall;
    function Get_CO_CodeBarre: WideString; safecall;
    procedure Set_CO_CodeBarre(const pVal: WideString); safecall;
    function Get_CO_EdiCode: WideString; safecall;
    procedure Set_CO_EdiCode(const pVal: WideString); safecall;
    property FactoryArticleCond: IBOArticleCondFactory read Get_FactoryArticleCond;
    property Article: IBOArticle3 read Get_Article;
    property EC_Enumere: WideString read Get_EC_Enumere write Set_EC_Enumere;
    property EC_Quantite: Double read Get_EC_Quantite write Set_EC_Quantite;
    property CO_Ref: WideString read Get_CO_Ref write Set_CO_Ref;
    property CO_CodeBarre: WideString read Get_CO_CodeBarre write Set_CO_CodeBarre;
    property CO_EdiCode: WideString read Get_CO_EdiCode write Set_CO_EdiCode;
  end;

// *********************************************************************//
// DispIntf :    IBOArticleCond3Disp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {35A9D616-54B7-4A6B-A996-0E49C819430C}
// *********************************************************************//
  IBOArticleCond3Disp = dispinterface
    ['{35A9D616-54B7-4A6B-A996-0E49C819430C}']
    property FactoryArticleCond: IBOArticleCondFactory readonly dispid 100;
    property Article: IBOArticle3 readonly dispid 101;
    property EC_Enumere: WideString dispid 102;
    property EC_Quantite: Double dispid 103;
    property CO_Ref: WideString dispid 104;
    property CO_CodeBarre: WideString dispid 105;
    property CO_EdiCode: WideString dispid 106;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IBPConditionnement
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {E88BF6B0-535D-4FF8-948C-31D1F061072D}
// *********************************************************************//
  IBPConditionnement = interface(IBIPersistObject)
    ['{E88BF6B0-535D-4FF8-948C-31D1F061072D}']
    function Get_FactoryConditionnement: IBPConditionnementFactory; safecall;
    function Get_Intitule: WideString; safecall;
    procedure Set_Intitule(const pVal: WideString); safecall;
    function Get_FactoryConditionnementEnum: IBITypeObjectFactory; safecall;
    property FactoryConditionnement: IBPConditionnementFactory read Get_FactoryConditionnement;
    property Intitule: WideString read Get_Intitule write Set_Intitule;
    property FactoryConditionnementEnum: IBITypeObjectFactory read Get_FactoryConditionnementEnum;
  end;

// *********************************************************************//
// DispIntf :    IBPConditionnementDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {E88BF6B0-535D-4FF8-948C-31D1F061072D}
// *********************************************************************//
  IBPConditionnementDisp = dispinterface
    ['{E88BF6B0-535D-4FF8-948C-31D1F061072D}']
    property FactoryConditionnement: IBPConditionnementFactory readonly dispid 100;
    property Intitule: WideString dispid 101;
    property FactoryConditionnementEnum: IBITypeObjectFactory readonly dispid 102;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IBPConditionnementFactory
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {33DE9AD6-4F3F-4781-84C6-9821A23A3D5E}
// *********************************************************************//
  IBPConditionnementFactory = interface(IBITypeObjectFactory)
    ['{33DE9AD6-4F3F-4781-84C6-9821A23A3D5E}']
    function ExistIntitule(const sIntitule: WideString): WordBool; safecall;
    function ReadIntitule(const sIntitule: WideString): IBPConditionnement; safecall;
  end;

// *********************************************************************//
// DispIntf :    IBPConditionnementFactoryDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {33DE9AD6-4F3F-4781-84C6-9821A23A3D5E}
// *********************************************************************//
  IBPConditionnementFactoryDisp = dispinterface
    ['{33DE9AD6-4F3F-4781-84C6-9821A23A3D5E}']
    function ExistIntitule(const sIntitule: WideString): WordBool; dispid 10;
    function ReadIntitule(const sIntitule: WideString): IBPConditionnement; dispid 11;
    property List: IBICollection readonly dispid 1;
    function Create: IBIPersistObject; dispid 2;
    function Read(const pOID: IBIObjectID): IBIPersistObject; dispid 3;
    function _QuerySynchro(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                           TypeExtraction: SynchroExtractType): IBICollection; dispid 4;
    function _QuerySynchroRemoved(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                                  TypeExtraction: SynchroExtractType): IBICollectionDispatch; dispid 5;
    function ReadFrom(const pStream: IStream): IBIPersistObject; dispid 6;
    property ListForward: IBICollection readonly dispid 7;
    function QueryPredicate(const pPredicate: IDispatch; const sSortDescriptors: WideString): IBICollection; dispid 8;
  end;

// *********************************************************************//
// Interface :   IBPCategorieTarif
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {6C6002FD-4AD8-46AF-A50E-4D177150BDDA}
// *********************************************************************//
  IBPCategorieTarif = interface(IBIPersistObject)
    ['{6C6002FD-4AD8-46AF-A50E-4D177150BDDA}']
    function Get_FactoryCategorieTarif: IBPCategorieTarifFactory; safecall;
    function Get_CT_Intitule: WideString; safecall;
    procedure Set_CT_Intitule(const pVal: WideString); safecall;
    function Get_CT_PrixTTC: WordBool; safecall;
    procedure Set_CT_PrixTTC(pVal: WordBool); safecall;
    property FactoryCategorieTarif: IBPCategorieTarifFactory read Get_FactoryCategorieTarif;
    property CT_Intitule: WideString read Get_CT_Intitule write Set_CT_Intitule;
    property CT_PrixTTC: WordBool read Get_CT_PrixTTC write Set_CT_PrixTTC;
  end;

// *********************************************************************//
// DispIntf :    IBPCategorieTarifDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {6C6002FD-4AD8-46AF-A50E-4D177150BDDA}
// *********************************************************************//
  IBPCategorieTarifDisp = dispinterface
    ['{6C6002FD-4AD8-46AF-A50E-4D177150BDDA}']
    property FactoryCategorieTarif: IBPCategorieTarifFactory readonly dispid 100;
    property CT_Intitule: WideString dispid 101;
    property CT_PrixTTC: WordBool dispid 102;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IBPCategorieTarifFactory
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {F1EC90B6-225B-4702-9A4C-73F56F0E13A7}
// *********************************************************************//
  IBPCategorieTarifFactory = interface(IBITypeObjectFactory)
    ['{F1EC90B6-225B-4702-9A4C-73F56F0E13A7}']
    function ExistIntitule(const sIntitule: WideString): WordBool; safecall;
    function ReadIntitule(const sIntitule: WideString): IBPCategorieTarif; safecall;
  end;

// *********************************************************************//
// DispIntf :    IBPCategorieTarifFactoryDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {F1EC90B6-225B-4702-9A4C-73F56F0E13A7}
// *********************************************************************//
  IBPCategorieTarifFactoryDisp = dispinterface
    ['{F1EC90B6-225B-4702-9A4C-73F56F0E13A7}']
    function ExistIntitule(const sIntitule: WideString): WordBool; dispid 10;
    function ReadIntitule(const sIntitule: WideString): IBPCategorieTarif; dispid 11;
    property List: IBICollection readonly dispid 1;
    function Create: IBIPersistObject; dispid 2;
    function Read(const pOID: IBIObjectID): IBIPersistObject; dispid 3;
    function _QuerySynchro(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                           TypeExtraction: SynchroExtractType): IBICollection; dispid 4;
    function _QuerySynchroRemoved(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                                  TypeExtraction: SynchroExtractType): IBICollectionDispatch; dispid 5;
    function ReadFrom(const pStream: IStream): IBIPersistObject; dispid 6;
    property ListForward: IBICollection readonly dispid 7;
    function QueryPredicate(const pPredicate: IDispatch; const sSortDescriptors: WideString): IBICollection; dispid 8;
  end;

// *********************************************************************//
// Interface :   IBOClient3
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {00BD75EA-A70E-4D59-AA1F-4B7ED4CD130B}
// *********************************************************************//
  IBOClient3 = interface(IBOTiersPart3)
    ['{00BD75EA-A70E-4D59-AA1F-4B7ED4CD130B}']
    function Get_FactoryClient: IBOClientFactory3; safecall;
    function Get_FactoryClientTarif: IBOClientTarifFactory3; safecall;
    function Get_FactoryClientLivraison: IBITypeObjectFactory; safecall;
    function Get_CT_Assurance: Double; safecall;
    procedure Set_CT_Assurance(pVal: Double); safecall;
    function Get_CodeRisque: IBPCodeRisque; safecall;
    procedure Set_CodeRisque(const pCodeRisque: IBPCodeRisque); safecall;
    function Get_CatTarif: IBPCategorieTarif; safecall;
    procedure Set_CatTarif(const pCategorieTarif: IBPCategorieTarif); safecall;
    function Get_Periodicite: IBPPeriodicite; safecall;
    procedure Set_Periodicite(const pPeriodicite: IBPPeriodicite); safecall;
    function Get_CT_Facture: Smallint; safecall;
    procedure Set_CT_Facture(pVal: Smallint); safecall;
    function Get_CT_BLFact: WordBool; safecall;
    procedure Set_CT_BLFact(pVal: WordBool); safecall;
    function Get_CT_ControlEnc: ClientEncoursCtrlType; safecall;
    procedure Set_CT_ControlEnc(pVal: ClientEncoursCtrlType); safecall;
    function Get_LivraisonPrincipal: IBOClientLivraison3; safecall;
    procedure Set_LivraisonPrincipal(const pClientLivraison: IBOClientLivraison3); safecall;
    function RisqueReel: Double; safecall;
    function Get_CT_PrioriteLivr: Smallint; safecall;
    procedure Set_CT_PrioriteLivr(pVal: Smallint); safecall;
    function Get_CT_LivrPartielle: WordBool; safecall;
    procedure Set_CT_LivrPartielle(pVal: WordBool); safecall;
    function TotalMarge(dDebut: TDateTime; dFin: TDateTime; TypeDe: DocumentType; 
                        TypeA: DocumentType): Double; safecall;
    function Get_CentraleAchat: IBOClient3; safecall;
    procedure Set_CentraleAchat(const pClient: IBOClient3); safecall;
    function Get_FactoryClientTarifFamille: IBOClientTarifFamilleFactory; safecall;
    function Get_CT_DelaiTransport: Smallint; safecall;
    procedure Set_CT_DelaiTransport(pVal: Smallint); safecall;
    function Get_FactoryProspect: IBOProspectFactory; safecall;
    function Get_FactoryClientProspect: IBOClientProspectFactory; safecall;
    function Get_CT_Prospect: WordBool; safecall;
    function Get_FactoryInfoComplement: IBOInfoComplementClientFactory; safecall;
    property FactoryClient: IBOClientFactory3 read Get_FactoryClient;
    property FactoryClientTarif: IBOClientTarifFactory3 read Get_FactoryClientTarif;
    property FactoryClientLivraison: IBITypeObjectFactory read Get_FactoryClientLivraison;
    property CT_Assurance: Double read Get_CT_Assurance write Set_CT_Assurance;
    property CodeRisque: IBPCodeRisque read Get_CodeRisque write Set_CodeRisque;
    property CatTarif: IBPCategorieTarif read Get_CatTarif write Set_CatTarif;
    property Periodicite: IBPPeriodicite read Get_Periodicite write Set_Periodicite;
    property CT_Facture: Smallint read Get_CT_Facture write Set_CT_Facture;
    property CT_BLFact: WordBool read Get_CT_BLFact write Set_CT_BLFact;
    property CT_ControlEnc: ClientEncoursCtrlType read Get_CT_ControlEnc write Set_CT_ControlEnc;
    property LivraisonPrincipal: IBOClientLivraison3 read Get_LivraisonPrincipal write Set_LivraisonPrincipal;
    property CT_PrioriteLivr: Smallint read Get_CT_PrioriteLivr write Set_CT_PrioriteLivr;
    property CT_LivrPartielle: WordBool read Get_CT_LivrPartielle write Set_CT_LivrPartielle;
    property CentraleAchat: IBOClient3 read Get_CentraleAchat write Set_CentraleAchat;
    property FactoryClientTarifFamille: IBOClientTarifFamilleFactory read Get_FactoryClientTarifFamille;
    property CT_DelaiTransport: Smallint read Get_CT_DelaiTransport write Set_CT_DelaiTransport;
    property FactoryProspect: IBOProspectFactory read Get_FactoryProspect;
    property FactoryClientProspect: IBOClientProspectFactory read Get_FactoryClientProspect;
    property CT_Prospect: WordBool read Get_CT_Prospect;
    property FactoryInfoComplement: IBOInfoComplementClientFactory read Get_FactoryInfoComplement;
  end;

// *********************************************************************//
// DispIntf :    IBOClient3Disp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {00BD75EA-A70E-4D59-AA1F-4B7ED4CD130B}
// *********************************************************************//
  IBOClient3Disp = dispinterface
    ['{00BD75EA-A70E-4D59-AA1F-4B7ED4CD130B}']
    property FactoryClient: IBOClientFactory3 readonly dispid 299;
    property FactoryClientTarif: IBOClientTarifFactory3 readonly dispid 300;
    property FactoryClientLivraison: IBITypeObjectFactory readonly dispid 301;
    property CT_Assurance: Double dispid 302;
    property CodeRisque: IBPCodeRisque dispid 303;
    property CatTarif: IBPCategorieTarif dispid 305;
    property Periodicite: IBPPeriodicite dispid 307;
    property CT_Facture: Smallint dispid 308;
    property CT_BLFact: WordBool dispid 309;
    property CT_ControlEnc: ClientEncoursCtrlType dispid 310;
    property LivraisonPrincipal: IBOClientLivraison3 dispid 311;
    function RisqueReel: Double; dispid 312;
    property CT_PrioriteLivr: Smallint dispid 313;
    property CT_LivrPartielle: WordBool dispid 314;
    function TotalMarge(dDebut: TDateTime; dFin: TDateTime; TypeDe: DocumentType; 
                        TypeA: DocumentType): Double; dispid 228;
    property CentraleAchat: IBOClient3 dispid 315;
    property FactoryClientTarifFamille: IBOClientTarifFamilleFactory readonly dispid 316;
    property CT_DelaiTransport: Smallint dispid 317;
    property FactoryProspect: IBOProspectFactory readonly dispid 320;
    property FactoryClientProspect: IBOClientProspectFactory readonly dispid 318;
    property CT_Prospect: WordBool readonly dispid 319;
    property FactoryInfoComplement: IBOInfoComplementClientFactory readonly dispid 321;
    property TiersPayeur: IBOTiersPart3 dispid 241;
    property CT_Encours: Double dispid 200;
    property CategorieCompta: IBICategorieCompta dispid 201;
    property Depot: IBODepot3 dispid 202;
    property CompteA: IBOCompteA3 dispid 203;
    property CT_Coface: WideString dispid 204;
    property CT_Surveillance: WordBool dispid 205;
    property CT_SvDateCreate: TDateTime readonly dispid 206;
    property CT_SvFormeJuri: WideString readonly dispid 207;
    property CT_SvEffectif: WideString readonly dispid 208;
    property CT_SvCA: Double readonly dispid 209;
    property CT_SvResultat: Double readonly dispid 210;
    property CT_SvIncident: Smallint readonly dispid 211;
    property CT_SvDateIncid: TDateTime readonly dispid 212;
    property CT_SvPrivil: Smallint readonly dispid 213;
    property CT_SvRegul: WideString readonly dispid 214;
    property CT_SvCotation: WideString readonly dispid 215;
    property CT_SvDateMaj: TDateTime readonly dispid 216;
    property CT_SvObjetMaj: WideString readonly dispid 217;
    property CT_SvDateBilan: TDateTime readonly dispid 218;
    property CT_SvNbMoisBilan: Smallint readonly dispid 219;
    function CA_HTBrut(dDebut: TDateTime; dFin: TDateTime; TypeDe: DocumentType; TypeA: DocumentType): Double; dispid 220;
    function CA_HTNet(dDebut: TDateTime; dFin: TDateTime; TypeDe: DocumentType; TypeA: DocumentType): Double; dispid 221;
    function CA_TTC(dDebut: TDateTime; dFin: TDateTime; TypeDe: DocumentType; TypeA: DocumentType): Double; dispid 222;
    function TotalPrixRevient(dDebut: TDateTime; dFin: TDateTime; TypeDe: DocumentType; 
                              TypeA: DocumentType): Double; dispid 223;
    function TotalQtes(dDebut: TDateTime; dFin: TDateTime; TypeDe: DocumentType; TypeA: DocumentType): Double; dispid 224;
    function TotalQtesColises(dDebut: TDateTime; dFin: TDateTime; TypeDe: DocumentType; 
                              TypeA: DocumentType): Double; dispid 225;
    function TotalPoidsNet(dDebut: TDateTime; dFin: TDateTime; TypeDe: DocumentType; 
                           TypeA: DocumentType): Double; dispid 226;
    function TotalPoidsBrut(dDebut: TDateTime; dFin: TDateTime; TypeDe: DocumentType; 
                            TypeA: DocumentType): Double; dispid 227;
    function TauxRemiseMoyen(dDebut: TDateTime; dFin: TDateTime; TypeDe: DocumentType; 
                             TypeA: DocumentType): Double; dispid 229;
    function SoldeEchus1: Double; dispid 230;
    function SoldeEchus2: Double; dispid 231;
    function SoldeEchus3: Double; dispid 232;
    function SoldeNonEchus: Double; dispid 233;
    function DepassementEncours: Double; dispid 234;
    function DepassementEncours2: Double; dispid 235;
    function Portefeuille: Double; dispid 236;
    function PortefeuilleCommande: Double; dispid 237;
    function TotalReglement: Double; dispid 238;
    function DerniereFacture: TDateTime; dispid 239;
    function DernierReglement: TDateTime; dispid 240;
    property TauxRemise: Double dispid 242;
    property TauxEscompte: Double dispid 243;
    property TauxReleve: Double dispid 244;
    property TauxRFA: Double dispid 245;
    property CT_DateFermetureDebut: TDateTime dispid 246;
    property CT_DateFermetureFin: TDateTime dispid 247;
    property Representant: IBOCollaborateur dispid 304;
    property FactoryTiers: IBOTiersFactory3 readonly dispid 100;
    property FactoryTiersBanque: IBITypeObjectFactory readonly dispid 101;
    property FactoryTiersReglement: IBITypeObjectFactory readonly dispid 102;
    property FactoryTiersContact: IBITypeObjectFactory readonly dispid 103;
    property FactoryTiersCompteG: IBOTiersCompteGFactory3 readonly dispid 104;
    property FactoryTiersMedia: IBITypeObjectFactory readonly dispid 105;
    property CT_Num: WideString dispid 106;
    property CT_Intitule: WideString dispid 107;
    property CT_Type: TiersType readonly dispid 108;
    property CompteGPrinc: IBOCompteG3 dispid 109;
    property CT_Qualite: WideString dispid 110;
    property CT_Classement: WideString dispid 111;
    property CT_Contact: WideString dispid 112;
    property Adresse: IAdresse dispid 113;
    property CT_Raccourci: WideString dispid 119;
    property BanquePrincipale: IBOTiersBanque3 dispid 120;
    property Devise: IBPDevise2 dispid 121;
    property CT_Ape: WideString dispid 122;
    property CT_Identifiant: WideString dispid 123;
    property CT_Siret: WideString dispid 124;
    property CT_Stat[sElt: Smallint]: WideString dispid 125;
    property CT_Commentaire: WideString dispid 126;
    property CT_Langue: LangueType dispid 128;
    property CT_DateCreate: TDateTime readonly dispid 132;
    property CT_SautLigne: Smallint dispid 133;
    property CT_SautPage: WordBool dispid 134;
    property CT_Lettrage: WordBool dispid 135;
    property CT_ValidEch: WordBool dispid 136;
    property CT_Sommeil: WordBool dispid 137;
    property CT_NotRappel: WordBool dispid 138;
    property Telecom: ITelecom dispid 139;
    function MvtDebit(const pCompteG: IBOCompteG3; const pJournal: IBOJournal3; dDebut: TDateTime; 
                      dFin: TDateTime): Double; dispid 143;
    function MvtCredit(const pCompteG: IBOCompteG3; const pJournal: IBOJournal3; dDebut: TDateTime; 
                       dFin: TDateTime): Double; dispid 144;
    function MvtSolde(const pCompteG: IBOCompteG3; const pJournal: IBOJournal3; dDebut: TDateTime; 
                      dFin: TDateTime): Double; dispid 145;
    function MvtDevDebit(const pCompteG: IBOCompteG3; const pJournal: IBOJournal3; 
                         dDebut: TDateTime; dFin: TDateTime): Double; dispid 146;
    function MvtDevCredit(const pCompteG: IBOCompteG3; const pJournal: IBOJournal3; 
                          dDebut: TDateTime; dFin: TDateTime): Double; dispid 147;
    function MvtDevSolde(const pCompteG: IBOCompteG3; const pJournal: IBOJournal3; 
                         dDebut: TDateTime; dFin: TDateTime): Double; dispid 148;
    function Solde: Double; dispid 149;
    property CompteAIFRS: IBOCompteA3 dispid 150;
    property InfoLibre: IBIValues readonly dispid 151;
    property ModeleReglement: IBOModeleReglement dispid 152;
    property CT_EdiCodeType: EdiCodeType dispid 153;
    property CT_EdiCode: WideString dispid 154;
    property CT_Facebook: WideString dispid 155;
    property CT_LinkedIn: WideString dispid 156;
    property ExclureMarketing: WordBool dispid 157;
    property ActivateGDPR: WordBool readonly dispid 158;
    procedure CleanPersonalData; dispid 159;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IBOClientFactory3
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {6BB5E17E-287A-4B68-A365-EF1FAA811446}
// *********************************************************************//
  IBOClientFactory3 = interface(IBITypeObjectFactory)
    ['{6BB5E17E-287A-4B68-A365-EF1FAA811446}']
    function Get_ListOrderClassement: IBICollection; safecall;
    function ExistNumero(const sNum: WideString): WordBool; safecall;
    function ReadNumero(const sNum: WideString): IBOClient3; safecall;
    property ListOrderClassement: IBICollection read Get_ListOrderClassement;
  end;

// *********************************************************************//
// DispIntf :    IBOClientFactory3Disp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {6BB5E17E-287A-4B68-A365-EF1FAA811446}
// *********************************************************************//
  IBOClientFactory3Disp = dispinterface
    ['{6BB5E17E-287A-4B68-A365-EF1FAA811446}']
    property ListOrderClassement: IBICollection readonly dispid 10;
    function ExistNumero(const sNum: WideString): WordBool; dispid 11;
    function ReadNumero(const sNum: WideString): IBOClient3; dispid 12;
    property List: IBICollection readonly dispid 1;
    function Create: IBIPersistObject; dispid 2;
    function Read(const pOID: IBIObjectID): IBIPersistObject; dispid 3;
    function _QuerySynchro(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                           TypeExtraction: SynchroExtractType): IBICollection; dispid 4;
    function _QuerySynchroRemoved(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                                  TypeExtraction: SynchroExtractType): IBICollectionDispatch; dispid 5;
    function ReadFrom(const pStream: IStream): IBIPersistObject; dispid 6;
    property ListForward: IBICollection readonly dispid 7;
    function QueryPredicate(const pPredicate: IDispatch; const sSortDescriptors: WideString): IBICollection; dispid 8;
  end;

// *********************************************************************//
// Interface :   IBOClientTarifFactory3
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {FA817628-4F1D-4710-AA2E-47449BA5FED8}
// *********************************************************************//
  IBOClientTarifFactory3 = interface(IBITypeObjectFactory)
    ['{FA817628-4F1D-4710-AA2E-47449BA5FED8}']
    function ExistArticle(const pArticle: IBOArticle3): WordBool; safecall;
    function ReadArticle(const pArticle: IBOArticle3): IBOArticleTarifClient3; safecall;
  end;

// *********************************************************************//
// DispIntf :    IBOClientTarifFactory3Disp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {FA817628-4F1D-4710-AA2E-47449BA5FED8}
// *********************************************************************//
  IBOClientTarifFactory3Disp = dispinterface
    ['{FA817628-4F1D-4710-AA2E-47449BA5FED8}']
    function ExistArticle(const pArticle: IBOArticle3): WordBool; dispid 10;
    function ReadArticle(const pArticle: IBOArticle3): IBOArticleTarifClient3; dispid 11;
    property List: IBICollection readonly dispid 1;
    function Create: IBIPersistObject; dispid 2;
    function Read(const pOID: IBIObjectID): IBIPersistObject; dispid 3;
    function _QuerySynchro(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                           TypeExtraction: SynchroExtractType): IBICollection; dispid 4;
    function _QuerySynchroRemoved(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                                  TypeExtraction: SynchroExtractType): IBICollectionDispatch; dispid 5;
    function ReadFrom(const pStream: IStream): IBIPersistObject; dispid 6;
    property ListForward: IBICollection readonly dispid 7;
    function QueryPredicate(const pPredicate: IDispatch; const sSortDescriptors: WideString): IBICollection; dispid 8;
  end;

// *********************************************************************//
// Interface :   IBIArticleTarifVente3
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {C1B065CF-2E61-43EA-B73B-EF938F600ADC}
// *********************************************************************//
  IBIArticleTarifVente3 = interface(IBIArticleTarif3)
    ['{C1B065CF-2E61-43EA-B73B-EF938F600ADC}']
    function Get_FactoryArticleTarifCond: IBITypeObjectFactory; safecall;
    function Get_Coefficient: Double; safecall;
    procedure Set_Coefficient(pVal: Double); safecall;
    function Get_PrixTTC: WordBool; safecall;
    procedure Set_PrixTTC(pVal: WordBool); safecall;
    function Get_Arrondi: IBPArrondi; safecall;
    procedure Set_Arrondi(const pObject: IBPArrondi); safecall;
    function Get_Calcul: WordBool; safecall;
    procedure Set_Calcul(pVal: WordBool); safecall;
    property FactoryArticleTarifCond: IBITypeObjectFactory read Get_FactoryArticleTarifCond;
    property Coefficient: Double read Get_Coefficient write Set_Coefficient;
    property PrixTTC: WordBool read Get_PrixTTC write Set_PrixTTC;
    property Arrondi: IBPArrondi read Get_Arrondi write Set_Arrondi;
    property Calcul: WordBool read Get_Calcul write Set_Calcul;
  end;

// *********************************************************************//
// DispIntf :    IBIArticleTarifVente3Disp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {C1B065CF-2E61-43EA-B73B-EF938F600ADC}
// *********************************************************************//
  IBIArticleTarifVente3Disp = dispinterface
    ['{C1B065CF-2E61-43EA-B73B-EF938F600ADC}']
    property FactoryArticleTarifCond: IBITypeObjectFactory readonly dispid 120;
    property Coefficient: Double dispid 121;
    property PrixTTC: WordBool dispid 122;
    property Arrondi: IBPArrondi dispid 123;
    property Calcul: WordBool dispid 124;
    property FactoryArticleTarifGamme: IBITypeObjectFactory readonly dispid 100;
    property FactoryArticleTarifQte: IBITypeObjectFactory readonly dispid 101;
    property Article: IBOArticle3 dispid 102;
    property Prix: Double dispid 103;
    property GammeRemise: IBPGamme dispid 104;
    property PrixDevise: Double dispid 105;
    property Devise: IBPDevise2 dispid 106;
    property Remise: IRemise2 dispid 107;
    property IsHorsRemise: WordBool dispid 108;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IBOArticleTarifClient3
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {59A52885-1DC4-4C57-85CD-E141875617F7}
// *********************************************************************//
  IBOArticleTarifClient3 = interface(IBIArticleTarifVente3)
    ['{59A52885-1DC4-4C57-85CD-E141875617F7}']
    function Get_Client: IBOClient3; safecall;
    procedure Set_Client(const pClient: IBOClient3); safecall;
    function Get_Reference: WideString; safecall;
    procedure Set_Reference(const pVal: WideString); safecall;
    property Client: IBOClient3 read Get_Client write Set_Client;
    property Reference: WideString read Get_Reference write Set_Reference;
  end;

// *********************************************************************//
// DispIntf :    IBOArticleTarifClient3Disp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {59A52885-1DC4-4C57-85CD-E141875617F7}
// *********************************************************************//
  IBOArticleTarifClient3Disp = dispinterface
    ['{59A52885-1DC4-4C57-85CD-E141875617F7}']
    property Client: IBOClient3 dispid 131;
    property Reference: WideString dispid 132;
    property FactoryArticleTarifCond: IBITypeObjectFactory readonly dispid 120;
    property Coefficient: Double dispid 121;
    property PrixTTC: WordBool dispid 122;
    property Arrondi: IBPArrondi dispid 123;
    property Calcul: WordBool dispid 124;
    property FactoryArticleTarifGamme: IBITypeObjectFactory readonly dispid 100;
    property FactoryArticleTarifQte: IBITypeObjectFactory readonly dispid 101;
    property Article: IBOArticle3 dispid 102;
    property Prix: Double dispid 103;
    property GammeRemise: IBPGamme dispid 104;
    property PrixDevise: Double dispid 105;
    property Devise: IBPDevise2 dispid 106;
    property Remise: IRemise2 dispid 107;
    property IsHorsRemise: WordBool dispid 108;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IBPArrondi
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {DD4B3B8D-BF13-45B6-BC00-D9967EFE6436}
// *********************************************************************//
  IBPArrondi = interface(IBIPersistObject)
    ['{DD4B3B8D-BF13-45B6-BC00-D9967EFE6436}']
    function Get_FactoryArrondi: IBITypeObjectFactory; safecall;
    function Get_AR_Valeur: Double; safecall;
    procedure Set_AR_Valeur(pVal: Double); safecall;
    function Get_AR_Type: ArrondiType; safecall;
    procedure Set_AR_Type(pVal: ArrondiType); safecall;
    function Arrondir(dVal: Double): Double; safecall;
    property FactoryArrondi: IBITypeObjectFactory read Get_FactoryArrondi;
    property AR_Valeur: Double read Get_AR_Valeur write Set_AR_Valeur;
    property AR_Type: ArrondiType read Get_AR_Type write Set_AR_Type;
  end;

// *********************************************************************//
// DispIntf :    IBPArrondiDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {DD4B3B8D-BF13-45B6-BC00-D9967EFE6436}
// *********************************************************************//
  IBPArrondiDisp = dispinterface
    ['{DD4B3B8D-BF13-45B6-BC00-D9967EFE6436}']
    property FactoryArrondi: IBITypeObjectFactory readonly dispid 100;
    property AR_Valeur: Double dispid 101;
    property AR_Type: ArrondiType dispid 102;
    function Arrondir(dVal: Double): Double; dispid 103;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IBPCodeRisque
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {909942C0-ED30-41EA-9978-84EA9C00ABC2}
// *********************************************************************//
  IBPCodeRisque = interface(IBIPersistObject)
    ['{909942C0-ED30-41EA-9978-84EA9C00ABC2}']
    function Get_FactoryCodeRisque: IBPCodeRisqueFactory; safecall;
    function Get_R_Intitule: WideString; safecall;
    procedure Set_R_Intitule(const pVal: WideString); safecall;
    function Get_R_Type: RisqueType; safecall;
    procedure Set_R_Type(pVal: RisqueType); safecall;
    function Get_R_Min: Double; safecall;
    procedure Set_R_Min(pVal: Double); safecall;
    function Get_R_Max: Double; safecall;
    procedure Set_R_Max(pVal: Double); safecall;
    property FactoryCodeRisque: IBPCodeRisqueFactory read Get_FactoryCodeRisque;
    property R_Intitule: WideString read Get_R_Intitule write Set_R_Intitule;
    property R_Type: RisqueType read Get_R_Type write Set_R_Type;
    property R_Min: Double read Get_R_Min write Set_R_Min;
    property R_Max: Double read Get_R_Max write Set_R_Max;
  end;

// *********************************************************************//
// DispIntf :    IBPCodeRisqueDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {909942C0-ED30-41EA-9978-84EA9C00ABC2}
// *********************************************************************//
  IBPCodeRisqueDisp = dispinterface
    ['{909942C0-ED30-41EA-9978-84EA9C00ABC2}']
    property FactoryCodeRisque: IBPCodeRisqueFactory readonly dispid 100;
    property R_Intitule: WideString dispid 101;
    property R_Type: RisqueType dispid 102;
    property R_Min: Double dispid 103;
    property R_Max: Double dispid 104;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IBPCodeRisqueFactory
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {1E96E46F-32F3-4768-8858-69D5B15A4542}
// *********************************************************************//
  IBPCodeRisqueFactory = interface(IBITypeObjectFactory)
    ['{1E96E46F-32F3-4768-8858-69D5B15A4542}']
    function ExistIntitule(const sIntitule: WideString): WordBool; safecall;
    function ReadIntitule(const sIntitule: WideString): IBPCodeRisque; safecall;
  end;

// *********************************************************************//
// DispIntf :    IBPCodeRisqueFactoryDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {1E96E46F-32F3-4768-8858-69D5B15A4542}
// *********************************************************************//
  IBPCodeRisqueFactoryDisp = dispinterface
    ['{1E96E46F-32F3-4768-8858-69D5B15A4542}']
    function ExistIntitule(const sIntitule: WideString): WordBool; dispid 10;
    function ReadIntitule(const sIntitule: WideString): IBPCodeRisque; dispid 11;
    property List: IBICollection readonly dispid 1;
    function Create: IBIPersistObject; dispid 2;
    function Read(const pOID: IBIObjectID): IBIPersistObject; dispid 3;
    function _QuerySynchro(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                           TypeExtraction: SynchroExtractType): IBICollection; dispid 4;
    function _QuerySynchroRemoved(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                                  TypeExtraction: SynchroExtractType): IBICollectionDispatch; dispid 5;
    function ReadFrom(const pStream: IStream): IBIPersistObject; dispid 6;
    property ListForward: IBICollection readonly dispid 7;
    function QueryPredicate(const pPredicate: IDispatch; const sSortDescriptors: WideString): IBICollection; dispid 8;
  end;

// *********************************************************************//
// Interface :   IBPPeriodicite
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {2C9D5C91-300E-43CD-ACAD-804B92F42A66}
// *********************************************************************//
  IBPPeriodicite = interface(IBIPersistObject)
    ['{2C9D5C91-300E-43CD-ACAD-804B92F42A66}']
    function Get_FactoryPeriodicite: IBPPeriodiciteFactory; safecall;
    function Get_P_Intitule: WideString; safecall;
    procedure Set_P_Intitule(const pVal: WideString); safecall;
    property FactoryPeriodicite: IBPPeriodiciteFactory read Get_FactoryPeriodicite;
    property P_Intitule: WideString read Get_P_Intitule write Set_P_Intitule;
  end;

// *********************************************************************//
// DispIntf :    IBPPeriodiciteDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {2C9D5C91-300E-43CD-ACAD-804B92F42A66}
// *********************************************************************//
  IBPPeriodiciteDisp = dispinterface
    ['{2C9D5C91-300E-43CD-ACAD-804B92F42A66}']
    property FactoryPeriodicite: IBPPeriodiciteFactory readonly dispid 100;
    property P_Intitule: WideString dispid 101;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IBPPeriodiciteFactory
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {1AB0F29D-8A10-4039-98B6-7200B2298586}
// *********************************************************************//
  IBPPeriodiciteFactory = interface(IBITypeObjectFactory)
    ['{1AB0F29D-8A10-4039-98B6-7200B2298586}']
    function ExistIntitule(const sIntitule: WideString): WordBool; safecall;
    function ReadIntitule(const sIntitule: WideString): IBPPeriodicite; safecall;
  end;

// *********************************************************************//
// DispIntf :    IBPPeriodiciteFactoryDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {1AB0F29D-8A10-4039-98B6-7200B2298586}
// *********************************************************************//
  IBPPeriodiciteFactoryDisp = dispinterface
    ['{1AB0F29D-8A10-4039-98B6-7200B2298586}']
    function ExistIntitule(const sIntitule: WideString): WordBool; dispid 10;
    function ReadIntitule(const sIntitule: WideString): IBPPeriodicite; dispid 11;
    property List: IBICollection readonly dispid 1;
    function Create: IBIPersistObject; dispid 2;
    function Read(const pOID: IBIObjectID): IBIPersistObject; dispid 3;
    function _QuerySynchro(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                           TypeExtraction: SynchroExtractType): IBICollection; dispid 4;
    function _QuerySynchroRemoved(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                                  TypeExtraction: SynchroExtractType): IBICollectionDispatch; dispid 5;
    function ReadFrom(const pStream: IStream): IBIPersistObject; dispid 6;
    property ListForward: IBICollection readonly dispid 7;
    function QueryPredicate(const pPredicate: IDispatch; const sSortDescriptors: WideString): IBICollection; dispid 8;
  end;

// *********************************************************************//
// Interface :   IBOClientLivraison3
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {6F9CCCB6-C31A-4AF4-9D3C-8EEAD54DB697}
// *********************************************************************//
  IBOClientLivraison3 = interface(IBIPersistObject)
    ['{6F9CCCB6-C31A-4AF4-9D3C-8EEAD54DB697}']
    function Get_FactoryClientLivraison: IBITypeObjectFactory; safecall;
    function Get_Client: IBOClient3; safecall;
    function Get_LI_Intitule: WideString; safecall;
    procedure Set_LI_Intitule(const pVal: WideString); safecall;
    function Get_Adresse: IAdresse; safecall;
    procedure Set_Adresse(const pAdresse: IAdresse); safecall;
    function Get_LI_Contact: WideString; safecall;
    procedure Set_LI_Contact(const pVal: WideString); safecall;
    function Get_Expedition: IBPExpedition3; safecall;
    procedure Set_Expedition(const pExpedition: IBPExpedition3); safecall;
    function Get_ConditionLivraison: IBPConditionLivraison; safecall;
    procedure Set_ConditionLivraison(const pConditionLivraison: IBPConditionLivraison); safecall;
    function Get_Telecom: ITelecom; safecall;
    procedure Set_Telecom(const pTelecom: ITelecom); safecall;
    function Get_LI_Commentaire: WideString; safecall;
    procedure Set_LI_Commentaire(const pVal: WideString); safecall;
    function Get_LI_DelaiTransport: Smallint; safecall;
    procedure Set_LI_DelaiTransport(pVal: Smallint); safecall;
    property FactoryClientLivraison: IBITypeObjectFactory read Get_FactoryClientLivraison;
    property Client: IBOClient3 read Get_Client;
    property LI_Intitule: WideString read Get_LI_Intitule write Set_LI_Intitule;
    property Adresse: IAdresse read Get_Adresse write Set_Adresse;
    property LI_Contact: WideString read Get_LI_Contact write Set_LI_Contact;
    property Expedition: IBPExpedition3 read Get_Expedition write Set_Expedition;
    property ConditionLivraison: IBPConditionLivraison read Get_ConditionLivraison write Set_ConditionLivraison;
    property Telecom: ITelecom read Get_Telecom write Set_Telecom;
    property LI_Commentaire: WideString read Get_LI_Commentaire write Set_LI_Commentaire;
    property LI_DelaiTransport: Smallint read Get_LI_DelaiTransport write Set_LI_DelaiTransport;
  end;

// *********************************************************************//
// DispIntf :    IBOClientLivraison3Disp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {6F9CCCB6-C31A-4AF4-9D3C-8EEAD54DB697}
// *********************************************************************//
  IBOClientLivraison3Disp = dispinterface
    ['{6F9CCCB6-C31A-4AF4-9D3C-8EEAD54DB697}']
    property FactoryClientLivraison: IBITypeObjectFactory readonly dispid 100;
    property Client: IBOClient3 readonly dispid 101;
    property LI_Intitule: WideString dispid 102;
    property Adresse: IAdresse dispid 103;
    property LI_Contact: WideString dispid 109;
    property Expedition: IBPExpedition3 dispid 110;
    property ConditionLivraison: IBPConditionLivraison dispid 111;
    property Telecom: ITelecom dispid 112;
    property LI_Commentaire: WideString dispid 113;
    property LI_DelaiTransport: Smallint dispid 114;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IBOClientTarifFamilleFactory
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {BDD6E49E-B5B4-42A6-BE56-60A4291A968D}
// *********************************************************************//
  IBOClientTarifFamilleFactory = interface(IBITypeObjectFactory)
    ['{BDD6E49E-B5B4-42A6-BE56-60A4291A968D}']
    function ExistFamille(const pFamille: IBOFamille3): WordBool; safecall;
    function ReadFamille(const pFamille: IBOFamille3): IBOFamilleTarifClient; safecall;
  end;

// *********************************************************************//
// DispIntf :    IBOClientTarifFamilleFactoryDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {BDD6E49E-B5B4-42A6-BE56-60A4291A968D}
// *********************************************************************//
  IBOClientTarifFamilleFactoryDisp = dispinterface
    ['{BDD6E49E-B5B4-42A6-BE56-60A4291A968D}']
    function ExistFamille(const pFamille: IBOFamille3): WordBool; dispid 10;
    function ReadFamille(const pFamille: IBOFamille3): IBOFamilleTarifClient; dispid 11;
    property List: IBICollection readonly dispid 1;
    function Create: IBIPersistObject; dispid 2;
    function Read(const pOID: IBIObjectID): IBIPersistObject; dispid 3;
    function _QuerySynchro(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                           TypeExtraction: SynchroExtractType): IBICollection; dispid 4;
    function _QuerySynchroRemoved(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                                  TypeExtraction: SynchroExtractType): IBICollectionDispatch; dispid 5;
    function ReadFrom(const pStream: IStream): IBIPersistObject; dispid 6;
    property ListForward: IBICollection readonly dispid 7;
    function QueryPredicate(const pPredicate: IDispatch; const sSortDescriptors: WideString): IBICollection; dispid 8;
  end;

// *********************************************************************//
// Interface :   IBIFamilleTarifVente
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {B7F0BEA4-EFDF-4B4B-A85E-0B8DE3287753}
// *********************************************************************//
  IBIFamilleTarifVente = interface(IBIFamilleTarif)
    ['{B7F0BEA4-EFDF-4B4B-A85E-0B8DE3287753}']
    function Get_Coefficient: Double; safecall;
    procedure Set_Coefficient(pVal: Double); safecall;
    function Get_PrixTTC: WordBool; safecall;
    procedure Set_PrixTTC(pVal: WordBool); safecall;
    function Get_Arrondi: IBPArrondi; safecall;
    procedure Set_Arrondi(const pObject: IBPArrondi); safecall;
    function Get_Calcul: WordBool; safecall;
    procedure Set_Calcul(pVal: WordBool); safecall;
    property Coefficient: Double read Get_Coefficient write Set_Coefficient;
    property PrixTTC: WordBool read Get_PrixTTC write Set_PrixTTC;
    property Arrondi: IBPArrondi read Get_Arrondi write Set_Arrondi;
    property Calcul: WordBool read Get_Calcul write Set_Calcul;
  end;

// *********************************************************************//
// DispIntf :    IBIFamilleTarifVenteDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {B7F0BEA4-EFDF-4B4B-A85E-0B8DE3287753}
// *********************************************************************//
  IBIFamilleTarifVenteDisp = dispinterface
    ['{B7F0BEA4-EFDF-4B4B-A85E-0B8DE3287753}']
    property Coefficient: Double dispid 121;
    property PrixTTC: WordBool dispid 122;
    property Arrondi: IBPArrondi dispid 123;
    property Calcul: WordBool dispid 124;
    property FactoryFamilleTarifQte: IBITypeObjectFactory readonly dispid 101;
    property Famille: IBOFamille3 dispid 102;
    property GammeRemise: IBPGamme dispid 104;
    property Devise: IBPDevise2 dispid 106;
    property Remise: IRemise2 dispid 107;
    property IsHorsRemise: WordBool dispid 108;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IBOFamilleTarifClient
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {431AE828-CED0-43E6-A464-69428A50272A}
// *********************************************************************//
  IBOFamilleTarifClient = interface(IBIFamilleTarifVente)
    ['{431AE828-CED0-43E6-A464-69428A50272A}']
    function Get_Client: IBOClient3; safecall;
    procedure Set_Client(const pClient: IBOClient3); safecall;
    property Client: IBOClient3 read Get_Client write Set_Client;
  end;

// *********************************************************************//
// DispIntf :    IBOFamilleTarifClientDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {431AE828-CED0-43E6-A464-69428A50272A}
// *********************************************************************//
  IBOFamilleTarifClientDisp = dispinterface
    ['{431AE828-CED0-43E6-A464-69428A50272A}']
    property Client: IBOClient3 dispid 131;
    property Coefficient: Double dispid 121;
    property PrixTTC: WordBool dispid 122;
    property Arrondi: IBPArrondi dispid 123;
    property Calcul: WordBool dispid 124;
    property FactoryFamilleTarifQte: IBITypeObjectFactory readonly dispid 101;
    property Famille: IBOFamille3 dispid 102;
    property GammeRemise: IBPGamme dispid 104;
    property Devise: IBPDevise2 dispid 106;
    property Remise: IRemise2 dispid 107;
    property IsHorsRemise: WordBool dispid 108;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IBOProspectFactory
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {2E4FEA2D-6AD0-41DB-BA80-9A730DB6CE09}
// *********************************************************************//
  IBOProspectFactory = interface(IBITypeObjectFactory)
    ['{2E4FEA2D-6AD0-41DB-BA80-9A730DB6CE09}']
    function Get_ListOrderClassement: IBICollection; safecall;
    function ExistNumero(const sNum: WideString): WordBool; safecall;
    function ReadNumero(const sNum: WideString): IBOClient3; safecall;
    property ListOrderClassement: IBICollection read Get_ListOrderClassement;
  end;

// *********************************************************************//
// DispIntf :    IBOProspectFactoryDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {2E4FEA2D-6AD0-41DB-BA80-9A730DB6CE09}
// *********************************************************************//
  IBOProspectFactoryDisp = dispinterface
    ['{2E4FEA2D-6AD0-41DB-BA80-9A730DB6CE09}']
    property ListOrderClassement: IBICollection readonly dispid 10;
    function ExistNumero(const sNum: WideString): WordBool; dispid 11;
    function ReadNumero(const sNum: WideString): IBOClient3; dispid 12;
    property List: IBICollection readonly dispid 1;
    function Create: IBIPersistObject; dispid 2;
    function Read(const pOID: IBIObjectID): IBIPersistObject; dispid 3;
    function _QuerySynchro(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                           TypeExtraction: SynchroExtractType): IBICollection; dispid 4;
    function _QuerySynchroRemoved(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                                  TypeExtraction: SynchroExtractType): IBICollectionDispatch; dispid 5;
    function ReadFrom(const pStream: IStream): IBIPersistObject; dispid 6;
    property ListForward: IBICollection readonly dispid 7;
    function QueryPredicate(const pPredicate: IDispatch; const sSortDescriptors: WideString): IBICollection; dispid 8;
  end;

// *********************************************************************//
// Interface :   IBOClientProspectFactory
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {9E18E5C3-44CE-4C53-947C-279492FCDF1E}
// *********************************************************************//
  IBOClientProspectFactory = interface(IBITypeObjectFactory)
    ['{9E18E5C3-44CE-4C53-947C-279492FCDF1E}']
    function Get_ListOrderClassement: IBICollection; safecall;
    function ExistNumero(const sNum: WideString): WordBool; safecall;
    function ReadNumero(const sNum: WideString): IBOClient3; safecall;
    property ListOrderClassement: IBICollection read Get_ListOrderClassement;
  end;

// *********************************************************************//
// DispIntf :    IBOClientProspectFactoryDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {9E18E5C3-44CE-4C53-947C-279492FCDF1E}
// *********************************************************************//
  IBOClientProspectFactoryDisp = dispinterface
    ['{9E18E5C3-44CE-4C53-947C-279492FCDF1E}']
    property ListOrderClassement: IBICollection readonly dispid 10;
    function ExistNumero(const sNum: WideString): WordBool; dispid 11;
    function ReadNumero(const sNum: WideString): IBOClient3; dispid 12;
    property List: IBICollection readonly dispid 1;
    function Create: IBIPersistObject; dispid 2;
    function Read(const pOID: IBIObjectID): IBIPersistObject; dispid 3;
    function _QuerySynchro(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                           TypeExtraction: SynchroExtractType): IBICollection; dispid 4;
    function _QuerySynchroRemoved(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                                  TypeExtraction: SynchroExtractType): IBICollectionDispatch; dispid 5;
    function ReadFrom(const pStream: IStream): IBIPersistObject; dispid 6;
    property ListForward: IBICollection readonly dispid 7;
    function QueryPredicate(const pPredicate: IDispatch; const sSortDescriptors: WideString): IBICollection; dispid 8;
  end;

// *********************************************************************//
// Interface :   IBOInfoComplementClientFactory
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {FE6F4A20-68F5-4C72-A6D3-1D2BEEB7D558}
// *********************************************************************//
  IBOInfoComplementClientFactory = interface(IBITypeObjectFactory)
    ['{FE6F4A20-68F5-4C72-A6D3-1D2BEEB7D558}']
    function ExistCode(const sCode: WideString): WordBool; safecall;
    function ReadCode(const sCode: WideString): IBOInfoComplementClient; safecall;
  end;

// *********************************************************************//
// DispIntf :    IBOInfoComplementClientFactoryDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {FE6F4A20-68F5-4C72-A6D3-1D2BEEB7D558}
// *********************************************************************//
  IBOInfoComplementClientFactoryDisp = dispinterface
    ['{FE6F4A20-68F5-4C72-A6D3-1D2BEEB7D558}']
    function ExistCode(const sCode: WideString): WordBool; dispid 11;
    function ReadCode(const sCode: WideString): IBOInfoComplementClient; dispid 12;
    property List: IBICollection readonly dispid 1;
    function Create: IBIPersistObject; dispid 2;
    function Read(const pOID: IBIObjectID): IBIPersistObject; dispid 3;
    function _QuerySynchro(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                           TypeExtraction: SynchroExtractType): IBICollection; dispid 4;
    function _QuerySynchroRemoved(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                                  TypeExtraction: SynchroExtractType): IBICollectionDispatch; dispid 5;
    function ReadFrom(const pStream: IStream): IBIPersistObject; dispid 6;
    property ListForward: IBICollection readonly dispid 7;
    function QueryPredicate(const pPredicate: IDispatch; const sSortDescriptors: WideString): IBICollection; dispid 8;
  end;

// *********************************************************************//
// Interface :   IBOInfoComplementClient
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {76728E2D-42B7-4556-AFED-3267AE20D326}
// *********************************************************************//
  IBOInfoComplementClient = interface(IBIPersistObject)
    ['{76728E2D-42B7-4556-AFED-3267AE20D326}']
    function Get_FactoryInfoComplement: IBOInfoComplementClientFactory; safecall;
    function Get_Client: IBOClient3; safecall;
    function Get_CI_Code: WideString; safecall;
    function Get_CI_Intitule: WideString; safecall;
    function Get_CI_Domaine: InfoDomaine; safecall;
    function Get_CI_Type: InfoType; safecall;
    function Get_CI_Valeur: WideString; safecall;
    procedure Set_CI_Valeur(const pValeur: WideString); safecall;
    property FactoryInfoComplement: IBOInfoComplementClientFactory read Get_FactoryInfoComplement;
    property Client: IBOClient3 read Get_Client;
    property CI_Code: WideString read Get_CI_Code;
    property CI_Intitule: WideString read Get_CI_Intitule;
    property CI_Domaine: InfoDomaine read Get_CI_Domaine;
    property CI_Type: InfoType read Get_CI_Type;
    property CI_Valeur: WideString read Get_CI_Valeur write Set_CI_Valeur;
  end;

// *********************************************************************//
// DispIntf :    IBOInfoComplementClientDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {76728E2D-42B7-4556-AFED-3267AE20D326}
// *********************************************************************//
  IBOInfoComplementClientDisp = dispinterface
    ['{76728E2D-42B7-4556-AFED-3267AE20D326}']
    property FactoryInfoComplement: IBOInfoComplementClientFactory readonly dispid 100;
    property Client: IBOClient3 readonly dispid 101;
    property CI_Code: WideString readonly dispid 102;
    property CI_Intitule: WideString readonly dispid 103;
    property CI_Domaine: InfoDomaine readonly dispid 104;
    property CI_Type: InfoType readonly dispid 105;
    property CI_Valeur: WideString dispid 106;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IBIRessource
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {ADAB67DA-15B9-41FC-A28E-9B9154D761F0}
// *********************************************************************//
  IBIRessource = interface(IBIPersistObject)
    ['{ADAB67DA-15B9-41FC-A28E-9B9154D761F0}']
    function Get_FactoryRessourceBase: IBIRessourceFactory; safecall;
    function Get_FactoryRessourceArticle: IBIRessourceArticleFactory; safecall;
    function Get_FactoryRessourceRessource: IBIRessourceRessourceFactory; safecall;
    function Get_RP_TypeRess: RessourceType; safecall;
    function Get_RP_Code: WideString; safecall;
    procedure Set_RP_Code(const pVal: WideString); safecall;
    function Get_RP_Type: RessourceProdType; safecall;
    procedure Set_RP_Type(pVal: RessourceProdType); safecall;
    function Get_RP_Intitule: WideString; safecall;
    procedure Set_RP_Intitule(const pVal: WideString); safecall;
    function Get_RP_Complement: WideString; safecall;
    procedure Set_RP_Complement(const pVal: WideString); safecall;
    function Get_RP_Commentaire: WideString; safecall;
    procedure Set_RP_Commentaire(const pVal: WideString); safecall;
    function Get_RessourceCentrale: IBIRessource; safecall;
    procedure Set_RessourceCentrale(const pVal: IBIRessource); safecall;
    function Get_RP_Visite: TDateTime; safecall;
    procedure Set_RP_Visite(pVal: TDateTime); safecall;
    function Get_RP_Sommeil: WordBool; safecall;
    procedure Set_RP_Sommeil(pVal: WordBool); safecall;
    function Get_RP_CoutStd: Double; safecall;
    procedure Set_RP_CoutStd(pVal: Double); safecall;
    function Get_RP_DateCreation: TDateTime; safecall;
    function Get_RP_Capacite: Integer; safecall;
    procedure Set_RP_Capacite(pVal: Integer); safecall;
    function Get_RP_Temps: Integer; safecall;
    procedure Set_RP_Temps(pVal: Integer); safecall;
    function Get_ArticleDefault: IBOArticle3; safecall;
    procedure Set_ArticleDefault(const pVal: IBOArticle3); safecall;
    function Get_Unite: IBPUnite; safecall;
    procedure Set_Unite(const pUnite: IBPUnite); safecall;
    function Get_RP_Continue: WordBool; safecall;
    procedure Set_RP_Continue(pVal: WordBool); safecall;
    function Get_Horaire1(iDayOfWeek: Smallint): IDateTimePeriod; safecall;
    procedure Set_Horaire1(iDayOfWeek: Smallint; const pTimePeriod: IDateTimePeriod); safecall;
    function Get_Horaire2(iDayOfWeek: Smallint): IDateTimePeriod; safecall;
    procedure Set_Horaire2(iDayOfWeek: Smallint; const pTimePeriod: IDateTimePeriod); safecall;
    function Get_Depot: IBODepot3; safecall;
    procedure Set_Depot(const pObject: IBODepot3); safecall;
    function Get_RP_Facebook: WideString; safecall;
    procedure Set_RP_Facebook(const pVal: WideString); safecall;
    function Get_RP_LinkedIn: WideString; safecall;
    procedure Set_RP_LinkedIn(const pVal: WideString); safecall;
    function Get_RP_Skype: WideString; safecall;
    procedure Set_RP_Skype(const pVal: WideString); safecall;
    function Get_InfoLibre: IBIValues; safecall;
    property FactoryRessourceBase: IBIRessourceFactory read Get_FactoryRessourceBase;
    property FactoryRessourceArticle: IBIRessourceArticleFactory read Get_FactoryRessourceArticle;
    property FactoryRessourceRessource: IBIRessourceRessourceFactory read Get_FactoryRessourceRessource;
    property RP_TypeRess: RessourceType read Get_RP_TypeRess;
    property RP_Code: WideString read Get_RP_Code write Set_RP_Code;
    property RP_Type: RessourceProdType read Get_RP_Type write Set_RP_Type;
    property RP_Intitule: WideString read Get_RP_Intitule write Set_RP_Intitule;
    property RP_Complement: WideString read Get_RP_Complement write Set_RP_Complement;
    property RP_Commentaire: WideString read Get_RP_Commentaire write Set_RP_Commentaire;
    property RessourceCentrale: IBIRessource read Get_RessourceCentrale write Set_RessourceCentrale;
    property RP_Visite: TDateTime read Get_RP_Visite write Set_RP_Visite;
    property RP_Sommeil: WordBool read Get_RP_Sommeil write Set_RP_Sommeil;
    property RP_CoutStd: Double read Get_RP_CoutStd write Set_RP_CoutStd;
    property RP_DateCreation: TDateTime read Get_RP_DateCreation;
    property RP_Capacite: Integer read Get_RP_Capacite write Set_RP_Capacite;
    property RP_Temps: Integer read Get_RP_Temps write Set_RP_Temps;
    property ArticleDefault: IBOArticle3 read Get_ArticleDefault write Set_ArticleDefault;
    property Unite: IBPUnite read Get_Unite write Set_Unite;
    property RP_Continue: WordBool read Get_RP_Continue write Set_RP_Continue;
    property Horaire1[iDayOfWeek: Smallint]: IDateTimePeriod read Get_Horaire1 write Set_Horaire1;
    property Horaire2[iDayOfWeek: Smallint]: IDateTimePeriod read Get_Horaire2 write Set_Horaire2;
    property Depot: IBODepot3 read Get_Depot write Set_Depot;
    property RP_Facebook: WideString read Get_RP_Facebook write Set_RP_Facebook;
    property RP_LinkedIn: WideString read Get_RP_LinkedIn write Set_RP_LinkedIn;
    property RP_Skype: WideString read Get_RP_Skype write Set_RP_Skype;
    property InfoLibre: IBIValues read Get_InfoLibre;
  end;

// *********************************************************************//
// DispIntf :    IBIRessourceDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {ADAB67DA-15B9-41FC-A28E-9B9154D761F0}
// *********************************************************************//
  IBIRessourceDisp = dispinterface
    ['{ADAB67DA-15B9-41FC-A28E-9B9154D761F0}']
    property FactoryRessourceBase: IBIRessourceFactory readonly dispid 100;
    property FactoryRessourceArticle: IBIRessourceArticleFactory readonly dispid 101;
    property FactoryRessourceRessource: IBIRessourceRessourceFactory readonly dispid 102;
    property RP_TypeRess: RessourceType readonly dispid 103;
    property RP_Code: WideString dispid 104;
    property RP_Type: RessourceProdType dispid 105;
    property RP_Intitule: WideString dispid 106;
    property RP_Complement: WideString dispid 107;
    property RP_Commentaire: WideString dispid 108;
    property RessourceCentrale: IBIRessource dispid 109;
    property RP_Visite: TDateTime dispid 110;
    property RP_Sommeil: WordBool dispid 111;
    property RP_CoutStd: Double dispid 112;
    property RP_DateCreation: TDateTime readonly dispid 113;
    property RP_Capacite: Integer dispid 114;
    property RP_Temps: Integer dispid 115;
    property ArticleDefault: IBOArticle3 dispid 116;
    property Unite: IBPUnite dispid 117;
    property RP_Continue: WordBool dispid 118;
    property Horaire1[iDayOfWeek: Smallint]: IDateTimePeriod dispid 119;
    property Horaire2[iDayOfWeek: Smallint]: IDateTimePeriod dispid 120;
    property Depot: IBODepot3 dispid 121;
    property RP_Facebook: WideString dispid 122;
    property RP_LinkedIn: WideString dispid 123;
    property RP_Skype: WideString dispid 124;
    property InfoLibre: IBIValues readonly dispid 125;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IBIRessourceFactory
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {0BCE62DD-2E2C-42E1-80C3-077DBB162749}
// *********************************************************************//
  IBIRessourceFactory = interface(IBITypeObjectFactory)
    ['{0BCE62DD-2E2C-42E1-80C3-077DBB162749}']
    function Get_ListOrderIntitule: IBICollection; safecall;
    function Get_ListOrderTypeRessource: IBICollection; safecall;
    function Get_ListOrderDepot: IBICollection; safecall;
    function ExistNumero(const sNum: WideString): WordBool; safecall;
    function ReadNumero(const sNum: WideString): IBIRessource; safecall;
    function QueryTypeOrderCode(sType: RessourceType): IBICollection; safecall;
    function QueryTypeOrderIntitule(sType: RessourceType): IBICollection; safecall;
    function QueryTypeOrderTypeRessource(sType: RessourceType): IBICollection; safecall;
    function QueryTypeOrderDepot(sType: RessourceType): IBICollection; safecall;
    function Get_InfoLibreFields: IBIFields; safecall;
    procedure CreateInfoLibre(const sName: WideString; sType: eTypeInfoLibre; ilength: Smallint); safecall;
    property ListOrderIntitule: IBICollection read Get_ListOrderIntitule;
    property ListOrderTypeRessource: IBICollection read Get_ListOrderTypeRessource;
    property ListOrderDepot: IBICollection read Get_ListOrderDepot;
    property InfoLibreFields: IBIFields read Get_InfoLibreFields;
  end;

// *********************************************************************//
// DispIntf :    IBIRessourceFactoryDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {0BCE62DD-2E2C-42E1-80C3-077DBB162749}
// *********************************************************************//
  IBIRessourceFactoryDisp = dispinterface
    ['{0BCE62DD-2E2C-42E1-80C3-077DBB162749}']
    property ListOrderIntitule: IBICollection readonly dispid 10;
    property ListOrderTypeRessource: IBICollection readonly dispid 11;
    property ListOrderDepot: IBICollection readonly dispid 12;
    function ExistNumero(const sNum: WideString): WordBool; dispid 13;
    function ReadNumero(const sNum: WideString): IBIRessource; dispid 14;
    function QueryTypeOrderCode(sType: RessourceType): IBICollection; dispid 15;
    function QueryTypeOrderIntitule(sType: RessourceType): IBICollection; dispid 16;
    function QueryTypeOrderTypeRessource(sType: RessourceType): IBICollection; dispid 17;
    function QueryTypeOrderDepot(sType: RessourceType): IBICollection; dispid 18;
    property InfoLibreFields: IBIFields readonly dispid 19;
    procedure CreateInfoLibre(const sName: WideString; sType: eTypeInfoLibre; ilength: Smallint); dispid 20;
    property List: IBICollection readonly dispid 1;
    function Create: IBIPersistObject; dispid 2;
    function Read(const pOID: IBIObjectID): IBIPersistObject; dispid 3;
    function _QuerySynchro(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                           TypeExtraction: SynchroExtractType): IBICollection; dispid 4;
    function _QuerySynchroRemoved(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                                  TypeExtraction: SynchroExtractType): IBICollectionDispatch; dispid 5;
    function ReadFrom(const pStream: IStream): IBIPersistObject; dispid 6;
    property ListForward: IBICollection readonly dispid 7;
    function QueryPredicate(const pPredicate: IDispatch; const sSortDescriptors: WideString): IBICollection; dispid 8;
  end;

// *********************************************************************//
// Interface :   IBIRessourceArticleFactory
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {8BF73CA8-6C4E-4934-BF6D-DC63DD7FB254}
// *********************************************************************//
  IBIRessourceArticleFactory = interface(IBITypeObjectFactory)
    ['{8BF73CA8-6C4E-4934-BF6D-DC63DD7FB254}']
    procedure AddArticle(const pArticle: IBOArticle3); safecall;
    procedure RmvArticle(const pArticle: IBOArticle3); safecall;
  end;

// *********************************************************************//
// DispIntf :    IBIRessourceArticleFactoryDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {8BF73CA8-6C4E-4934-BF6D-DC63DD7FB254}
// *********************************************************************//
  IBIRessourceArticleFactoryDisp = dispinterface
    ['{8BF73CA8-6C4E-4934-BF6D-DC63DD7FB254}']
    procedure AddArticle(const pArticle: IBOArticle3); dispid 10;
    procedure RmvArticle(const pArticle: IBOArticle3); dispid 11;
    property List: IBICollection readonly dispid 1;
    function Create: IBIPersistObject; dispid 2;
    function Read(const pOID: IBIObjectID): IBIPersistObject; dispid 3;
    function _QuerySynchro(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                           TypeExtraction: SynchroExtractType): IBICollection; dispid 4;
    function _QuerySynchroRemoved(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                                  TypeExtraction: SynchroExtractType): IBICollectionDispatch; dispid 5;
    function ReadFrom(const pStream: IStream): IBIPersistObject; dispid 6;
    property ListForward: IBICollection readonly dispid 7;
    function QueryPredicate(const pPredicate: IDispatch; const sSortDescriptors: WideString): IBICollection; dispid 8;
  end;

// *********************************************************************//
// Interface :   IBIRessourceRessourceFactory
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {08ACED6A-5D87-4604-9C9A-30B316F9CB89}
// *********************************************************************//
  IBIRessourceRessourceFactory = interface(IBITypeObjectFactory)
    ['{08ACED6A-5D87-4604-9C9A-30B316F9CB89}']
    procedure AddRessource(const pRessource: IBIRessource); safecall;
    procedure RmvRessource(const pRessource: IBIRessource); safecall;
  end;

// *********************************************************************//
// DispIntf :    IBIRessourceRessourceFactoryDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {08ACED6A-5D87-4604-9C9A-30B316F9CB89}
// *********************************************************************//
  IBIRessourceRessourceFactoryDisp = dispinterface
    ['{08ACED6A-5D87-4604-9C9A-30B316F9CB89}']
    procedure AddRessource(const pRessource: IBIRessource); dispid 10;
    procedure RmvRessource(const pRessource: IBIRessource); dispid 11;
    property List: IBICollection readonly dispid 1;
    function Create: IBIPersistObject; dispid 2;
    function Read(const pOID: IBIObjectID): IBIPersistObject; dispid 3;
    function _QuerySynchro(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                           TypeExtraction: SynchroExtractType): IBICollection; dispid 4;
    function _QuerySynchroRemoved(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                                  TypeExtraction: SynchroExtractType): IBICollectionDispatch; dispid 5;
    function ReadFrom(const pStream: IStream): IBIPersistObject; dispid 6;
    property ListForward: IBICollection readonly dispid 7;
    function QueryPredicate(const pPredicate: IDispatch; const sSortDescriptors: WideString): IBICollection; dispid 8;
  end;

// *********************************************************************//
// Interface :   IDateTimePeriod
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {4A394899-F9AD-47FF-96DB-590CC19411BB}
// *********************************************************************//
  IDateTimePeriod = interface(IDispatch)
    ['{4A394899-F9AD-47FF-96DB-590CC19411BB}']
    function Get_Start: TDateTime; safecall;
    procedure Set_Start(pVal: TDateTime); safecall;
    function Get_End_: TDateTime; safecall;
    procedure Set_End_(pVal: TDateTime); safecall;
    property Start: TDateTime read Get_Start write Set_Start;
    property End_: TDateTime read Get_End_ write Set_End_;
  end;

// *********************************************************************//
// DispIntf :    IDateTimePeriodDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {4A394899-F9AD-47FF-96DB-590CC19411BB}
// *********************************************************************//
  IDateTimePeriodDisp = dispinterface
    ['{4A394899-F9AD-47FF-96DB-590CC19411BB}']
    property Start: TDateTime dispid 10;
    property End_: TDateTime dispid 11;
  end;

// *********************************************************************//
// Interface :   IBOArticleRessourceFactory
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {3BE1AD20-A5F5-47E6-957D-9D4C78CF5CFC}
// *********************************************************************//
  IBOArticleRessourceFactory = interface(IBITypeObjectFactory)
    ['{3BE1AD20-A5F5-47E6-957D-9D4C78CF5CFC}']
    procedure AddRessource(const pRessource: IBIRessource); safecall;
    procedure RmvRessource(const pRessource: IBIRessource); safecall;
  end;

// *********************************************************************//
// DispIntf :    IBOArticleRessourceFactoryDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {3BE1AD20-A5F5-47E6-957D-9D4C78CF5CFC}
// *********************************************************************//
  IBOArticleRessourceFactoryDisp = dispinterface
    ['{3BE1AD20-A5F5-47E6-957D-9D4C78CF5CFC}']
    procedure AddRessource(const pRessource: IBIRessource); dispid 10;
    procedure RmvRessource(const pRessource: IBIRessource); dispid 11;
    property List: IBICollection readonly dispid 1;
    function Create: IBIPersistObject; dispid 2;
    function Read(const pOID: IBIObjectID): IBIPersistObject; dispid 3;
    function _QuerySynchro(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                           TypeExtraction: SynchroExtractType): IBICollection; dispid 4;
    function _QuerySynchroRemoved(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                                  TypeExtraction: SynchroExtractType): IBICollectionDispatch; dispid 5;
    function ReadFrom(const pStream: IStream): IBIPersistObject; dispid 6;
    property ListForward: IBICollection readonly dispid 7;
    function QueryPredicate(const pPredicate: IDispatch; const sSortDescriptors: WideString): IBICollection; dispid 8;
  end;

// *********************************************************************//
// Interface :   ITransformationAchat
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {ABA54143-C289-4EBD-AC4C-9CCBFF9DE305}
// *********************************************************************//
  ITransformationAchat = interface(IDispatch)
    ['{ABA54143-C289-4EBD-AC4C-9CCBFF9DE305}']
    function CreateProcess_Commander: IPMDocTransformer; safecall;
    function CreateProcess_Receptionner: IPMDocTransformer; safecall;
  end;

// *********************************************************************//
// DispIntf :    ITransformationAchatDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {ABA54143-C289-4EBD-AC4C-9CCBFF9DE305}
// *********************************************************************//
  ITransformationAchatDisp = dispinterface
    ['{ABA54143-C289-4EBD-AC4C-9CCBFF9DE305}']
    function CreateProcess_Commander: IPMDocTransformer; dispid 10;
    function CreateProcess_Receptionner: IPMDocTransformer; dispid 11;
  end;

// *********************************************************************//
// Interface :   IBIContact2
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {FAE14E25-D9B3-49D6-A51A-868E34BE6F50}
// *********************************************************************//
  IBIContact2 = interface(IBIPersistObject)
    ['{FAE14E25-D9B3-49D6-A51A-868E34BE6F50}']
    function Get_Nom: WideString; safecall;
    procedure Set_Nom(const pVal: WideString); safecall;
    function Get_Prenom: WideString; safecall;
    procedure Set_Prenom(const pVal: WideString); safecall;
    function Get_ServiceContact: IBPServiceContact; safecall;
    procedure Set_ServiceContact(const pObject: IBPServiceContact); safecall;
    function Get_Fonction: WideString; safecall;
    procedure Set_Fonction(const pVal: WideString); safecall;
    function Get_Telecom: ITelecom; safecall;
    procedure Set_Telecom(const pTelecom: ITelecom); safecall;
    function Get_Civilite: ContactCivilite; safecall;
    procedure Set_Civilite(pVal: ContactCivilite); safecall;
    function Get_TypeContact: IBPContact; safecall;
    procedure Set_TypeContact(const pObject: IBPContact); safecall;
    function Get_Facebook: WideString; safecall;
    procedure Set_Facebook(const pVal: WideString); safecall;
    function Get_LinkedIn: WideString; safecall;
    procedure Set_LinkedIn(const pVal: WideString); safecall;
    function Get_Skype: WideString; safecall;
    procedure Set_Skype(const pVal: WideString); safecall;
    property Nom: WideString read Get_Nom write Set_Nom;
    property Prenom: WideString read Get_Prenom write Set_Prenom;
    property ServiceContact: IBPServiceContact read Get_ServiceContact write Set_ServiceContact;
    property Fonction: WideString read Get_Fonction write Set_Fonction;
    property Telecom: ITelecom read Get_Telecom write Set_Telecom;
    property Civilite: ContactCivilite read Get_Civilite write Set_Civilite;
    property TypeContact: IBPContact read Get_TypeContact write Set_TypeContact;
    property Facebook: WideString read Get_Facebook write Set_Facebook;
    property LinkedIn: WideString read Get_LinkedIn write Set_LinkedIn;
    property Skype: WideString read Get_Skype write Set_Skype;
  end;

// *********************************************************************//
// DispIntf :    IBIContact2Disp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {FAE14E25-D9B3-49D6-A51A-868E34BE6F50}
// *********************************************************************//
  IBIContact2Disp = dispinterface
    ['{FAE14E25-D9B3-49D6-A51A-868E34BE6F50}']
    property Nom: WideString dispid 100;
    property Prenom: WideString dispid 101;
    property ServiceContact: IBPServiceContact dispid 102;
    property Fonction: WideString dispid 103;
    property Telecom: ITelecom dispid 104;
    property Civilite: ContactCivilite dispid 108;
    property TypeContact: IBPContact dispid 109;
    property Facebook: WideString dispid 122;
    property LinkedIn: WideString dispid 123;
    property Skype: WideString dispid 124;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IBPServiceContact
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {58F758D4-A72D-4C48-9CBC-A82ADCF59AD3}
// *********************************************************************//
  IBPServiceContact = interface(IBIPersistObject)
    ['{58F758D4-A72D-4C48-9CBC-A82ADCF59AD3}']
    function Get_FactoryServiceContact: IBPServiceContactFactory; safecall;
    function Get_S_Intitule: WideString; safecall;
    procedure Set_S_Intitule(const pVal: WideString); safecall;
    function Get_S_Abrege: WideString; safecall;
    procedure Set_S_Abrege(const pVal: WideString); safecall;
    property FactoryServiceContact: IBPServiceContactFactory read Get_FactoryServiceContact;
    property S_Intitule: WideString read Get_S_Intitule write Set_S_Intitule;
    property S_Abrege: WideString read Get_S_Abrege write Set_S_Abrege;
  end;

// *********************************************************************//
// DispIntf :    IBPServiceContactDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {58F758D4-A72D-4C48-9CBC-A82ADCF59AD3}
// *********************************************************************//
  IBPServiceContactDisp = dispinterface
    ['{58F758D4-A72D-4C48-9CBC-A82ADCF59AD3}']
    property FactoryServiceContact: IBPServiceContactFactory readonly dispid 100;
    property S_Intitule: WideString dispid 101;
    property S_Abrege: WideString dispid 102;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IBPServiceContactFactory
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {C38740BB-7FBD-4EF4-817F-C0DD006A3A6A}
// *********************************************************************//
  IBPServiceContactFactory = interface(IBITypeObjectFactory)
    ['{C38740BB-7FBD-4EF4-817F-C0DD006A3A6A}']
    function ExistIntitule(const sIntitule: WideString): WordBool; safecall;
    function ReadIntitule(const sIntitule: WideString): IBPServiceContact; safecall;
  end;

// *********************************************************************//
// DispIntf :    IBPServiceContactFactoryDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {C38740BB-7FBD-4EF4-817F-C0DD006A3A6A}
// *********************************************************************//
  IBPServiceContactFactoryDisp = dispinterface
    ['{C38740BB-7FBD-4EF4-817F-C0DD006A3A6A}']
    function ExistIntitule(const sIntitule: WideString): WordBool; dispid 10;
    function ReadIntitule(const sIntitule: WideString): IBPServiceContact; dispid 11;
    property List: IBICollection readonly dispid 1;
    function Create: IBIPersistObject; dispid 2;
    function Read(const pOID: IBIObjectID): IBIPersistObject; dispid 3;
    function _QuerySynchro(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                           TypeExtraction: SynchroExtractType): IBICollection; dispid 4;
    function _QuerySynchroRemoved(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                                  TypeExtraction: SynchroExtractType): IBICollectionDispatch; dispid 5;
    function ReadFrom(const pStream: IStream): IBIPersistObject; dispid 6;
    property ListForward: IBICollection readonly dispid 7;
    function QueryPredicate(const pPredicate: IDispatch; const sSortDescriptors: WideString): IBICollection; dispid 8;
  end;

// *********************************************************************//
// Interface :   IBPContact
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {B97C4265-FF1E-41C4-9799-2E8B8ECE855F}
// *********************************************************************//
  IBPContact = interface(IBIPersistObject)
    ['{B97C4265-FF1E-41C4-9799-2E8B8ECE855F}']
    function Get_FactoryTypeContacts: IBPContactFactory; safecall;
    function Get_Intitule: WideString; safecall;
    procedure Set_Intitule(const pVal: WideString); safecall;
    property FactoryTypeContacts: IBPContactFactory read Get_FactoryTypeContacts;
    property Intitule: WideString read Get_Intitule write Set_Intitule;
  end;

// *********************************************************************//
// DispIntf :    IBPContactDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {B97C4265-FF1E-41C4-9799-2E8B8ECE855F}
// *********************************************************************//
  IBPContactDisp = dispinterface
    ['{B97C4265-FF1E-41C4-9799-2E8B8ECE855F}']
    property FactoryTypeContacts: IBPContactFactory readonly dispid 100;
    property Intitule: WideString dispid 101;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IBPContactFactory
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {681E84FA-57F9-45D6-A209-D72BD027AFFD}
// *********************************************************************//
  IBPContactFactory = interface(IBITypeObjectFactory)
    ['{681E84FA-57F9-45D6-A209-D72BD027AFFD}']
    function ExistIntitule(const sIntitule: WideString): WordBool; safecall;
    function ReadIntitule(const sIntitule: WideString): IBPContact; safecall;
  end;

// *********************************************************************//
// DispIntf :    IBPContactFactoryDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {681E84FA-57F9-45D6-A209-D72BD027AFFD}
// *********************************************************************//
  IBPContactFactoryDisp = dispinterface
    ['{681E84FA-57F9-45D6-A209-D72BD027AFFD}']
    function ExistIntitule(const sIntitule: WideString): WordBool; dispid 10;
    function ReadIntitule(const sIntitule: WideString): IBPContact; dispid 11;
    property List: IBICollection readonly dispid 1;
    function Create: IBIPersistObject; dispid 2;
    function Read(const pOID: IBIObjectID): IBIPersistObject; dispid 3;
    function _QuerySynchro(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                           TypeExtraction: SynchroExtractType): IBICollection; dispid 4;
    function _QuerySynchroRemoved(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                                  TypeExtraction: SynchroExtractType): IBICollectionDispatch; dispid 5;
    function ReadFrom(const pStream: IStream): IBIPersistObject; dispid 6;
    property ListForward: IBICollection readonly dispid 7;
    function QueryPredicate(const pPredicate: IDispatch; const sSortDescriptors: WideString): IBICollection; dispid 8;
  end;

// *********************************************************************//
// Interface :   IBIArticleTarifGamme3
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {F78AAF69-F2DF-4563-B9F2-538B1F75A8BE}
// *********************************************************************//
  IBIArticleTarifGamme3 = interface(IBIPersistObject)
    ['{F78AAF69-F2DF-4563-B9F2-538B1F75A8BE}']
    function Get_Article: IBOArticle3; safecall;
    function Get_ArticleTarif: IBIArticleTarif3; safecall;
    function Get_ArticleGammeEnum1: IBOArticleGammeEnum3; safecall;
    procedure Set_ArticleGammeEnum1(const pObject: IBOArticleGammeEnum3); safecall;
    function Get_ArticleGammeEnum2: IBOArticleGammeEnum3; safecall;
    procedure Set_ArticleGammeEnum2(const pObject: IBOArticleGammeEnum3); safecall;
    function Get_Prix: Double; safecall;
    procedure Set_Prix(pVal: Double); safecall;
    property Article: IBOArticle3 read Get_Article;
    property ArticleTarif: IBIArticleTarif3 read Get_ArticleTarif;
    property ArticleGammeEnum1: IBOArticleGammeEnum3 read Get_ArticleGammeEnum1 write Set_ArticleGammeEnum1;
    property ArticleGammeEnum2: IBOArticleGammeEnum3 read Get_ArticleGammeEnum2 write Set_ArticleGammeEnum2;
    property Prix: Double read Get_Prix write Set_Prix;
  end;

// *********************************************************************//
// DispIntf :    IBIArticleTarifGamme3Disp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {F78AAF69-F2DF-4563-B9F2-538B1F75A8BE}
// *********************************************************************//
  IBIArticleTarifGamme3Disp = dispinterface
    ['{F78AAF69-F2DF-4563-B9F2-538B1F75A8BE}']
    property Article: IBOArticle3 readonly dispid 100;
    property ArticleTarif: IBIArticleTarif3 readonly dispid 101;
    property ArticleGammeEnum1: IBOArticleGammeEnum3 dispid 102;
    property ArticleGammeEnum2: IBOArticleGammeEnum3 dispid 103;
    property Prix: Double dispid 104;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IBIArticleTarifQte3
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {3A83C2D4-7C03-4829-8B17-A35F3A6AA306}
// *********************************************************************//
  IBIArticleTarifQte3 = interface(IBIPersistObject)
    ['{3A83C2D4-7C03-4829-8B17-A35F3A6AA306}']
    function Get_Article: IBOArticle3; safecall;
    function Get_ArticleTarif: IBIArticleTarif3; safecall;
    function Get_BorneSup: Double; safecall;
    procedure Set_BorneSup(pVal: Double); safecall;
    function Get_Remise: IRemise2; safecall;
    procedure Set_Remise(const pObject: IRemise2); safecall;
    function Get_PrixNet: Double; safecall;
    procedure Set_PrixNet(pVal: Double); safecall;
    property Article: IBOArticle3 read Get_Article;
    property ArticleTarif: IBIArticleTarif3 read Get_ArticleTarif;
    property BorneSup: Double read Get_BorneSup write Set_BorneSup;
    property Remise: IRemise2 read Get_Remise write Set_Remise;
    property PrixNet: Double read Get_PrixNet write Set_PrixNet;
  end;

// *********************************************************************//
// DispIntf :    IBIArticleTarifQte3Disp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {3A83C2D4-7C03-4829-8B17-A35F3A6AA306}
// *********************************************************************//
  IBIArticleTarifQte3Disp = dispinterface
    ['{3A83C2D4-7C03-4829-8B17-A35F3A6AA306}']
    property Article: IBOArticle3 readonly dispid 100;
    property ArticleTarif: IBIArticleTarif3 readonly dispid 101;
    property BorneSup: Double dispid 102;
    property Remise: IRemise2 dispid 103;
    property PrixNet: Double dispid 104;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IBIArticleTarifCond3
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {BC6D3A0F-C03E-46BC-968C-F6B61F8C0CF8}
// *********************************************************************//
  IBIArticleTarifCond3 = interface(IBIPersistObject)
    ['{BC6D3A0F-C03E-46BC-968C-F6B61F8C0CF8}']
    function Get_Article: IBOArticle3; safecall;
    function Get_ArticleTarif: IBIArticleTarif3; safecall;
    function Get_ArticleCond: IBOArticleCond3; safecall;
    procedure Set_ArticleCond(const pObject: IBOArticleCond3); safecall;
    function Get_Prix: Double; safecall;
    procedure Set_Prix(pVal: Double); safecall;
    property Article: IBOArticle3 read Get_Article;
    property ArticleTarif: IBIArticleTarif3 read Get_ArticleTarif;
    property ArticleCond: IBOArticleCond3 read Get_ArticleCond write Set_ArticleCond;
    property Prix: Double read Get_Prix write Set_Prix;
  end;

// *********************************************************************//
// DispIntf :    IBIArticleTarifCond3Disp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {BC6D3A0F-C03E-46BC-968C-F6B61F8C0CF8}
// *********************************************************************//
  IBIArticleTarifCond3Disp = dispinterface
    ['{BC6D3A0F-C03E-46BC-968C-F6B61F8C0CF8}']
    property Article: IBOArticle3 readonly dispid 100;
    property ArticleTarif: IBIArticleTarif3 readonly dispid 101;
    property ArticleCond: IBOArticleCond3 dispid 102;
    property Prix: Double dispid 103;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IBIFamilleTarifQte
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {423BBF33-D7A9-4E38-95F9-D11AAEA8D92B}
// *********************************************************************//
  IBIFamilleTarifQte = interface(IBIPersistObject)
    ['{423BBF33-D7A9-4E38-95F9-D11AAEA8D92B}']
    function Get_Famille: IBOFamille3; safecall;
    function Get_FamilleTarif: IBIFamilleTarif; safecall;
    function Get_BorneSup: Double; safecall;
    procedure Set_BorneSup(pVal: Double); safecall;
    function Get_Remise: IRemise2; safecall;
    procedure Set_Remise(const pObject: IRemise2); safecall;
    property Famille: IBOFamille3 read Get_Famille;
    property FamilleTarif: IBIFamilleTarif read Get_FamilleTarif;
    property BorneSup: Double read Get_BorneSup write Set_BorneSup;
    property Remise: IRemise2 read Get_Remise write Set_Remise;
  end;

// *********************************************************************//
// DispIntf :    IBIFamilleTarifQteDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {423BBF33-D7A9-4E38-95F9-D11AAEA8D92B}
// *********************************************************************//
  IBIFamilleTarifQteDisp = dispinterface
    ['{423BBF33-D7A9-4E38-95F9-D11AAEA8D92B}']
    property Famille: IBOFamille3 readonly dispid 100;
    property FamilleTarif: IBIFamilleTarif readonly dispid 101;
    property BorneSup: Double dispid 102;
    property Remise: IRemise2 dispid 103;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IBIReglement
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {B98A6894-49A1-4D62-AA03-4352DEE1556D}
// *********************************************************************//
  IBIReglement = interface(IBIPersistObject)
    ['{B98A6894-49A1-4D62-AA03-4352DEE1556D}']
    function Get_Reglement: IBPReglement3; safecall;
    procedure Set_Reglement(const pReglement: IBPReglement3); safecall;
    function Get_Condition: ReglementConditionType; safecall;
    procedure Set_Condition(pVal: ReglementConditionType); safecall;
    function Get_NbJour: Smallint; safecall;
    procedure Set_NbJour(pVal: Smallint); safecall;
    function Get_JourTb(sElt: Smallint): Smallint; safecall;
    procedure Set_JourTb(sElt: Smallint; pVal: Smallint); safecall;
    function Get_TRepart: ReglementRepartitionType; safecall;
    procedure Set_TRepart(pVal: ReglementRepartitionType); safecall;
    function Get_VRepart: Double; safecall;
    procedure Set_VRepart(pVal: Double); safecall;
    function Echeance(dDate: TDateTime): TDateTime; safecall;
    property Reglement: IBPReglement3 read Get_Reglement write Set_Reglement;
    property Condition: ReglementConditionType read Get_Condition write Set_Condition;
    property NbJour: Smallint read Get_NbJour write Set_NbJour;
    property JourTb[sElt: Smallint]: Smallint read Get_JourTb write Set_JourTb;
    property TRepart: ReglementRepartitionType read Get_TRepart write Set_TRepart;
    property VRepart: Double read Get_VRepart write Set_VRepart;
  end;

// *********************************************************************//
// DispIntf :    IBIReglementDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {B98A6894-49A1-4D62-AA03-4352DEE1556D}
// *********************************************************************//
  IBIReglementDisp = dispinterface
    ['{B98A6894-49A1-4D62-AA03-4352DEE1556D}']
    property Reglement: IBPReglement3 dispid 100;
    property Condition: ReglementConditionType dispid 101;
    property NbJour: Smallint dispid 102;
    property JourTb[sElt: Smallint]: Smallint dispid 103;
    property TRepart: ReglementRepartitionType dispid 104;
    property VRepart: Double dispid 105;
    function Echeance(dDate: TDateTime): TDateTime; dispid 106;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IBPReglement3
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {89BD76D6-0C06-4933-8010-9E694D32E23A}
// *********************************************************************//
  IBPReglement3 = interface(IBIPersistObject)
    ['{89BD76D6-0C06-4933-8010-9E694D32E23A}']
    function Get_FactoryReglement: IBPReglementFactory3; safecall;
    function Get_R_Intitule: WideString; safecall;
    procedure Set_R_Intitule(const pVal: WideString); safecall;
    function Get_R_Code: WideString; safecall;
    procedure Set_R_Code(const pVal: WideString); safecall;
    function Get_R_Type: ReglementType; safecall;
    procedure Set_R_Type(pVal: ReglementType); safecall;
    function Get_JournalClient: IBOJournal3; safecall;
    procedure Set_JournalClient(const pJournal: IBOJournal3); safecall;
    function Get_JournalFournisseur: IBOJournal3; safecall;
    procedure Set_JournalFournisseur(const pJournal: IBOJournal3); safecall;
    property FactoryReglement: IBPReglementFactory3 read Get_FactoryReglement;
    property R_Intitule: WideString read Get_R_Intitule write Set_R_Intitule;
    property R_Code: WideString read Get_R_Code write Set_R_Code;
    property R_Type: ReglementType read Get_R_Type write Set_R_Type;
    property JournalClient: IBOJournal3 read Get_JournalClient write Set_JournalClient;
    property JournalFournisseur: IBOJournal3 read Get_JournalFournisseur write Set_JournalFournisseur;
  end;

// *********************************************************************//
// DispIntf :    IBPReglement3Disp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {89BD76D6-0C06-4933-8010-9E694D32E23A}
// *********************************************************************//
  IBPReglement3Disp = dispinterface
    ['{89BD76D6-0C06-4933-8010-9E694D32E23A}']
    property FactoryReglement: IBPReglementFactory3 readonly dispid 100;
    property R_Intitule: WideString dispid 101;
    property R_Code: WideString dispid 102;
    property R_Type: ReglementType dispid 103;
    property JournalClient: IBOJournal3 dispid 104;
    property JournalFournisseur: IBOJournal3 dispid 105;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IBPReglementFactory3
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {56E45C6A-A97E-48CA-8EE7-2B6D75D380DC}
// *********************************************************************//
  IBPReglementFactory3 = interface(IBITypeObjectFactory)
    ['{56E45C6A-A97E-48CA-8EE7-2B6D75D380DC}']
    function ExistIntitule(const sIntitule: WideString): WordBool; safecall;
    function ReadIntitule(const sIntitule: WideString): IBPReglement3; safecall;
  end;

// *********************************************************************//
// DispIntf :    IBPReglementFactory3Disp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {56E45C6A-A97E-48CA-8EE7-2B6D75D380DC}
// *********************************************************************//
  IBPReglementFactory3Disp = dispinterface
    ['{56E45C6A-A97E-48CA-8EE7-2B6D75D380DC}']
    function ExistIntitule(const sIntitule: WideString): WordBool; dispid 10;
    function ReadIntitule(const sIntitule: WideString): IBPReglement3; dispid 11;
    property List: IBICollection readonly dispid 1;
    function Create: IBIPersistObject; dispid 2;
    function Read(const pOID: IBIObjectID): IBIPersistObject; dispid 3;
    function _QuerySynchro(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                           TypeExtraction: SynchroExtractType): IBICollection; dispid 4;
    function _QuerySynchroRemoved(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                                  TypeExtraction: SynchroExtractType): IBICollectionDispatch; dispid 5;
    function ReadFrom(const pStream: IStream): IBIPersistObject; dispid 6;
    property ListForward: IBICollection readonly dispid 7;
    function QueryPredicate(const pPredicate: IDispatch; const sSortDescriptors: WideString): IBICollection; dispid 8;
  end;

// *********************************************************************//
// Interface :   IBIParamDoc
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {E145D57A-3141-4B3D-82BA-698E74C345CF}
// *********************************************************************//
  IBIParamDoc = interface(IBIPersistObject)
    ['{E145D57A-3141-4B3D-82BA-698E74C345CF}']
    function Get_Intitule: WideString; safecall;
    procedure Set_Intitule(const pVal: WideString); safecall;
    function Get_Domaine: DomaineType; safecall;
    function Get_DO_Type: DocumentType; safecall;
    function Get_DO_Provenance: DocumentProvenanceType; safecall;
    function Get_Validation(sElt: Smallint): WordBool; safecall;
    procedure Set_Validation(sElt: Smallint; pVal: WordBool); safecall;
    function Get_DefaultSouche: IBISouche; safecall;
    procedure Set_DefaultSouche(const pObject: IBISouche); safecall;
    function ReadCurrentPiece(const pSouche: IBISouche): WideString; safecall;
    function Get_ValidationStr(sElt: Smallint): WideString; safecall;
    procedure Set_ValidationStr(sElt: Smallint; const pVal: WideString); safecall;
    property Intitule: WideString read Get_Intitule write Set_Intitule;
    property Domaine: DomaineType read Get_Domaine;
    property DO_Type: DocumentType read Get_DO_Type;
    property DO_Provenance: DocumentProvenanceType read Get_DO_Provenance;
    property Validation[sElt: Smallint]: WordBool read Get_Validation write Set_Validation;
    property DefaultSouche: IBISouche read Get_DefaultSouche write Set_DefaultSouche;
    property ValidationStr[sElt: Smallint]: WideString read Get_ValidationStr write Set_ValidationStr;
  end;

// *********************************************************************//
// DispIntf :    IBIParamDocDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {E145D57A-3141-4B3D-82BA-698E74C345CF}
// *********************************************************************//
  IBIParamDocDisp = dispinterface
    ['{E145D57A-3141-4B3D-82BA-698E74C345CF}']
    property Intitule: WideString dispid 100;
    property Domaine: DomaineType readonly dispid 101;
    property DO_Type: DocumentType readonly dispid 102;
    property DO_Provenance: DocumentProvenanceType readonly dispid 103;
    property Validation[sElt: Smallint]: WordBool dispid 104;
    property DefaultSouche: IBISouche dispid 105;
    function ReadCurrentPiece(const pSouche: IBISouche): WideString; dispid 106;
    property ValidationStr[sElt: Smallint]: WideString dispid 107;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IDossierExercice
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {13101937-F270-4381-8267-FF945752F147}
// *********************************************************************//
  IDossierExercice = interface(IDispatch)
    ['{13101937-F270-4381-8267-FF945752F147}']
    function Get_ReportANouveaux: IDossierExerciceReportANouveaux; safecall;
    function Get_ReportANouveauxIFRS: IDossierExerciceReportANouveauxIFRS; safecall;
    property ReportANouveaux: IDossierExerciceReportANouveaux read Get_ReportANouveaux;
    property ReportANouveauxIFRS: IDossierExerciceReportANouveauxIFRS read Get_ReportANouveauxIFRS;
  end;

// *********************************************************************//
// DispIntf :    IDossierExerciceDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {13101937-F270-4381-8267-FF945752F147}
// *********************************************************************//
  IDossierExerciceDisp = dispinterface
    ['{13101937-F270-4381-8267-FF945752F147}']
    property ReportANouveaux: IDossierExerciceReportANouveaux readonly dispid 10;
    property ReportANouveauxIFRS: IDossierExerciceReportANouveauxIFRS readonly dispid 11;
  end;

// *********************************************************************//
// Interface :   IDossierExerciceReportANouveaux
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {0720550E-B038-4F30-94FE-2C36B38F1015}
// *********************************************************************//
  IDossierExerciceReportANouveaux = interface(IDispatch)
    ['{0720550E-B038-4F30-94FE-2C36B38F1015}']
    function Get_Journal: IBOJournal3; safecall;
    procedure Set_Journal(const pJournal: IBOJournal3); safecall;
    property Journal: IBOJournal3 read Get_Journal write Set_Journal;
  end;

// *********************************************************************//
// DispIntf :    IDossierExerciceReportANouveauxDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {0720550E-B038-4F30-94FE-2C36B38F1015}
// *********************************************************************//
  IDossierExerciceReportANouveauxDisp = dispinterface
    ['{0720550E-B038-4F30-94FE-2C36B38F1015}']
    property Journal: IBOJournal3 dispid 10;
  end;

// *********************************************************************//
// Interface :   IDossierExerciceReportANouveauxIFRS
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {F5B9C88D-6B51-4965-B923-ECC2BA1B9445}
// *********************************************************************//
  IDossierExerciceReportANouveauxIFRS = interface(IDispatch)
    ['{F5B9C88D-6B51-4965-B923-ECC2BA1B9445}']
    function Get_Journal: IBOJournal3; safecall;
    procedure Set_Journal(const pJournal: IBOJournal3); safecall;
    property Journal: IBOJournal3 read Get_Journal write Set_Journal;
  end;

// *********************************************************************//
// DispIntf :    IDossierExerciceReportANouveauxIFRSDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {F5B9C88D-6B51-4965-B923-ECC2BA1B9445}
// *********************************************************************//
  IDossierExerciceReportANouveauxIFRSDisp = dispinterface
    ['{F5B9C88D-6B51-4965-B923-ECC2BA1B9445}']
    property Journal: IBOJournal3 dispid 10;
  end;

// *********************************************************************//
// Interface :   IDossierTiers
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {0D1D5B2E-39DD-4F18-B6F9-8441CEC6FC71}
// *********************************************************************//
  IDossierTiers = interface(IDispatch)
    ['{0D1D5B2E-39DD-4F18-B6F9-8441CEC6FC71}']
    function Get_EcheanceMax: Smallint; safecall;
    procedure Set_EcheanceMax(pVal: Smallint); safecall;
    property EcheanceMax: Smallint read Get_EcheanceMax write Set_EcheanceMax;
  end;

// *********************************************************************//
// DispIntf :    IDossierTiersDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {0D1D5B2E-39DD-4F18-B6F9-8441CEC6FC71}
// *********************************************************************//
  IDossierTiersDisp = dispinterface
    ['{0D1D5B2E-39DD-4F18-B6F9-8441CEC6FC71}']
    property EcheanceMax: Smallint dispid 10;
  end;

// *********************************************************************//
// Interface :   IBOClientLivraisonAllFactory
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {E2089F5D-CF35-430C-B7AB-EEE33F63FC20}
// *********************************************************************//
  IBOClientLivraisonAllFactory = interface(IBITypeObjectFactory)
    ['{E2089F5D-CF35-430C-B7AB-EEE33F63FC20}']
    function QueryClient(const pClient: IBOClient3): IBICollection; safecall;
    function _QuerySynchroOID(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                              TypeExtraction: SynchroExtractType): IBICollectionDispatch; safecall;
  end;

// *********************************************************************//
// DispIntf :    IBOClientLivraisonAllFactoryDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {E2089F5D-CF35-430C-B7AB-EEE33F63FC20}
// *********************************************************************//
  IBOClientLivraisonAllFactoryDisp = dispinterface
    ['{E2089F5D-CF35-430C-B7AB-EEE33F63FC20}']
    function QueryClient(const pClient: IBOClient3): IBICollection; dispid 10;
    function _QuerySynchroOID(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                              TypeExtraction: SynchroExtractType): IBICollectionDispatch; dispid 11;
    property List: IBICollection readonly dispid 1;
    function Create: IBIPersistObject; dispid 2;
    function Read(const pOID: IBIObjectID): IBIPersistObject; dispid 3;
    function _QuerySynchro(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                           TypeExtraction: SynchroExtractType): IBICollection; dispid 4;
    function _QuerySynchroRemoved(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                                  TypeExtraction: SynchroExtractType): IBICollectionDispatch; dispid 5;
    function ReadFrom(const pStream: IStream): IBIPersistObject; dispid 6;
    property ListForward: IBICollection readonly dispid 7;
    function QueryPredicate(const pPredicate: IDispatch; const sSortDescriptors: WideString): IBICollection; dispid 8;
  end;

// *********************************************************************//
// Interface :   IRegistreRevision
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {9F944E43-9415-408E-9CE1-28BD57964581}
// *********************************************************************//
  IRegistreRevision = interface(IDispatch)
    ['{9F944E43-9415-408E-9CE1-28BD57964581}']
    function Get_DateDebut: TDateTime; safecall;
    procedure Set_DateDebut(pVal: TDateTime); safecall;
    function Get_DateFin: TDateTime; safecall;
    procedure Set_DateFin(pVal: TDateTime); safecall;
    function Get_Reviseur: WideString; safecall;
    procedure Set_Reviseur(const pVal: WideString); safecall;
    function Get_Commentaire: WideString; safecall;
    procedure Set_Commentaire(const pVal: WideString); safecall;
    function Get_Controleur: WideString; safecall;
    procedure Set_Controleur(const pVal: WideString); safecall;
    function Get_DateRevision: TDateTime; safecall;
    procedure Set_DateRevision(pVal: TDateTime); safecall;
    function Get_DateControle: TDateTime; safecall;
    procedure Set_DateControle(pVal: TDateTime); safecall;
    property DateDebut: TDateTime read Get_DateDebut write Set_DateDebut;
    property DateFin: TDateTime read Get_DateFin write Set_DateFin;
    property Reviseur: WideString read Get_Reviseur write Set_Reviseur;
    property Commentaire: WideString read Get_Commentaire write Set_Commentaire;
    property Controleur: WideString read Get_Controleur write Set_Controleur;
    property DateRevision: TDateTime read Get_DateRevision write Set_DateRevision;
    property DateControle: TDateTime read Get_DateControle write Set_DateControle;
  end;

// *********************************************************************//
// DispIntf :    IRegistreRevisionDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {9F944E43-9415-408E-9CE1-28BD57964581}
// *********************************************************************//
  IRegistreRevisionDisp = dispinterface
    ['{9F944E43-9415-408E-9CE1-28BD57964581}']
    property DateDebut: TDateTime dispid 1;
    property DateFin: TDateTime dispid 2;
    property Reviseur: WideString dispid 3;
    property Commentaire: WideString dispid 4;
    property Controleur: WideString dispid 5;
    property DateRevision: TDateTime dispid 6;
    property DateControle: TDateTime dispid 7;
  end;

// *********************************************************************//
// Interface :   IRegistreTaxes
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {A701965F-758D-4805-AC6C-AC88E0F1CB2D}
// *********************************************************************//
  IRegistreTaxes = interface(IDispatch)
    ['{A701965F-758D-4805-AC6C-AC88E0F1CB2D}']
    function Get_NumRegistre: Integer; safecall;
    function Get_TypeRegistre: eTypeRegistre; safecall;
    procedure Set_TypeRegistre(pVal: eTypeRegistre); safecall;
    function Get_DateRegistre: TDateTime; safecall;
    procedure Set_DateRegistre(pVal: TDateTime); safecall;
    function Get_DatePiece: TDateTime; safecall;
    procedure Set_DatePiece(pVal: TDateTime); safecall;
    function Get_Ligne(sElt: Smallint): IRegistreLigneTaxe; safecall;
    procedure Set_Ligne(sElt: Smallint; const pObject: IRegistreLigneTaxe); safecall;
    procedure Clear; safecall;
    function Get_MaxLignes: Smallint; safecall;
    property NumRegistre: Integer read Get_NumRegistre;
    property TypeRegistre: eTypeRegistre read Get_TypeRegistre write Set_TypeRegistre;
    property DateRegistre: TDateTime read Get_DateRegistre write Set_DateRegistre;
    property DatePiece: TDateTime read Get_DatePiece write Set_DatePiece;
    property Ligne[sElt: Smallint]: IRegistreLigneTaxe read Get_Ligne write Set_Ligne;
    property MaxLignes: Smallint read Get_MaxLignes;
  end;

// *********************************************************************//
// DispIntf :    IRegistreTaxesDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {A701965F-758D-4805-AC6C-AC88E0F1CB2D}
// *********************************************************************//
  IRegistreTaxesDisp = dispinterface
    ['{A701965F-758D-4805-AC6C-AC88E0F1CB2D}']
    property NumRegistre: Integer readonly dispid 1;
    property TypeRegistre: eTypeRegistre dispid 2;
    property DateRegistre: TDateTime dispid 3;
    property DatePiece: TDateTime dispid 4;
    property Ligne[sElt: Smallint]: IRegistreLigneTaxe dispid 5;
    procedure Clear; dispid 8;
    property MaxLignes: Smallint readonly dispid 9;
  end;

// *********************************************************************//
// Interface :   IRegistreLigneTaxe
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {EF645EEC-797D-494D-A6A3-F063498129BA}
// *********************************************************************//
  IRegistreLigneTaxe = interface(IDispatch)
    ['{EF645EEC-797D-494D-A6A3-F063498129BA}']
    function Get_Numligne: Smallint; safecall;
    function Get_CompteG: IBOCompteG3; safecall;
    procedure Set_CompteG(const pCompteG: IBOCompteG3); safecall;
    function Get_TA_Provenance: TaxeProvenanceType; safecall;
    procedure Set_TA_Provenance(pVal: TaxeProvenanceType); safecall;
    function Get_TA_TTaux: TaxeTauxType; safecall;
    procedure Set_TA_TTaux(pVal: TaxeTauxType); safecall;
    function Get_TA_Taux: Double; safecall;
    procedure Set_TA_Taux(pVal: Double); safecall;
    function Get_RT_Base: Double; safecall;
    procedure Set_RT_Base(pVal: Double); safecall;
    function Get_RT_Montant: Double; safecall;
    procedure Set_RT_Montant(pVal: Double); safecall;
    function Get_Taxe: IBOTaxe3; safecall;
    procedure Set_Taxe(const pObject: IBOTaxe3); safecall;
    property Numligne: Smallint read Get_Numligne;
    property CompteG: IBOCompteG3 read Get_CompteG write Set_CompteG;
    property TA_Provenance: TaxeProvenanceType read Get_TA_Provenance write Set_TA_Provenance;
    property TA_TTaux: TaxeTauxType read Get_TA_TTaux write Set_TA_TTaux;
    property TA_Taux: Double read Get_TA_Taux write Set_TA_Taux;
    property RT_Base: Double read Get_RT_Base write Set_RT_Base;
    property RT_Montant: Double read Get_RT_Montant write Set_RT_Montant;
    property Taxe: IBOTaxe3 read Get_Taxe write Set_Taxe;
  end;

// *********************************************************************//
// DispIntf :    IRegistreLigneTaxeDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {EF645EEC-797D-494D-A6A3-F063498129BA}
// *********************************************************************//
  IRegistreLigneTaxeDisp = dispinterface
    ['{EF645EEC-797D-494D-A6A3-F063498129BA}']
    property Numligne: Smallint readonly dispid 100;
    property CompteG: IBOCompteG3 dispid 101;
    property TA_Provenance: TaxeProvenanceType dispid 102;
    property TA_TTaux: TaxeTauxType dispid 103;
    property TA_Taux: Double dispid 104;
    property RT_Base: Double dispid 105;
    property RT_Montant: Double dispid 106;
    property Taxe: IBOTaxe3 dispid 107;
  end;

// *********************************************************************//
// Interface :   IBSCPTAApplication3
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {B1746B73-A714-4275-8E61-BC4AB1B77BE0}
// *********************************************************************//
  IBSCPTAApplication3 = interface(IBIPersistStream)
    ['{B1746B73-A714-4275-8E61-BC4AB1B77BE0}']
    function Get_Licence: ILicence; safecall;
    function Get_Loggable: IBILoggable; safecall;
    function Get_Name: WideString; safecall;
    procedure Set_Name(const pName: WideString); safecall;
    function Get_FactoryTiers: IBOTiersFactory3; safecall;
    function Get_FactoryClient: IBOClientFactory3; safecall;
    function Get_FactoryProspect: IBOProspectFactory; safecall;
    function Get_FactoryClientProspect: IBOClientProspectFactory; safecall;
    function Get_FactoryFournisseur: IBOFournisseurFactory3; safecall;
    function Get_FactoryTiersAutre: IBOTiersAutreFactory2; safecall;
    function Get_FactoryTiersSalarie: IBOTiersSalarieFactory2; safecall;
    function Get_FactoryCompteG: IBOCompteGFactory3; safecall;
    function Get_FactoryCodeRisque: IBPCodeRisqueFactory; safecall;
    function Get_FactoryDevise: IBPDeviseFactory2; safecall;
    function Get_FactoryServiceContact: IBPServiceContactFactory; safecall;
    function Get_FactoryCompteA: IBOCompteAFactory3; safecall;
    function Get_FactoryReglement: IBPReglementFactory3; safecall;
    function Get_FactoryAnalyse: IBPAnalyseFactory; safecall;
    function Get_FactoryAnalytique: IBPAnalytiqueFactory3; safecall;
    function Get_FactoryEcriture: IBOEcritureFactory3; safecall;
    function Get_FactoryJournal: IBOJournalFactory3; safecall;
    function Get_FactoryTaxe: IBOTaxeFactory3; safecall;
    function Get_FactoryDossierContact: IBODossierContactFactory2; safecall;
    function Get_FactoryDossier: IBITypeObjectFactory; safecall;
    function Get_FactoryModeleEcriture: IBOModeleEcritureFactory2; safecall;
    function Get_FactoryRappel: IBPRappelFactory; safecall;
    function Get_FactoryTiersStat: IBPTiersStatFactory; safecall;
    function Get_FactoryModeleGrille: IBOModeleGrilleFactory; safecall;
    function Get_FactoryModeleReglement: IBOModeleReglementFactory; safecall;
    function Get_FactoryTiersType: IBPTiersFactory; safecall;
    function CreateProcess_Encoder: IPMEncoder; safecall;
    function Get_FactoryCollaborateur: IBOCollaborateurFactory; safecall;
    function Get_FactoryTypeContacts: IBPContactFactory; safecall;
    function Get_FactoryBanque: IBOBanqueFactory; safecall;
    function Get_FactoryNatureCompte: IBPNatureCompteFactory; safecall;
    function Get_FactoryStructBanque: IBPStructBanqueFactory; safecall;
    function CreateProcess_Lettrer: IPMLettrer; safecall;
    function Get_FactoryPays: IBOPaysFactory; safecall;
    function Get_FactoryCompteR: IBOCompteRFactory; safecall;
    function Get_FactoryEcritureA: IBOEcritureAAllFactory; safecall;
    function Get_FactoryJournalA: IBOJournalAFactory; safecall;
    function Get_FactoryEcritureOD: IBOEcritureODFactory; safecall;
    function Get_FactoryClientLivraison: IBOClientLivraisonAllFactory; safecall;
    function Get_FactoryTiersContact: IBITypeObjectFactory; safecall;
    function Get_FactoryLibelleCpta: IBITypeObjectFactory; safecall;
    function Get_Companies: ICompanies; safecall;
    function Get_CompanyServer: WideString; safecall;
    procedure Set_CompanyServer(const pName: WideString); safecall;
    function Get_CompanyDatabaseName: WideString; safecall;
    procedure Set_CompanyDatabaseName(const pName: WideString); safecall;
    function Get_CompanyName: WideString; safecall;
    procedure Set_CompanyName(const pName: WideString); safecall;
    function Get_FactoryBonAPayer: IBITypeObjectFactory; safecall;
    function CreateProcess_BAPValider(const pCollaborateur: IBOCollaborateur): IPMBonAPayer; safecall;
    function CreateProcess_BAPAttendre(const pCollaborateur: IBOCollaborateur): IPMBonAPayer; safecall;
    function CreateProcess_BAPPayer(const pCollaborateur: IBOCollaborateur): IPMBonAPayer; safecall;
    function CreateProcess_BAPConformer(const pCollaborateur: IBOCollaborateur): IPMBonAPayer; safecall;
    function CreateProcess_BAPRejeter(const pCollaborateur: IBOCollaborateur): IPMBonAPayer; safecall;
    property Licence: ILicence read Get_Licence;
    property Loggable: IBILoggable read Get_Loggable;
    property Name: WideString read Get_Name write Set_Name;
    property FactoryTiers: IBOTiersFactory3 read Get_FactoryTiers;
    property FactoryClient: IBOClientFactory3 read Get_FactoryClient;
    property FactoryProspect: IBOProspectFactory read Get_FactoryProspect;
    property FactoryClientProspect: IBOClientProspectFactory read Get_FactoryClientProspect;
    property FactoryFournisseur: IBOFournisseurFactory3 read Get_FactoryFournisseur;
    property FactoryTiersAutre: IBOTiersAutreFactory2 read Get_FactoryTiersAutre;
    property FactoryTiersSalarie: IBOTiersSalarieFactory2 read Get_FactoryTiersSalarie;
    property FactoryCompteG: IBOCompteGFactory3 read Get_FactoryCompteG;
    property FactoryCodeRisque: IBPCodeRisqueFactory read Get_FactoryCodeRisque;
    property FactoryDevise: IBPDeviseFactory2 read Get_FactoryDevise;
    property FactoryServiceContact: IBPServiceContactFactory read Get_FactoryServiceContact;
    property FactoryCompteA: IBOCompteAFactory3 read Get_FactoryCompteA;
    property FactoryReglement: IBPReglementFactory3 read Get_FactoryReglement;
    property FactoryAnalyse: IBPAnalyseFactory read Get_FactoryAnalyse;
    property FactoryAnalytique: IBPAnalytiqueFactory3 read Get_FactoryAnalytique;
    property FactoryEcriture: IBOEcritureFactory3 read Get_FactoryEcriture;
    property FactoryJournal: IBOJournalFactory3 read Get_FactoryJournal;
    property FactoryTaxe: IBOTaxeFactory3 read Get_FactoryTaxe;
    property FactoryDossierContact: IBODossierContactFactory2 read Get_FactoryDossierContact;
    property FactoryDossier: IBITypeObjectFactory read Get_FactoryDossier;
    property FactoryModeleEcriture: IBOModeleEcritureFactory2 read Get_FactoryModeleEcriture;
    property FactoryRappel: IBPRappelFactory read Get_FactoryRappel;
    property FactoryTiersStat: IBPTiersStatFactory read Get_FactoryTiersStat;
    property FactoryModeleGrille: IBOModeleGrilleFactory read Get_FactoryModeleGrille;
    property FactoryModeleReglement: IBOModeleReglementFactory read Get_FactoryModeleReglement;
    property FactoryTiersType: IBPTiersFactory read Get_FactoryTiersType;
    property FactoryCollaborateur: IBOCollaborateurFactory read Get_FactoryCollaborateur;
    property FactoryTypeContacts: IBPContactFactory read Get_FactoryTypeContacts;
    property FactoryBanque: IBOBanqueFactory read Get_FactoryBanque;
    property FactoryNatureCompte: IBPNatureCompteFactory read Get_FactoryNatureCompte;
    property FactoryStructBanque: IBPStructBanqueFactory read Get_FactoryStructBanque;
    property FactoryPays: IBOPaysFactory read Get_FactoryPays;
    property FactoryCompteR: IBOCompteRFactory read Get_FactoryCompteR;
    property FactoryEcritureA: IBOEcritureAAllFactory read Get_FactoryEcritureA;
    property FactoryJournalA: IBOJournalAFactory read Get_FactoryJournalA;
    property FactoryEcritureOD: IBOEcritureODFactory read Get_FactoryEcritureOD;
    property FactoryClientLivraison: IBOClientLivraisonAllFactory read Get_FactoryClientLivraison;
    property FactoryTiersContact: IBITypeObjectFactory read Get_FactoryTiersContact;
    property FactoryLibelleCpta: IBITypeObjectFactory read Get_FactoryLibelleCpta;
    property Companies: ICompanies read Get_Companies;
    property CompanyServer: WideString read Get_CompanyServer write Set_CompanyServer;
    property CompanyDatabaseName: WideString read Get_CompanyDatabaseName write Set_CompanyDatabaseName;
    property CompanyName: WideString read Get_CompanyName write Set_CompanyName;
    property FactoryBonAPayer: IBITypeObjectFactory read Get_FactoryBonAPayer;
  end;

// *********************************************************************//
// DispIntf :    IBSCPTAApplication3Disp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {B1746B73-A714-4275-8E61-BC4AB1B77BE0}
// *********************************************************************//
  IBSCPTAApplication3Disp = dispinterface
    ['{B1746B73-A714-4275-8E61-BC4AB1B77BE0}']
    property Licence: ILicence readonly dispid 27;
    property Loggable: IBILoggable readonly dispid 28;
    property Name: WideString dispid 10;
    property FactoryTiers: IBOTiersFactory3 readonly dispid 11;
    property FactoryClient: IBOClientFactory3 readonly dispid 12;
    property FactoryProspect: IBOProspectFactory readonly dispid 54;
    property FactoryClientProspect: IBOClientProspectFactory readonly dispid 53;
    property FactoryFournisseur: IBOFournisseurFactory3 readonly dispid 13;
    property FactoryTiersAutre: IBOTiersAutreFactory2 readonly dispid 30;
    property FactoryTiersSalarie: IBOTiersSalarieFactory2 readonly dispid 31;
    property FactoryCompteG: IBOCompteGFactory3 readonly dispid 14;
    property FactoryCodeRisque: IBPCodeRisqueFactory readonly dispid 15;
    property FactoryDevise: IBPDeviseFactory2 readonly dispid 16;
    property FactoryServiceContact: IBPServiceContactFactory readonly dispid 17;
    property FactoryCompteA: IBOCompteAFactory3 readonly dispid 18;
    property FactoryReglement: IBPReglementFactory3 readonly dispid 19;
    property FactoryAnalyse: IBPAnalyseFactory readonly dispid 20;
    property FactoryAnalytique: IBPAnalytiqueFactory3 readonly dispid 21;
    property FactoryEcriture: IBOEcritureFactory3 readonly dispid 22;
    property FactoryJournal: IBOJournalFactory3 readonly dispid 23;
    property FactoryTaxe: IBOTaxeFactory3 readonly dispid 24;
    property FactoryDossierContact: IBODossierContactFactory2 readonly dispid 25;
    property FactoryDossier: IBITypeObjectFactory readonly dispid 26;
    property FactoryModeleEcriture: IBOModeleEcritureFactory2 readonly dispid 32;
    property FactoryRappel: IBPRappelFactory readonly dispid 33;
    property FactoryTiersStat: IBPTiersStatFactory readonly dispid 34;
    property FactoryModeleGrille: IBOModeleGrilleFactory readonly dispid 35;
    property FactoryModeleReglement: IBOModeleReglementFactory readonly dispid 36;
    property FactoryTiersType: IBPTiersFactory readonly dispid 37;
    function CreateProcess_Encoder: IPMEncoder; dispid 100;
    property FactoryCollaborateur: IBOCollaborateurFactory readonly dispid 38;
    property FactoryTypeContacts: IBPContactFactory readonly dispid 39;
    property FactoryBanque: IBOBanqueFactory readonly dispid 40;
    property FactoryNatureCompte: IBPNatureCompteFactory readonly dispid 41;
    property FactoryStructBanque: IBPStructBanqueFactory readonly dispid 42;
    function CreateProcess_Lettrer: IPMLettrer; dispid 43;
    property FactoryPays: IBOPaysFactory readonly dispid 44;
    property FactoryCompteR: IBOCompteRFactory readonly dispid 45;
    property FactoryEcritureA: IBOEcritureAAllFactory readonly dispid 46;
    property FactoryJournalA: IBOJournalAFactory readonly dispid 47;
    property FactoryEcritureOD: IBOEcritureODFactory readonly dispid 48;
    property FactoryClientLivraison: IBOClientLivraisonAllFactory readonly dispid 49;
    property FactoryTiersContact: IBITypeObjectFactory readonly dispid 50;
    property FactoryLibelleCpta: IBITypeObjectFactory readonly dispid 51;
    property Companies: ICompanies readonly dispid 52;
    property CompanyServer: WideString dispid 150;
    property CompanyDatabaseName: WideString dispid 151;
    property CompanyName: WideString dispid 152;
    property FactoryBonAPayer: IBITypeObjectFactory readonly dispid 153;
    function CreateProcess_BAPValider(const pCollaborateur: IBOCollaborateur): IPMBonAPayer; dispid 154;
    function CreateProcess_BAPAttendre(const pCollaborateur: IBOCollaborateur): IPMBonAPayer; dispid 155;
    function CreateProcess_BAPPayer(const pCollaborateur: IBOCollaborateur): IPMBonAPayer; dispid 156;
    function CreateProcess_BAPConformer(const pCollaborateur: IBOCollaborateur): IPMBonAPayer; dispid 157;
    function CreateProcess_BAPRejeter(const pCollaborateur: IBOCollaborateur): IPMBonAPayer; dispid 158;
    property IsOpen: WordBool readonly dispid 1;
    procedure Open; dispid 2;
    procedure Close; dispid 3;
    procedure Create; dispid 4;
    property DatabaseInfo: IDatabaseInfo readonly dispid 5;
    property Synchro: ISynchroStream readonly dispid 6;
    function ReadFrom(const pStream: IStream): IBIPersistObject; dispid 7;
  end;

// *********************************************************************//
// Interface :   ILicence
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {A3174C49-1613-4E29-8829-E9D73DD3085A}
// *********************************************************************//
  ILicence = interface(IDispatch)
    ['{A3174C49-1613-4E29-8829-E9D73DD3085A}']
    function Get_IsValid: WordBool; safecall;
    procedure Set_Key(const Param1: WideString); safecall;
    function Get_Product: ILicenceProduct; safecall;
    function Get_Products: ILicenceProducts; safecall;
    procedure Set_Creator(const Param1: WideString); safecall;
    procedure Set_CreatorExtension(const Param1: WideString); safecall;
    procedure Set_WorkStationKey(const Param1: WideString); safecall;
    function Get_LicenceCount: Integer; safecall;
    procedure Set_LicenceCount(pVal: Integer); safecall;
    function Get_Version: WideString; safecall;
    property IsValid: WordBool read Get_IsValid;
    property Key: WideString write Set_Key;
    property Product: ILicenceProduct read Get_Product;
    property Products: ILicenceProducts read Get_Products;
    property Creator: WideString write Set_Creator;
    property CreatorExtension: WideString write Set_CreatorExtension;
    property WorkStationKey: WideString write Set_WorkStationKey;
    property LicenceCount: Integer read Get_LicenceCount write Set_LicenceCount;
    property Version: WideString read Get_Version;
  end;

// *********************************************************************//
// DispIntf :    ILicenceDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {A3174C49-1613-4E29-8829-E9D73DD3085A}
// *********************************************************************//
  ILicenceDisp = dispinterface
    ['{A3174C49-1613-4E29-8829-E9D73DD3085A}']
    property IsValid: WordBool readonly dispid 1;
    property Key: WideString writeonly dispid 2;
    property Product: ILicenceProduct readonly dispid 3;
    property Products: ILicenceProducts readonly dispid 4;
    property Creator: WideString writeonly dispid 5;
    property CreatorExtension: WideString writeonly dispid 6;
    property WorkStationKey: WideString writeonly dispid 7;
    property LicenceCount: Integer dispid 8;
    property Version: WideString readonly dispid 9;
  end;

// *********************************************************************//
// Interface :   ILicenceProduct
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {70453D27-A5E7-41FB-8673-F41ECE54DAE6}
// *********************************************************************//
  ILicenceProduct = interface(IDispatch)
    ['{70453D27-A5E7-41FB-8673-F41ECE54DAE6}']
    function Get_SerialNumber: WideString; safecall;
    function Get_Name: WideString; safecall;
    function Get_UserInfo: ILicenceUserInfo; safecall;
    property SerialNumber: WideString read Get_SerialNumber;
    property Name: WideString read Get_Name;
    property UserInfo: ILicenceUserInfo read Get_UserInfo;
  end;

// *********************************************************************//
// DispIntf :    ILicenceProductDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {70453D27-A5E7-41FB-8673-F41ECE54DAE6}
// *********************************************************************//
  ILicenceProductDisp = dispinterface
    ['{70453D27-A5E7-41FB-8673-F41ECE54DAE6}']
    property SerialNumber: WideString readonly dispid 1;
    property Name: WideString readonly dispid 2;
    property UserInfo: ILicenceUserInfo readonly dispid 3;
  end;

// *********************************************************************//
// Interface :   ILicenceUserInfo
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {DBEC83FF-AD37-40EC-BC80-DFB9A1A6C96B}
// *********************************************************************//
  ILicenceUserInfo = interface(IDispatch)
    ['{DBEC83FF-AD37-40EC-BC80-DFB9A1A6C96B}']
    function Get_RaisonSociale1: WideString; safecall;
    function Get_RaisonSociale2: WideString; safecall;
    function Get_Adresse1: WideString; safecall;
    function Get_Adresse2: WideString; safecall;
    function Get_CodePostal: WideString; safecall;
    function Get_Pays: WideString; safecall;
    function Get_Siret: WideString; safecall;
    function Get_NAF: WideString; safecall;
    function Get_Ville: WideString; safecall;
    function Get_Telephone: WideString; safecall;
    function Get_Telecopie: WideString; safecall;
    property RaisonSociale1: WideString read Get_RaisonSociale1;
    property RaisonSociale2: WideString read Get_RaisonSociale2;
    property Adresse1: WideString read Get_Adresse1;
    property Adresse2: WideString read Get_Adresse2;
    property CodePostal: WideString read Get_CodePostal;
    property Pays: WideString read Get_Pays;
    property Siret: WideString read Get_Siret;
    property NAF: WideString read Get_NAF;
    property Ville: WideString read Get_Ville;
    property Telephone: WideString read Get_Telephone;
    property Telecopie: WideString read Get_Telecopie;
  end;

// *********************************************************************//
// DispIntf :    ILicenceUserInfoDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {DBEC83FF-AD37-40EC-BC80-DFB9A1A6C96B}
// *********************************************************************//
  ILicenceUserInfoDisp = dispinterface
    ['{DBEC83FF-AD37-40EC-BC80-DFB9A1A6C96B}']
    property RaisonSociale1: WideString readonly dispid 1;
    property RaisonSociale2: WideString readonly dispid 2;
    property Adresse1: WideString readonly dispid 3;
    property Adresse2: WideString readonly dispid 4;
    property CodePostal: WideString readonly dispid 5;
    property Pays: WideString readonly dispid 6;
    property Siret: WideString readonly dispid 7;
    property NAF: WideString readonly dispid 8;
    property Ville: WideString readonly dispid 9;
    property Telephone: WideString readonly dispid 10;
    property Telecopie: WideString readonly dispid 11;
  end;

// *********************************************************************//
// Interface :   ILicenceProducts
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {F17E2AE1-5F9F-4CE1-AE6D-A84885C5F848}
// *********************************************************************//
  ILicenceProducts = interface(IDispatch)
    ['{F17E2AE1-5F9F-4CE1-AE6D-A84885C5F848}']
    function Get__NewEnum: IUnknown; safecall;
    function Get_Item(lIndex: Integer): ILicenceProduct; safecall;
    function Get_Count: Integer; safecall;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Item[lIndex: Integer]: ILicenceProduct read Get_Item; default;
    property Count: Integer read Get_Count;
  end;

// *********************************************************************//
// DispIntf :    ILicenceProductsDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {F17E2AE1-5F9F-4CE1-AE6D-A84885C5F848}
// *********************************************************************//
  ILicenceProductsDisp = dispinterface
    ['{F17E2AE1-5F9F-4CE1-AE6D-A84885C5F848}']
    property _NewEnum: IUnknown readonly dispid -4;
    property Item[lIndex: Integer]: ILicenceProduct readonly dispid 0; default;
    property Count: Integer readonly dispid 1;
  end;

// *********************************************************************//
// Interface :   IBILoggable
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {08B40F4E-D3D6-4546-AF3E-F386929F1F39}
// *********************************************************************//
  IBILoggable = interface(IDispatch)
    ['{08B40F4E-D3D6-4546-AF3E-F386929F1F39}']
    function Get_UserName: WideString; safecall;
    procedure Set_UserName(const pVal: WideString); safecall;
    procedure Set_UserPwd(const Param1: WideString); safecall;
    function Get_IsAdministrator: WordBool; safecall;
    function Get_IsLogged: WordBool; safecall;
    procedure Set_ManagementPassword(const Param1: WideString); safecall;
    procedure Set_ServiceId(const Param1: WideString); safecall;
    procedure Set_ServiceName(const Param1: WideString); safecall;
    procedure Set_ApplicationToken(const Param1: WideString); safecall;
    property UserName: WideString read Get_UserName write Set_UserName;
    property UserPwd: WideString write Set_UserPwd;
    property IsAdministrator: WordBool read Get_IsAdministrator;
    property IsLogged: WordBool read Get_IsLogged;
    property ManagementPassword: WideString write Set_ManagementPassword;
    property ServiceId: WideString write Set_ServiceId;
    property ServiceName: WideString write Set_ServiceName;
    property ApplicationToken: WideString write Set_ApplicationToken;
  end;

// *********************************************************************//
// DispIntf :    IBILoggableDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {08B40F4E-D3D6-4546-AF3E-F386929F1F39}
// *********************************************************************//
  IBILoggableDisp = dispinterface
    ['{08B40F4E-D3D6-4546-AF3E-F386929F1F39}']
    property UserName: WideString dispid 1;
    property UserPwd: WideString writeonly dispid 2;
    property IsAdministrator: WordBool readonly dispid 3;
    property IsLogged: WordBool readonly dispid 4;
    property ManagementPassword: WideString writeonly dispid 5;
    property ServiceId: WideString writeonly dispid 6;
    property ServiceName: WideString writeonly dispid 7;
    property ApplicationToken: WideString writeonly dispid 8;
  end;

// *********************************************************************//
// Interface :   IBOTiersAutreFactory2
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {51DACD11-D4DB-406F-8EDC-EE01A4DC20D2}
// *********************************************************************//
  IBOTiersAutreFactory2 = interface(IBITypeObjectFactory)
    ['{51DACD11-D4DB-406F-8EDC-EE01A4DC20D2}']
    function ExistNumero(const sNum: WideString): WordBool; safecall;
    function ReadNumero(const sNum: WideString): IBOTiers3; safecall;
  end;

// *********************************************************************//
// DispIntf :    IBOTiersAutreFactory2Disp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {51DACD11-D4DB-406F-8EDC-EE01A4DC20D2}
// *********************************************************************//
  IBOTiersAutreFactory2Disp = dispinterface
    ['{51DACD11-D4DB-406F-8EDC-EE01A4DC20D2}']
    function ExistNumero(const sNum: WideString): WordBool; dispid 11;
    function ReadNumero(const sNum: WideString): IBOTiers3; dispid 12;
    property List: IBICollection readonly dispid 1;
    function Create: IBIPersistObject; dispid 2;
    function Read(const pOID: IBIObjectID): IBIPersistObject; dispid 3;
    function _QuerySynchro(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                           TypeExtraction: SynchroExtractType): IBICollection; dispid 4;
    function _QuerySynchroRemoved(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                                  TypeExtraction: SynchroExtractType): IBICollectionDispatch; dispid 5;
    function ReadFrom(const pStream: IStream): IBIPersistObject; dispid 6;
    property ListForward: IBICollection readonly dispid 7;
    function QueryPredicate(const pPredicate: IDispatch; const sSortDescriptors: WideString): IBICollection; dispid 8;
  end;

// *********************************************************************//
// Interface :   IBOTiersSalarieFactory2
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {E7DA8EAD-5ABE-416B-A688-3702DF85B8C3}
// *********************************************************************//
  IBOTiersSalarieFactory2 = interface(IBITypeObjectFactory)
    ['{E7DA8EAD-5ABE-416B-A688-3702DF85B8C3}']
    function ExistNumero(const sNum: WideString): WordBool; safecall;
    function ReadNumero(const sNum: WideString): IBOTiers3; safecall;
  end;

// *********************************************************************//
// DispIntf :    IBOTiersSalarieFactory2Disp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {E7DA8EAD-5ABE-416B-A688-3702DF85B8C3}
// *********************************************************************//
  IBOTiersSalarieFactory2Disp = dispinterface
    ['{E7DA8EAD-5ABE-416B-A688-3702DF85B8C3}']
    function ExistNumero(const sNum: WideString): WordBool; dispid 11;
    function ReadNumero(const sNum: WideString): IBOTiers3; dispid 12;
    property List: IBICollection readonly dispid 1;
    function Create: IBIPersistObject; dispid 2;
    function Read(const pOID: IBIObjectID): IBIPersistObject; dispid 3;
    function _QuerySynchro(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                           TypeExtraction: SynchroExtractType): IBICollection; dispid 4;
    function _QuerySynchroRemoved(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                                  TypeExtraction: SynchroExtractType): IBICollectionDispatch; dispid 5;
    function ReadFrom(const pStream: IStream): IBIPersistObject; dispid 6;
    property ListForward: IBICollection readonly dispid 7;
    function QueryPredicate(const pPredicate: IDispatch; const sSortDescriptors: WideString): IBICollection; dispid 8;
  end;

// *********************************************************************//
// Interface :   IBOEcritureFactory3
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {80BB0BCE-D3A5-465E-A88B-3D4B97CCC836}
// *********************************************************************//
  IBOEcritureFactory3 = interface(IBITypeObjectFactory)
    ['{80BB0BCE-D3A5-465E-A88B-3D4B97CCC836}']
    function QueryJournalPeriode(const Journal: IBOJournal3; DatePeriode: TDateTime): IBICollection; safecall;
    function QueryTiers(const Tiers: IBOTiers3; const CompteG: IBOCompteG3; 
                        const Journal: IBOJournal3; DateDebut: TDateTime; DateFin: TDateTime): IBICollection; safecall;
    function Get_InfoLibreFields: IBIFields; safecall;
    function ExistNumero(EC_No: Integer): WordBool; safecall;
    function ReadNumero(EC_No: Integer): IBOEcriture3; safecall;
    function QueryCompteG(const CompteG: IBOCompteG3; DateDebut: TDateTime; DateFin: TDateTime): IBICollection; safecall;
    function _QuerySynchroOID(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                              TypeExtraction: SynchroExtractType): IBICollectionDispatch; safecall;
    procedure CreateInfoLibre(const sName: WideString; sType: eTypeInfoLibre; ilength: Smallint); safecall;
    property InfoLibreFields: IBIFields read Get_InfoLibreFields;
  end;

// *********************************************************************//
// DispIntf :    IBOEcritureFactory3Disp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {80BB0BCE-D3A5-465E-A88B-3D4B97CCC836}
// *********************************************************************//
  IBOEcritureFactory3Disp = dispinterface
    ['{80BB0BCE-D3A5-465E-A88B-3D4B97CCC836}']
    function QueryJournalPeriode(const Journal: IBOJournal3; DatePeriode: TDateTime): IBICollection; dispid 10;
    function QueryTiers(const Tiers: IBOTiers3; const CompteG: IBOCompteG3; 
                        const Journal: IBOJournal3; DateDebut: TDateTime; DateFin: TDateTime): IBICollection; dispid 11;
    property InfoLibreFields: IBIFields readonly dispid 12;
    function ExistNumero(EC_No: Integer): WordBool; dispid 13;
    function ReadNumero(EC_No: Integer): IBOEcriture3; dispid 14;
    function QueryCompteG(const CompteG: IBOCompteG3; DateDebut: TDateTime; DateFin: TDateTime): IBICollection; dispid 15;
    function _QuerySynchroOID(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                              TypeExtraction: SynchroExtractType): IBICollectionDispatch; dispid 16;
    procedure CreateInfoLibre(const sName: WideString; sType: eTypeInfoLibre; ilength: Smallint); dispid 17;
    property List: IBICollection readonly dispid 1;
    function Create: IBIPersistObject; dispid 2;
    function Read(const pOID: IBIObjectID): IBIPersistObject; dispid 3;
    function _QuerySynchro(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                           TypeExtraction: SynchroExtractType): IBICollection; dispid 4;
    function _QuerySynchroRemoved(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                                  TypeExtraction: SynchroExtractType): IBICollectionDispatch; dispid 5;
    function ReadFrom(const pStream: IStream): IBIPersistObject; dispid 6;
    property ListForward: IBICollection readonly dispid 7;
    function QueryPredicate(const pPredicate: IDispatch; const sSortDescriptors: WideString): IBICollection; dispid 8;
  end;

// *********************************************************************//
// Interface :   IBOEcriture3
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {B7CB9E3C-FD42-4F46-9893-9E27B34C8B17}
// *********************************************************************//
  IBOEcriture3 = interface(IBIPersistObject)
    ['{B7CB9E3C-FD42-4F46-9893-9E27B34C8B17}']
    function Get_FactoryEcriture: IBOEcritureFactory3; safecall;
    function Get_FactoryEcritureA: IBOEcritureAFactory2; safecall;
    function Get_Journal: IBOJournal3; safecall;
    procedure Set_Journal(const pJournal: IBOJournal3); safecall;
    function Get_Date: TDateTime; safecall;
    procedure Set_Date(pVal: TDateTime); safecall;
    function Get_DateSaisie: TDateTime; safecall;
    procedure Set_DateSaisie(pVal: TDateTime); safecall;
    function Get_EC_Piece: WideString; safecall;
    procedure Set_EC_Piece(const pVal: WideString); safecall;
    function Get_EC_RefPiece: WideString; safecall;
    procedure Set_EC_RefPiece(const pVal: WideString); safecall;
    function Get_EC_TresoPiece: WideString; safecall;
    function Get_CompteG: IBOCompteG3; safecall;
    procedure Set_CompteG(const pCompteG: IBOCompteG3); safecall;
    function Get_CompteGContrepartie: IBOCompteG3; safecall;
    procedure Set_CompteGContrepartie(const pCompteG: IBOCompteG3); safecall;
    function Get_Tiers: IBOTiers3; safecall;
    procedure Set_Tiers(const pTiers: IBOTiers3); safecall;
    function Get_EC_Intitule: WideString; safecall;
    procedure Set_EC_Intitule(const pVal: WideString); safecall;
    function Get_Reglement: IBPReglement3; safecall;
    procedure Set_Reglement(const pReglement: IBPReglement3); safecall;
    function Get_EC_Echeance: TDateTime; safecall;
    procedure Set_EC_Echeance(pVal: TDateTime); safecall;
    function Get_EC_Parite: Double; safecall;
    procedure Set_EC_Parite(pVal: Double); safecall;
    function Get_EC_Quantite: Double; safecall;
    procedure Set_EC_Quantite(pVal: Double); safecall;
    function Get_Devise: IBPDevise2; safecall;
    procedure Set_Devise(const pDevise: IBPDevise2); safecall;
    function Get_EC_Sens: EcritureSensType; safecall;
    procedure Set_EC_Sens(pVal: EcritureSensType); safecall;
    function Get_EC_Montant: Double; safecall;
    procedure Set_EC_Montant(pVal: Double); safecall;
    function Get_HasLettrage: WordBool; safecall;
    function Get_EC_Lettrage: WideString; safecall;
    function Get_HasPointage: WordBool; safecall;
    function Get_EC_Pointage: WideString; safecall;
    function Get_EC_Impression: EcritureImpressionType; safecall;
    function Get_EC_Cloture: WordBool; safecall;
    function Get_EC_Type: EcritureType; safecall;
    function Get_EC_Rappel: Smallint; safecall;
    function Get_TiersContrepartie: IBOTiers3; safecall;
    procedure Set_TiersContrepartie(const pTiers: IBOTiers3); safecall;
    function Get_HasLettrageQ: WordBool; safecall;
    function Get_EC_LettrageQ: WideString; safecall;
    function Get_EC_ANType: EcritureANType; safecall;
    function Get_EC_RType: WordBool; safecall;
    function Get_EC_Devise: Double; safecall;
    procedure Set_EC_Devise(pVal: Double); safecall;
    function Get_EC_Remise: WordBool; safecall;
    function Get_EC_ExportExpert: EcritureExpertType; safecall;
    function Get_Taxe: IBOTaxe3; safecall;
    procedure Set_Taxe(const pTaxe: IBOTaxe3); safecall;
    function Get_InfoLibre: IBIValues; safecall;
    function Get_EC_No: Integer; safecall;
    function Get_EC_Norme: EcritureNormeType; safecall;
    procedure Set_EC_Norme(pVal: EcritureNormeType); safecall;
    function Get_TA_Provenance: TaxeProvenanceType; safecall;
    procedure Set_TA_Provenance(pVal: TaxeProvenanceType); safecall;
    function Get_EC_Reference: WideString; safecall;
    procedure Set_EC_Reference(const pVal: WideString); safecall;
    function Get_EC_NoCloture: Integer; safecall;
    function Get_HasTA_Provenance: WordBool; safecall;
    procedure Set_HasTA_Provenance(pVal: WordBool); safecall;
    function Get_FactoryEcritureMedia: IBITypeObjectFactory; safecall;
    function Get_EC_DateRappro: TDateTime; safecall;
    function Get_RegistreRevision: IRegistreRevision; safecall;
    function Get_HistoriqueBonAPayer: IBonAPayer; safecall;
    function Get_RegistreTaxes: IRegistreTaxes; safecall;
    procedure WriteDefaultRegistreTaxe; safecall;
    function HasRegistreTaxes: WordBool; safecall;
    property FactoryEcriture: IBOEcritureFactory3 read Get_FactoryEcriture;
    property FactoryEcritureA: IBOEcritureAFactory2 read Get_FactoryEcritureA;
    property Journal: IBOJournal3 read Get_Journal write Set_Journal;
    property Date: TDateTime read Get_Date write Set_Date;
    property DateSaisie: TDateTime read Get_DateSaisie write Set_DateSaisie;
    property EC_Piece: WideString read Get_EC_Piece write Set_EC_Piece;
    property EC_RefPiece: WideString read Get_EC_RefPiece write Set_EC_RefPiece;
    property EC_TresoPiece: WideString read Get_EC_TresoPiece;
    property CompteG: IBOCompteG3 read Get_CompteG write Set_CompteG;
    property CompteGContrepartie: IBOCompteG3 read Get_CompteGContrepartie write Set_CompteGContrepartie;
    property Tiers: IBOTiers3 read Get_Tiers write Set_Tiers;
    property EC_Intitule: WideString read Get_EC_Intitule write Set_EC_Intitule;
    property Reglement: IBPReglement3 read Get_Reglement write Set_Reglement;
    property EC_Echeance: TDateTime read Get_EC_Echeance write Set_EC_Echeance;
    property EC_Parite: Double read Get_EC_Parite write Set_EC_Parite;
    property EC_Quantite: Double read Get_EC_Quantite write Set_EC_Quantite;
    property Devise: IBPDevise2 read Get_Devise write Set_Devise;
    property EC_Sens: EcritureSensType read Get_EC_Sens write Set_EC_Sens;
    property EC_Montant: Double read Get_EC_Montant write Set_EC_Montant;
    property HasLettrage: WordBool read Get_HasLettrage;
    property EC_Lettrage: WideString read Get_EC_Lettrage;
    property HasPointage: WordBool read Get_HasPointage;
    property EC_Pointage: WideString read Get_EC_Pointage;
    property EC_Impression: EcritureImpressionType read Get_EC_Impression;
    property EC_Cloture: WordBool read Get_EC_Cloture;
    property EC_Type: EcritureType read Get_EC_Type;
    property EC_Rappel: Smallint read Get_EC_Rappel;
    property TiersContrepartie: IBOTiers3 read Get_TiersContrepartie write Set_TiersContrepartie;
    property HasLettrageQ: WordBool read Get_HasLettrageQ;
    property EC_LettrageQ: WideString read Get_EC_LettrageQ;
    property EC_ANType: EcritureANType read Get_EC_ANType;
    property EC_RType: WordBool read Get_EC_RType;
    property EC_Devise: Double read Get_EC_Devise write Set_EC_Devise;
    property EC_Remise: WordBool read Get_EC_Remise;
    property EC_ExportExpert: EcritureExpertType read Get_EC_ExportExpert;
    property Taxe: IBOTaxe3 read Get_Taxe write Set_Taxe;
    property InfoLibre: IBIValues read Get_InfoLibre;
    property EC_No: Integer read Get_EC_No;
    property EC_Norme: EcritureNormeType read Get_EC_Norme write Set_EC_Norme;
    property TA_Provenance: TaxeProvenanceType read Get_TA_Provenance write Set_TA_Provenance;
    property EC_Reference: WideString read Get_EC_Reference write Set_EC_Reference;
    property EC_NoCloture: Integer read Get_EC_NoCloture;
    property HasTA_Provenance: WordBool read Get_HasTA_Provenance write Set_HasTA_Provenance;
    property FactoryEcritureMedia: IBITypeObjectFactory read Get_FactoryEcritureMedia;
    property EC_DateRappro: TDateTime read Get_EC_DateRappro;
    property RegistreRevision: IRegistreRevision read Get_RegistreRevision;
    property HistoriqueBonAPayer: IBonAPayer read Get_HistoriqueBonAPayer;
    property RegistreTaxes: IRegistreTaxes read Get_RegistreTaxes;
  end;

// *********************************************************************//
// DispIntf :    IBOEcriture3Disp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {B7CB9E3C-FD42-4F46-9893-9E27B34C8B17}
// *********************************************************************//
  IBOEcriture3Disp = dispinterface
    ['{B7CB9E3C-FD42-4F46-9893-9E27B34C8B17}']
    property FactoryEcriture: IBOEcritureFactory3 readonly dispid 100;
    property FactoryEcritureA: IBOEcritureAFactory2 readonly dispid 101;
    property Journal: IBOJournal3 dispid 102;
    property Date: TDateTime dispid 103;
    property DateSaisie: TDateTime dispid 104;
    property EC_Piece: WideString dispid 105;
    property EC_RefPiece: WideString dispid 106;
    property EC_TresoPiece: WideString readonly dispid 107;
    property CompteG: IBOCompteG3 dispid 108;
    property CompteGContrepartie: IBOCompteG3 dispid 109;
    property Tiers: IBOTiers3 dispid 110;
    property EC_Intitule: WideString dispid 111;
    property Reglement: IBPReglement3 dispid 112;
    property EC_Echeance: TDateTime dispid 113;
    property EC_Parite: Double dispid 114;
    property EC_Quantite: Double dispid 115;
    property Devise: IBPDevise2 dispid 116;
    property EC_Sens: EcritureSensType dispid 117;
    property EC_Montant: Double dispid 118;
    property HasLettrage: WordBool readonly dispid 119;
    property EC_Lettrage: WideString readonly dispid 120;
    property HasPointage: WordBool readonly dispid 121;
    property EC_Pointage: WideString readonly dispid 122;
    property EC_Impression: EcritureImpressionType readonly dispid 123;
    property EC_Cloture: WordBool readonly dispid 124;
    property EC_Type: EcritureType readonly dispid 125;
    property EC_Rappel: Smallint readonly dispid 126;
    property TiersContrepartie: IBOTiers3 dispid 127;
    property HasLettrageQ: WordBool readonly dispid 128;
    property EC_LettrageQ: WideString readonly dispid 129;
    property EC_ANType: EcritureANType readonly dispid 130;
    property EC_RType: WordBool readonly dispid 131;
    property EC_Devise: Double dispid 132;
    property EC_Remise: WordBool readonly dispid 133;
    property EC_ExportExpert: EcritureExpertType readonly dispid 135;
    property Taxe: IBOTaxe3 dispid 136;
    property InfoLibre: IBIValues readonly dispid 137;
    property EC_No: Integer readonly dispid 138;
    property EC_Norme: EcritureNormeType dispid 139;
    property TA_Provenance: TaxeProvenanceType dispid 140;
    property EC_Reference: WideString dispid 141;
    property EC_NoCloture: Integer readonly dispid 142;
    property HasTA_Provenance: WordBool dispid 143;
    property FactoryEcritureMedia: IBITypeObjectFactory readonly dispid 144;
    property EC_DateRappro: TDateTime readonly dispid 145;
    property RegistreRevision: IRegistreRevision readonly dispid 146;
    property HistoriqueBonAPayer: IBonAPayer readonly dispid 147;
    property RegistreTaxes: IRegistreTaxes readonly dispid 148;
    procedure WriteDefaultRegistreTaxe; dispid 149;
    function HasRegistreTaxes: WordBool; dispid 151;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IBOEcritureAFactory2
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {4DB1212D-1E51-4E42-A13D-3EA526FF4907}
// *********************************************************************//
  IBOEcritureAFactory2 = interface(IBITypeObjectFactory)
    ['{4DB1212D-1E51-4E42-A13D-3EA526FF4907}']
    function QueryPlanA(const pAnalytique: IBPAnalytique3): IBICollection; safecall;
    function QuerySectionA(const CompteA: IBOCompteA3): IBICollection; safecall;
  end;

// *********************************************************************//
// DispIntf :    IBOEcritureAFactory2Disp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {4DB1212D-1E51-4E42-A13D-3EA526FF4907}
// *********************************************************************//
  IBOEcritureAFactory2Disp = dispinterface
    ['{4DB1212D-1E51-4E42-A13D-3EA526FF4907}']
    function QueryPlanA(const pAnalytique: IBPAnalytique3): IBICollection; dispid 10;
    function QuerySectionA(const CompteA: IBOCompteA3): IBICollection; dispid 11;
    property List: IBICollection readonly dispid 1;
    function Create: IBIPersistObject; dispid 2;
    function Read(const pOID: IBIObjectID): IBIPersistObject; dispid 3;
    function _QuerySynchro(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                           TypeExtraction: SynchroExtractType): IBICollection; dispid 4;
    function _QuerySynchroRemoved(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                                  TypeExtraction: SynchroExtractType): IBICollectionDispatch; dispid 5;
    function ReadFrom(const pStream: IStream): IBIPersistObject; dispid 6;
    property ListForward: IBICollection readonly dispid 7;
    function QueryPredicate(const pPredicate: IDispatch; const sSortDescriptors: WideString): IBICollection; dispid 8;
  end;

// *********************************************************************//
// Interface :   IBonAPayer
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {186C0C24-47B7-468C-B7A9-BE00BE68C1CA}
// *********************************************************************//
  IBonAPayer = interface(IDispatch)
    ['{186C0C24-47B7-468C-B7A9-BE00BE68C1CA}']
    function Get_Statut: eTypeBAP; safecall;
    function Get_Collaborateur: IBOCollaborateur; safecall;
    function Get_DateAction: TDateTime; safecall;
    function Get_Commentaire: WideString; safecall;
    function Get_Application: Smallint; safecall;
    function Get_Retour: Smallint; safecall;
    property Statut: eTypeBAP read Get_Statut;
    property Collaborateur: IBOCollaborateur read Get_Collaborateur;
    property DateAction: TDateTime read Get_DateAction;
    property Commentaire: WideString read Get_Commentaire;
    property Application: Smallint read Get_Application;
    property Retour: Smallint read Get_Retour;
  end;

// *********************************************************************//
// DispIntf :    IBonAPayerDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {186C0C24-47B7-468C-B7A9-BE00BE68C1CA}
// *********************************************************************//
  IBonAPayerDisp = dispinterface
    ['{186C0C24-47B7-468C-B7A9-BE00BE68C1CA}']
    property Statut: eTypeBAP readonly dispid 100;
    property Collaborateur: IBOCollaborateur readonly dispid 101;
    property DateAction: TDateTime readonly dispid 102;
    property Commentaire: WideString readonly dispid 103;
    property Application: Smallint readonly dispid 104;
    property Retour: Smallint readonly dispid 105;
  end;

// *********************************************************************//
// Interface :   IBODossierContactFactory2
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {D1B37523-CA98-4C53-9002-14C5C02DB2F3}
// *********************************************************************//
  IBODossierContactFactory2 = interface(IBITypeObjectFactory)
    ['{D1B37523-CA98-4C53-9002-14C5C02DB2F3}']
    function ExistNomPrenom(const sNom: WideString; const sPrenom: WideString): WordBool; safecall;
    function ReadNomPrenom(const sNom: WideString; const sPrenom: WideString): IBODossierContact3; safecall;
  end;

// *********************************************************************//
// DispIntf :    IBODossierContactFactory2Disp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {D1B37523-CA98-4C53-9002-14C5C02DB2F3}
// *********************************************************************//
  IBODossierContactFactory2Disp = dispinterface
    ['{D1B37523-CA98-4C53-9002-14C5C02DB2F3}']
    function ExistNomPrenom(const sNom: WideString; const sPrenom: WideString): WordBool; dispid 11;
    function ReadNomPrenom(const sNom: WideString; const sPrenom: WideString): IBODossierContact3; dispid 12;
    property List: IBICollection readonly dispid 1;
    function Create: IBIPersistObject; dispid 2;
    function Read(const pOID: IBIObjectID): IBIPersistObject; dispid 3;
    function _QuerySynchro(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                           TypeExtraction: SynchroExtractType): IBICollection; dispid 4;
    function _QuerySynchroRemoved(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                                  TypeExtraction: SynchroExtractType): IBICollectionDispatch; dispid 5;
    function ReadFrom(const pStream: IStream): IBIPersistObject; dispid 6;
    property ListForward: IBICollection readonly dispid 7;
    function QueryPredicate(const pPredicate: IDispatch; const sSortDescriptors: WideString): IBICollection; dispid 8;
  end;

// *********************************************************************//
// Interface :   IBODossierContact3
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {F4DDFA25-7D82-47A6-A54A-EDC422FEC76D}
// *********************************************************************//
  IBODossierContact3 = interface(IBIContact2)
    ['{F4DDFA25-7D82-47A6-A54A-EDC422FEC76D}']
    function Get_FactoryDossierContact: IBODossierContactFactory2; safecall;
    function Get_Adresse: IAdresse; safecall;
    procedure Set_Adresse(const pAdresse: IAdresse); safecall;
    property FactoryDossierContact: IBODossierContactFactory2 read Get_FactoryDossierContact;
    property Adresse: IAdresse read Get_Adresse write Set_Adresse;
  end;

// *********************************************************************//
// DispIntf :    IBODossierContact3Disp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {F4DDFA25-7D82-47A6-A54A-EDC422FEC76D}
// *********************************************************************//
  IBODossierContact3Disp = dispinterface
    ['{F4DDFA25-7D82-47A6-A54A-EDC422FEC76D}']
    property FactoryDossierContact: IBODossierContactFactory2 readonly dispid 120;
    property Adresse: IAdresse dispid 121;
    property Nom: WideString dispid 100;
    property Prenom: WideString dispid 101;
    property ServiceContact: IBPServiceContact dispid 102;
    property Fonction: WideString dispid 103;
    property Telecom: ITelecom dispid 104;
    property Civilite: ContactCivilite dispid 108;
    property TypeContact: IBPContact dispid 109;
    property Facebook: WideString dispid 122;
    property LinkedIn: WideString dispid 123;
    property Skype: WideString dispid 124;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IBOModeleEcritureFactory2
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {FCA4724C-21EE-43DD-89DA-BD424957D8A1}
// *********************************************************************//
  IBOModeleEcritureFactory2 = interface(IBITypeObjectFactory)
    ['{FCA4724C-21EE-43DD-89DA-BD424957D8A1}']
    function ExistIntitule(const sNum: WideString): WordBool; safecall;
    function ReadIntitule(const sNum: WideString): IBOModeleEcriture3; safecall;
  end;

// *********************************************************************//
// DispIntf :    IBOModeleEcritureFactory2Disp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {FCA4724C-21EE-43DD-89DA-BD424957D8A1}
// *********************************************************************//
  IBOModeleEcritureFactory2Disp = dispinterface
    ['{FCA4724C-21EE-43DD-89DA-BD424957D8A1}']
    function ExistIntitule(const sNum: WideString): WordBool; dispid 10;
    function ReadIntitule(const sNum: WideString): IBOModeleEcriture3; dispid 11;
    property List: IBICollection readonly dispid 1;
    function Create: IBIPersistObject; dispid 2;
    function Read(const pOID: IBIObjectID): IBIPersistObject; dispid 3;
    function _QuerySynchro(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                           TypeExtraction: SynchroExtractType): IBICollection; dispid 4;
    function _QuerySynchroRemoved(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                                  TypeExtraction: SynchroExtractType): IBICollectionDispatch; dispid 5;
    function ReadFrom(const pStream: IStream): IBIPersistObject; dispid 6;
    property ListForward: IBICollection readonly dispid 7;
    function QueryPredicate(const pPredicate: IDispatch; const sSortDescriptors: WideString): IBICollection; dispid 8;
  end;

// *********************************************************************//
// Interface :   IBOModeleEcriture3
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {F60A3CEB-E9FE-444B-B6E3-860F8C663497}
// *********************************************************************//
  IBOModeleEcriture3 = interface(IBIPersistObject)
    ['{F60A3CEB-E9FE-444B-B6E3-860F8C663497}']
    function Get_FactoryModeleEcriture: IBOModeleEcritureFactory2; safecall;
    function Get_FactoryModeleEcritureLigne: IBITypeObjectFactory; safecall;
    function Get_PI_Intitule: WideString; safecall;
    procedure Set_PI_Intitule(const pVal: WideString); safecall;
    function Get_PI_Raccourci: WideString; safecall;
    procedure Set_PI_Raccourci(const pVal: WideString); safecall;
    function Get_JO_Type: JournalType; safecall;
    procedure Set_JO_Type(pVal: JournalType); safecall;
    function Get_Journal: IBOJournal3; safecall;
    procedure Set_Journal(const pVal: IBOJournal3); safecall;
    property FactoryModeleEcriture: IBOModeleEcritureFactory2 read Get_FactoryModeleEcriture;
    property FactoryModeleEcritureLigne: IBITypeObjectFactory read Get_FactoryModeleEcritureLigne;
    property PI_Intitule: WideString read Get_PI_Intitule write Set_PI_Intitule;
    property PI_Raccourci: WideString read Get_PI_Raccourci write Set_PI_Raccourci;
    property JO_Type: JournalType read Get_JO_Type write Set_JO_Type;
    property Journal: IBOJournal3 read Get_Journal write Set_Journal;
  end;

// *********************************************************************//
// DispIntf :    IBOModeleEcriture3Disp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {F60A3CEB-E9FE-444B-B6E3-860F8C663497}
// *********************************************************************//
  IBOModeleEcriture3Disp = dispinterface
    ['{F60A3CEB-E9FE-444B-B6E3-860F8C663497}']
    property FactoryModeleEcriture: IBOModeleEcritureFactory2 readonly dispid 100;
    property FactoryModeleEcritureLigne: IBITypeObjectFactory readonly dispid 101;
    property PI_Intitule: WideString dispid 102;
    property PI_Raccourci: WideString dispid 103;
    property JO_Type: JournalType dispid 104;
    property Journal: IBOJournal3 dispid 105;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IBPRappelFactory
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {A8ABA975-4096-48B6-9D17-BB567EF59ACB}
// *********************************************************************//
  IBPRappelFactory = interface(IBITypeObjectFactory)
    ['{A8ABA975-4096-48B6-9D17-BB567EF59ACB}']
    function ExistIntitule(const sIntitule: WideString): WordBool; safecall;
    function ReadIntitule(const sIntitule: WideString): IBPRappel; safecall;
  end;

// *********************************************************************//
// DispIntf :    IBPRappelFactoryDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {A8ABA975-4096-48B6-9D17-BB567EF59ACB}
// *********************************************************************//
  IBPRappelFactoryDisp = dispinterface
    ['{A8ABA975-4096-48B6-9D17-BB567EF59ACB}']
    function ExistIntitule(const sIntitule: WideString): WordBool; dispid 10;
    function ReadIntitule(const sIntitule: WideString): IBPRappel; dispid 11;
    property List: IBICollection readonly dispid 1;
    function Create: IBIPersistObject; dispid 2;
    function Read(const pOID: IBIObjectID): IBIPersistObject; dispid 3;
    function _QuerySynchro(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                           TypeExtraction: SynchroExtractType): IBICollection; dispid 4;
    function _QuerySynchroRemoved(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                                  TypeExtraction: SynchroExtractType): IBICollectionDispatch; dispid 5;
    function ReadFrom(const pStream: IStream): IBIPersistObject; dispid 6;
    property ListForward: IBICollection readonly dispid 7;
    function QueryPredicate(const pPredicate: IDispatch; const sSortDescriptors: WideString): IBICollection; dispid 8;
  end;

// *********************************************************************//
// Interface :   IBPRappel
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {1214E7B0-99C7-49AE-AAB7-7692DEC498DC}
// *********************************************************************//
  IBPRappel = interface(IBIPersistObject)
    ['{1214E7B0-99C7-49AE-AAB7-7692DEC498DC}']
    function Get_FactoryRappel: IBPRappelFactory; safecall;
    function Get_Intitule: WideString; safecall;
    procedure Set_Intitule(const pVal: WideString); safecall;
    function Get_R_Debut: Smallint; safecall;
    procedure Set_R_Debut(pVal: Smallint); safecall;
    function Get_R_Fin: Smallint; safecall;
    procedure Set_R_Fin(pVal: Smallint); safecall;
    function Get_R_NbJours: Smallint; safecall;
    procedure Set_R_NbJours(pVal: Smallint); safecall;
    property FactoryRappel: IBPRappelFactory read Get_FactoryRappel;
    property Intitule: WideString read Get_Intitule write Set_Intitule;
    property R_Debut: Smallint read Get_R_Debut write Set_R_Debut;
    property R_Fin: Smallint read Get_R_Fin write Set_R_Fin;
    property R_NbJours: Smallint read Get_R_NbJours write Set_R_NbJours;
  end;

// *********************************************************************//
// DispIntf :    IBPRappelDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {1214E7B0-99C7-49AE-AAB7-7692DEC498DC}
// *********************************************************************//
  IBPRappelDisp = dispinterface
    ['{1214E7B0-99C7-49AE-AAB7-7692DEC498DC}']
    property FactoryRappel: IBPRappelFactory readonly dispid 100;
    property Intitule: WideString dispid 101;
    property R_Debut: Smallint dispid 102;
    property R_Fin: Smallint dispid 103;
    property R_NbJours: Smallint dispid 104;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IBPTiersStatFactory
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {FBB89C2B-316F-45CA-997A-E4A0492EC64B}
// *********************************************************************//
  IBPTiersStatFactory = interface(IBITypeObjectFactory)
    ['{FBB89C2B-316F-45CA-997A-E4A0492EC64B}']
    function ExistIntitule(const sIntitule: WideString): WordBool; safecall;
    function ReadIntitule(const sIntitule: WideString): IBPTiersStat; safecall;
  end;

// *********************************************************************//
// DispIntf :    IBPTiersStatFactoryDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {FBB89C2B-316F-45CA-997A-E4A0492EC64B}
// *********************************************************************//
  IBPTiersStatFactoryDisp = dispinterface
    ['{FBB89C2B-316F-45CA-997A-E4A0492EC64B}']
    function ExistIntitule(const sIntitule: WideString): WordBool; dispid 10;
    function ReadIntitule(const sIntitule: WideString): IBPTiersStat; dispid 11;
    property List: IBICollection readonly dispid 1;
    function Create: IBIPersistObject; dispid 2;
    function Read(const pOID: IBIObjectID): IBIPersistObject; dispid 3;
    function _QuerySynchro(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                           TypeExtraction: SynchroExtractType): IBICollection; dispid 4;
    function _QuerySynchroRemoved(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                                  TypeExtraction: SynchroExtractType): IBICollectionDispatch; dispid 5;
    function ReadFrom(const pStream: IStream): IBIPersistObject; dispid 6;
    property ListForward: IBICollection readonly dispid 7;
    function QueryPredicate(const pPredicate: IDispatch; const sSortDescriptors: WideString): IBICollection; dispid 8;
  end;

// *********************************************************************//
// Interface :   IBPTiersStat
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {8B292D79-32B2-4245-BAFE-D0E6FB87C9F1}
// *********************************************************************//
  IBPTiersStat = interface(IBIPersistObject)
    ['{8B292D79-32B2-4245-BAFE-D0E6FB87C9F1}']
    function Get_FactoryTiersStat: IBPTiersStatFactory; safecall;
    function Get_Intitule: WideString; safecall;
    procedure Set_Intitule(const pVal: WideString); safecall;
    function Get_Enums: IBIValuesInsertable; safecall;
    property FactoryTiersStat: IBPTiersStatFactory read Get_FactoryTiersStat;
    property Intitule: WideString read Get_Intitule write Set_Intitule;
    property Enums: IBIValuesInsertable read Get_Enums;
  end;

// *********************************************************************//
// DispIntf :    IBPTiersStatDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {8B292D79-32B2-4245-BAFE-D0E6FB87C9F1}
// *********************************************************************//
  IBPTiersStatDisp = dispinterface
    ['{8B292D79-32B2-4245-BAFE-D0E6FB87C9F1}']
    property FactoryTiersStat: IBPTiersStatFactory readonly dispid 100;
    property Intitule: WideString dispid 101;
    property Enums: IBIValuesInsertable readonly dispid 102;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IBOModeleGrilleFactory
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {458C0B28-25F9-4C8B-B073-36F2E5376558}
// *********************************************************************//
  IBOModeleGrilleFactory = interface(IBITypeObjectFactory)
    ['{458C0B28-25F9-4C8B-B073-36F2E5376558}']
    function ExistIntitule(const sIntitule: WideString): WordBool; safecall;
    function ReadIntitule(const sIntitule: WideString): IBOModeleGrille; safecall;
  end;

// *********************************************************************//
// DispIntf :    IBOModeleGrilleFactoryDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {458C0B28-25F9-4C8B-B073-36F2E5376558}
// *********************************************************************//
  IBOModeleGrilleFactoryDisp = dispinterface
    ['{458C0B28-25F9-4C8B-B073-36F2E5376558}']
    function ExistIntitule(const sIntitule: WideString): WordBool; dispid 10;
    function ReadIntitule(const sIntitule: WideString): IBOModeleGrille; dispid 11;
    property List: IBICollection readonly dispid 1;
    function Create: IBIPersistObject; dispid 2;
    function Read(const pOID: IBIObjectID): IBIPersistObject; dispid 3;
    function _QuerySynchro(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                           TypeExtraction: SynchroExtractType): IBICollection; dispid 4;
    function _QuerySynchroRemoved(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                                  TypeExtraction: SynchroExtractType): IBICollectionDispatch; dispid 5;
    function ReadFrom(const pStream: IStream): IBIPersistObject; dispid 6;
    property ListForward: IBICollection readonly dispid 7;
    function QueryPredicate(const pPredicate: IDispatch; const sSortDescriptors: WideString): IBICollection; dispid 8;
  end;

// *********************************************************************//
// Interface :   IBOModeleGrille
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {E2155282-6020-4C72-B7D0-9EEBAFAB602C}
// *********************************************************************//
  IBOModeleGrille = interface(IBIPersistObject)
    ['{E2155282-6020-4C72-B7D0-9EEBAFAB602C}']
    function Get_FactoryModeleGrille: IBOModeleGrilleFactory; safecall;
    function Get_FactoryModeleGrilleLigne: IBOModeleGrilleLigneFactory; safecall;
    function Get_type_: ModeleGrilleType; safecall;
    procedure Set_type_(pVal: ModeleGrilleType); safecall;
    function Get_Intitule: WideString; safecall;
    procedure Set_Intitule(const pVal: WideString); safecall;
    function Get_Raccourci: WideString; safecall;
    procedure Set_Raccourci(const pVal: WideString); safecall;
    property FactoryModeleGrille: IBOModeleGrilleFactory read Get_FactoryModeleGrille;
    property FactoryModeleGrilleLigne: IBOModeleGrilleLigneFactory read Get_FactoryModeleGrilleLigne;
    property type_: ModeleGrilleType read Get_type_ write Set_type_;
    property Intitule: WideString read Get_Intitule write Set_Intitule;
    property Raccourci: WideString read Get_Raccourci write Set_Raccourci;
  end;

// *********************************************************************//
// DispIntf :    IBOModeleGrilleDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {E2155282-6020-4C72-B7D0-9EEBAFAB602C}
// *********************************************************************//
  IBOModeleGrilleDisp = dispinterface
    ['{E2155282-6020-4C72-B7D0-9EEBAFAB602C}']
    property FactoryModeleGrille: IBOModeleGrilleFactory readonly dispid 100;
    property FactoryModeleGrilleLigne: IBOModeleGrilleLigneFactory readonly dispid 101;
    property type_: ModeleGrilleType dispid 102;
    property Intitule: WideString dispid 103;
    property Raccourci: WideString dispid 104;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IBOModeleGrilleLigneFactory
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {4FBB9839-33B4-4C0C-B9ED-04773DFA472B}
// *********************************************************************//
  IBOModeleGrilleLigneFactory = interface(IBITypeObjectFactory)
    ['{4FBB9839-33B4-4C0C-B9ED-04773DFA472B}']
    function QueryPlanA(const pAnalytique: IBPAnalytique3): IBICollection; safecall;
  end;

// *********************************************************************//
// DispIntf :    IBOModeleGrilleLigneFactoryDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {4FBB9839-33B4-4C0C-B9ED-04773DFA472B}
// *********************************************************************//
  IBOModeleGrilleLigneFactoryDisp = dispinterface
    ['{4FBB9839-33B4-4C0C-B9ED-04773DFA472B}']
    function QueryPlanA(const pAnalytique: IBPAnalytique3): IBICollection; dispid 10;
    property List: IBICollection readonly dispid 1;
    function Create: IBIPersistObject; dispid 2;
    function Read(const pOID: IBIObjectID): IBIPersistObject; dispid 3;
    function _QuerySynchro(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                           TypeExtraction: SynchroExtractType): IBICollection; dispid 4;
    function _QuerySynchroRemoved(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                                  TypeExtraction: SynchroExtractType): IBICollectionDispatch; dispid 5;
    function ReadFrom(const pStream: IStream): IBIPersistObject; dispid 6;
    property ListForward: IBICollection readonly dispid 7;
    function QueryPredicate(const pPredicate: IDispatch; const sSortDescriptors: WideString): IBICollection; dispid 8;
  end;

// *********************************************************************//
// Interface :   IBPTiersFactory
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {A40A34F1-9B69-4A46-AB90-E7ED9FA58129}
// *********************************************************************//
  IBPTiersFactory = interface(IBITypeObjectFactory)
    ['{A40A34F1-9B69-4A46-AB90-E7ED9FA58129}']
    function ReadTypeTiers(sType: TiersType): IBPTiers; safecall;
  end;

// *********************************************************************//
// DispIntf :    IBPTiersFactoryDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {A40A34F1-9B69-4A46-AB90-E7ED9FA58129}
// *********************************************************************//
  IBPTiersFactoryDisp = dispinterface
    ['{A40A34F1-9B69-4A46-AB90-E7ED9FA58129}']
    function ReadTypeTiers(sType: TiersType): IBPTiers; dispid 11;
    property List: IBICollection readonly dispid 1;
    function Create: IBIPersistObject; dispid 2;
    function Read(const pOID: IBIObjectID): IBIPersistObject; dispid 3;
    function _QuerySynchro(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                           TypeExtraction: SynchroExtractType): IBICollection; dispid 4;
    function _QuerySynchroRemoved(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                                  TypeExtraction: SynchroExtractType): IBICollectionDispatch; dispid 5;
    function ReadFrom(const pStream: IStream): IBIPersistObject; dispid 6;
    property ListForward: IBICollection readonly dispid 7;
    function QueryPredicate(const pPredicate: IDispatch; const sSortDescriptors: WideString): IBICollection; dispid 8;
  end;

// *********************************************************************//
// Interface :   IBPTiers
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {3DA85DBC-0497-43C5-91D2-EB4F39EF5CDC}
// *********************************************************************//
  IBPTiers = interface(IBIPersistObject)
    ['{3DA85DBC-0497-43C5-91D2-EB4F39EF5CDC}']
    function Get_FactoryTiersType: IBPTiersFactory; safecall;
    function Get_CT_Type: TiersType; safecall;
    function Get_T_Numerotation: TypeTiersNumerotation; safecall;
    procedure Set_T_Numerotation(pVal: TypeTiersNumerotation); safecall;
    function Get_T_Lg: Smallint; safecall;
    procedure Set_T_Lg(pVal: Smallint); safecall;
    function Get_T_Racine: WideString; safecall;
    procedure Set_T_Racine(const pVal: WideString); safecall;
    function Get_T_Intitule(sElt: Smallint): WideString; safecall;
    procedure Set_T_Intitule(sElt: Smallint; const pVal: WideString); safecall;
    function Get_T_TCompte(sElt: Smallint): TypeTiersCompteType; safecall;
    procedure Set_T_TCompte(sElt: Smallint; pVal: TypeTiersCompteType); safecall;
    function Get_T_Compte(sElt: Smallint): WideString; safecall;
    procedure Set_T_Compte(sElt: Smallint; const pVal: WideString); safecall;
    function Get_IsPrincipal(sElt: Smallint): WordBool; safecall;
    procedure Set_IsPrincipal(sElt: Smallint; pVal: WordBool); safecall;
    function Get_NextCT_Num: WideString; safecall;
    property FactoryTiersType: IBPTiersFactory read Get_FactoryTiersType;
    property CT_Type: TiersType read Get_CT_Type;
    property T_Numerotation: TypeTiersNumerotation read Get_T_Numerotation write Set_T_Numerotation;
    property T_Lg: Smallint read Get_T_Lg write Set_T_Lg;
    property T_Racine: WideString read Get_T_Racine write Set_T_Racine;
    property T_Intitule[sElt: Smallint]: WideString read Get_T_Intitule write Set_T_Intitule;
    property T_TCompte[sElt: Smallint]: TypeTiersCompteType read Get_T_TCompte write Set_T_TCompte;
    property T_Compte[sElt: Smallint]: WideString read Get_T_Compte write Set_T_Compte;
    property IsPrincipal[sElt: Smallint]: WordBool read Get_IsPrincipal write Set_IsPrincipal;
    property NextCT_Num: WideString read Get_NextCT_Num;
  end;

// *********************************************************************//
// DispIntf :    IBPTiersDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {3DA85DBC-0497-43C5-91D2-EB4F39EF5CDC}
// *********************************************************************//
  IBPTiersDisp = dispinterface
    ['{3DA85DBC-0497-43C5-91D2-EB4F39EF5CDC}']
    property FactoryTiersType: IBPTiersFactory readonly dispid 100;
    property CT_Type: TiersType readonly dispid 101;
    property T_Numerotation: TypeTiersNumerotation dispid 102;
    property T_Lg: Smallint dispid 103;
    property T_Racine: WideString dispid 104;
    property T_Intitule[sElt: Smallint]: WideString dispid 105;
    property T_TCompte[sElt: Smallint]: TypeTiersCompteType dispid 106;
    property T_Compte[sElt: Smallint]: WideString dispid 107;
    property IsPrincipal[sElt: Smallint]: WordBool dispid 108;
    property NextCT_Num: WideString readonly dispid 109;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IPMEncoder
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {356BB216-94EE-4357-9148-EDB271166D41}
// *********************************************************************//
  IPMEncoder = interface(IPMProcess)
    ['{356BB216-94EE-4357-9148-EDB271166D41}']
    function Get_Journal: IBOJournal3; safecall;
    procedure Set_Journal(const pJournal: IBOJournal3); safecall;
    function Get_Date: TDateTime; safecall;
    procedure Set_Date(pVal: TDateTime); safecall;
    function Get_EC_Piece: WideString; safecall;
    procedure Set_EC_Piece(const pVal: WideString); safecall;
    function Get_EC_RefPiece: WideString; safecall;
    procedure Set_EC_RefPiece(const pVal: WideString); safecall;
    function Get_EC_Intitule: WideString; safecall;
    procedure Set_EC_Intitule(const pVal: WideString); safecall;
    function Get_EC_Parite: Double; safecall;
    procedure Set_EC_Parite(pVal: Double); safecall;
    function Get_Devise: IBPDevise2; safecall;
    procedure Set_Devise(const pDevise: IBPDevise2); safecall;
    function Get_EC_Reference: WideString; safecall;
    procedure Set_EC_Reference(const pVal: WideString); safecall;
    function Get_bAnalytiqueAuto: WordBool; safecall;
    procedure Set_bAnalytiqueAuto(pVal: WordBool); safecall;
    function Get_bMultiEcheanceAuto: WordBool; safecall;
    procedure Set_bMultiEcheanceAuto(pVal: WordBool); safecall;
    function Get_ListEcrituresOut: IBICollection; safecall;
    function Get_Debit: Double; safecall;
    function Get_Credit: Double; safecall;
    function Get_Solde: Double; safecall;
    function Get_FactoryEcritureIn: IBOEcritureFactory3; safecall;
    procedure AddTiersPart(const pTiers: IBOTiersPart3; dMontantTTC: Double; 
                           const pCompteGCharegeProduit: IBOCompteG3; 
                           const pCompteGTVA: IBOCompteG3; const pCompteGTiers: IBOCompteG3); safecall;
    function Equilibrer(const pCompteG: IBOCompteG3): IBOEcriture3; safecall;
    property Journal: IBOJournal3 read Get_Journal write Set_Journal;
    property Date: TDateTime read Get_Date write Set_Date;
    property EC_Piece: WideString read Get_EC_Piece write Set_EC_Piece;
    property EC_RefPiece: WideString read Get_EC_RefPiece write Set_EC_RefPiece;
    property EC_Intitule: WideString read Get_EC_Intitule write Set_EC_Intitule;
    property EC_Parite: Double read Get_EC_Parite write Set_EC_Parite;
    property Devise: IBPDevise2 read Get_Devise write Set_Devise;
    property EC_Reference: WideString read Get_EC_Reference write Set_EC_Reference;
    property bAnalytiqueAuto: WordBool read Get_bAnalytiqueAuto write Set_bAnalytiqueAuto;
    property bMultiEcheanceAuto: WordBool read Get_bMultiEcheanceAuto write Set_bMultiEcheanceAuto;
    property ListEcrituresOut: IBICollection read Get_ListEcrituresOut;
    property Debit: Double read Get_Debit;
    property Credit: Double read Get_Credit;
    property Solde: Double read Get_Solde;
    property FactoryEcritureIn: IBOEcritureFactory3 read Get_FactoryEcritureIn;
  end;

// *********************************************************************//
// DispIntf :    IPMEncoderDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {356BB216-94EE-4357-9148-EDB271166D41}
// *********************************************************************//
  IPMEncoderDisp = dispinterface
    ['{356BB216-94EE-4357-9148-EDB271166D41}']
    property Journal: IBOJournal3 dispid 100;
    property Date: TDateTime dispid 101;
    property EC_Piece: WideString dispid 102;
    property EC_RefPiece: WideString dispid 103;
    property EC_Intitule: WideString dispid 104;
    property EC_Parite: Double dispid 105;
    property Devise: IBPDevise2 dispid 106;
    property EC_Reference: WideString dispid 107;
    property bAnalytiqueAuto: WordBool dispid 108;
    property bMultiEcheanceAuto: WordBool dispid 109;
    property ListEcrituresOut: IBICollection readonly dispid 111;
    property Debit: Double readonly dispid 112;
    property Credit: Double readonly dispid 113;
    property Solde: Double readonly dispid 114;
    property FactoryEcritureIn: IBOEcritureFactory3 readonly dispid 115;
    procedure AddTiersPart(const pTiers: IBOTiersPart3; dMontantTTC: Double; 
                           const pCompteGCharegeProduit: IBOCompteG3; 
                           const pCompteGTVA: IBOCompteG3; const pCompteGTiers: IBOCompteG3); dispid 121;
    function Equilibrer(const pCompteG: IBOCompteG3): IBOEcriture3; dispid 122;
    procedure Process; dispid 10;
    property CanProcess: WordBool readonly dispid 11;
    property Errors: IFailInfoCol readonly dispid 12;
    property Transactional: WordBool dispid 13;
  end;

// *********************************************************************//
// Interface :   IBOBanqueFactory
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {09DE9B82-23C4-49F3-87CB-A0D0381584AC}
// *********************************************************************//
  IBOBanqueFactory = interface(IBITypeObjectFactory)
    ['{09DE9B82-23C4-49F3-87CB-A0D0381584AC}']
    function ExistAbrege(const sAbrege: WideString): WordBool; safecall;
    function ReadAbrege(const sAbrege: WideString): IBOBanque; safecall;
  end;

// *********************************************************************//
// DispIntf :    IBOBanqueFactoryDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {09DE9B82-23C4-49F3-87CB-A0D0381584AC}
// *********************************************************************//
  IBOBanqueFactoryDisp = dispinterface
    ['{09DE9B82-23C4-49F3-87CB-A0D0381584AC}']
    function ExistAbrege(const sAbrege: WideString): WordBool; dispid 10;
    function ReadAbrege(const sAbrege: WideString): IBOBanque; dispid 11;
    property List: IBICollection readonly dispid 1;
    function Create: IBIPersistObject; dispid 2;
    function Read(const pOID: IBIObjectID): IBIPersistObject; dispid 3;
    function _QuerySynchro(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                           TypeExtraction: SynchroExtractType): IBICollection; dispid 4;
    function _QuerySynchroRemoved(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                                  TypeExtraction: SynchroExtractType): IBICollectionDispatch; dispid 5;
    function ReadFrom(const pStream: IStream): IBIPersistObject; dispid 6;
    property ListForward: IBICollection readonly dispid 7;
    function QueryPredicate(const pPredicate: IDispatch; const sSortDescriptors: WideString): IBICollection; dispid 8;
  end;

// *********************************************************************//
// Interface :   IBOBanque
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {105B22E1-1E39-4E1C-9882-C6DBE95F8456}
// *********************************************************************//
  IBOBanque = interface(IBIPersistObject)
    ['{105B22E1-1E39-4E1C-9882-C6DBE95F8456}']
    function Get_FactoryBanque: IBOBanqueFactory; safecall;
    function Get_FactoryBanqueRib: IBOBanqueRibFactory; safecall;
    function Get_FactoryBanqueContact: IBITypeObjectFactory; safecall;
    function Get_BQ_Intitule: WideString; safecall;
    procedure Set_BQ_Intitule(const pVal: WideString); safecall;
    function Get_Adresse: IAdresse; safecall;
    procedure Set_Adresse(const pAdresse: IAdresse); safecall;
    function Get_BQ_Contact: WideString; safecall;
    procedure Set_BQ_Contact(const pVal: WideString); safecall;
    function Get_BQ_Abrege: WideString; safecall;
    procedure Set_BQ_Abrege(const pVal: WideString); safecall;
    function Get_BQ_BIC: WideString; safecall;
    procedure Set_BQ_BIC(const pVal: WideString); safecall;
    function Get_Telecom: ITelecom; safecall;
    procedure Set_Telecom(const pTelecom: ITelecom); safecall;
    function Get_BQ_ModeRemise: BanqueModeRemise; safecall;
    procedure Set_BQ_ModeRemise(pVal: BanqueModeRemise); safecall;
    function Get_BQ_BordDevise: WordBool; safecall;
    procedure Set_BQ_BordDevise(pVal: WordBool); safecall;
    function Get_BQ_AchatDevise: WordBool; safecall;
    procedure Set_BQ_AchatDevise(pVal: WordBool); safecall;
    function Get_BQ_Remise: BanqueRemise; safecall;
    procedure Set_BQ_Remise(pVal: BanqueRemise); safecall;
    function Get_BQ_CodeIdent: WideString; safecall;
    procedure Set_BQ_CodeIdent(const pVal: WideString); safecall;
    function Get_BQ_DOAdresse: WordBool; safecall;
    procedure Set_BQ_DOAdresse(pVal: WordBool); safecall;
    function Get_BQ_DOVille: WordBool; safecall;
    procedure Set_BQ_DOVille(pVal: WordBool); safecall;
    function Get_BQ_DOCodePostal: WordBool; safecall;
    procedure Set_BQ_DOCodePostal(pVal: WordBool); safecall;
    function Get_BQ_DOSiret: WordBool; safecall;
    procedure Set_BQ_DOSiret(pVal: WordBool); safecall;
    function Get_BQ_DOCodeIdent: WordBool; safecall;
    procedure Set_BQ_DOCodeIdent(pVal: WordBool); safecall;
    function Get_BQ_DOAgenceVille: WordBool; safecall;
    procedure Set_BQ_DOAgenceVille(pVal: WordBool); safecall;
    function Get_BQ_DOAgenceCP: WordBool; safecall;
    procedure Set_BQ_DOAgenceCP(pVal: WordBool); safecall;
    function Get_BQ_DOTypeIdent: WordBool; safecall;
    procedure Set_BQ_DOTypeIdent(pVal: WordBool); safecall;
    function Get_BQ_DOCle: WordBool; safecall;
    procedure Set_BQ_DOCle(pVal: WordBool); safecall;
    function Get_BQ_VTAdresse: WordBool; safecall;
    procedure Set_BQ_VTAdresse(pVal: WordBool); safecall;
    function Get_BQ_VTVille: WordBool; safecall;
    procedure Set_BQ_VTVille(pVal: WordBool); safecall;
    function Get_BQ_VTCodePostal: WordBool; safecall;
    procedure Set_BQ_VTCodePostal(pVal: WordBool); safecall;
    function Get_BQ_VTSiret: WordBool; safecall;
    procedure Set_BQ_VTSiret(pVal: WordBool); safecall;
    function Get_BQ_VTPays: WordBool; safecall;
    procedure Set_BQ_VTPays(pVal: WordBool); safecall;
    function Get_BQ_VTContrat: WordBool; safecall;
    procedure Set_BQ_VTContrat(pVal: WordBool); safecall;
    function Get_BQ_VTDateAchat: WordBool; safecall;
    procedure Set_BQ_VTDateAchat(pVal: WordBool); safecall;
    function Get_BQ_VTTauxChange: WordBool; safecall;
    procedure Set_BQ_VTTauxChange(pVal: WordBool); safecall;
    function Get_BQ_VTInstruction: WordBool; safecall;
    procedure Set_BQ_VTInstruction(pVal: WordBool); safecall;
    function Get_BQ_BBIntitule: WordBool; safecall;
    procedure Set_BQ_BBIntitule(pVal: WordBool); safecall;
    function Get_BQ_BBBIC: WordBool; safecall;
    procedure Set_BQ_BBBIC(pVal: WordBool); safecall;
    function Get_BQ_BBAdresse: WordBool; safecall;
    procedure Set_BQ_BBAdresse(pVal: WordBool); safecall;
    function Get_BQ_BBVille: WordBool; safecall;
    procedure Set_BQ_BBVille(pVal: WordBool); safecall;
    function Get_BQ_BBCodePostal: WordBool; safecall;
    procedure Set_BQ_BBCodePostal(pVal: WordBool); safecall;
    function Get_BQ_BBCompte: WordBool; safecall;
    procedure Set_BQ_BBCompte(pVal: WordBool); safecall;
    function Get_BQ_BIIntitule: WordBool; safecall;
    procedure Set_BQ_BIIntitule(pVal: WordBool); safecall;
    function Get_BQ_BIBIC: WordBool; safecall;
    procedure Set_BQ_BIBIC(pVal: WordBool); safecall;
    function Get_BQ_BIAdresse: WordBool; safecall;
    procedure Set_BQ_BIAdresse(pVal: WordBool); safecall;
    function Get_BQ_BIVille: WordBool; safecall;
    procedure Set_BQ_BIVille(pVal: WordBool); safecall;
    function Get_BQ_BICodePostal: WordBool; safecall;
    procedure Set_BQ_BICodePostal(pVal: WordBool); safecall;
    function Get_BQ_BIPays: WordBool; safecall;
    procedure Set_BQ_BIPays(pVal: WordBool); safecall;
    function Get_BQ_TransEMailEnvoi: WideString; safecall;
    procedure Set_BQ_TransEMailEnvoi(const pVal: WideString); safecall;
    function Get_BQ_TransSite: WideString; safecall;
    procedure Set_BQ_TransSite(const pVal: WideString); safecall;
    function Get_BQ_FormatVir: BanqueFormatVirement; safecall;
    procedure Set_BQ_FormatVir(pVal: BanqueFormatVirement); safecall;
    function Get_BQ_FormatVirInter: BanqueFormatVirement; safecall;
    procedure Set_BQ_FormatVirInter(pVal: BanqueFormatVirement); safecall;
    function Get_BQ_FormatPrel: BanqueFormatVirement; safecall;
    procedure Set_BQ_FormatPrel(pVal: BanqueFormatVirement); safecall;
    function Get_BQ_VTCodeService: WideString; safecall;
    procedure Set_BQ_VTCodeService(const pVal: WideString); safecall;
    function Get_BQ_ModeleParam: WideString; safecall;
    procedure Set_BQ_ModeleParam(const pVal: WideString); safecall;
    property FactoryBanque: IBOBanqueFactory read Get_FactoryBanque;
    property FactoryBanqueRib: IBOBanqueRibFactory read Get_FactoryBanqueRib;
    property FactoryBanqueContact: IBITypeObjectFactory read Get_FactoryBanqueContact;
    property BQ_Intitule: WideString read Get_BQ_Intitule write Set_BQ_Intitule;
    property Adresse: IAdresse read Get_Adresse write Set_Adresse;
    property BQ_Contact: WideString read Get_BQ_Contact write Set_BQ_Contact;
    property BQ_Abrege: WideString read Get_BQ_Abrege write Set_BQ_Abrege;
    property BQ_BIC: WideString read Get_BQ_BIC write Set_BQ_BIC;
    property Telecom: ITelecom read Get_Telecom write Set_Telecom;
    property BQ_ModeRemise: BanqueModeRemise read Get_BQ_ModeRemise write Set_BQ_ModeRemise;
    property BQ_BordDevise: WordBool read Get_BQ_BordDevise write Set_BQ_BordDevise;
    property BQ_AchatDevise: WordBool read Get_BQ_AchatDevise write Set_BQ_AchatDevise;
    property BQ_Remise: BanqueRemise read Get_BQ_Remise write Set_BQ_Remise;
    property BQ_CodeIdent: WideString read Get_BQ_CodeIdent write Set_BQ_CodeIdent;
    property BQ_DOAdresse: WordBool read Get_BQ_DOAdresse write Set_BQ_DOAdresse;
    property BQ_DOVille: WordBool read Get_BQ_DOVille write Set_BQ_DOVille;
    property BQ_DOCodePostal: WordBool read Get_BQ_DOCodePostal write Set_BQ_DOCodePostal;
    property BQ_DOSiret: WordBool read Get_BQ_DOSiret write Set_BQ_DOSiret;
    property BQ_DOCodeIdent: WordBool read Get_BQ_DOCodeIdent write Set_BQ_DOCodeIdent;
    property BQ_DOAgenceVille: WordBool read Get_BQ_DOAgenceVille write Set_BQ_DOAgenceVille;
    property BQ_DOAgenceCP: WordBool read Get_BQ_DOAgenceCP write Set_BQ_DOAgenceCP;
    property BQ_DOTypeIdent: WordBool read Get_BQ_DOTypeIdent write Set_BQ_DOTypeIdent;
    property BQ_DOCle: WordBool read Get_BQ_DOCle write Set_BQ_DOCle;
    property BQ_VTAdresse: WordBool read Get_BQ_VTAdresse write Set_BQ_VTAdresse;
    property BQ_VTVille: WordBool read Get_BQ_VTVille write Set_BQ_VTVille;
    property BQ_VTCodePostal: WordBool read Get_BQ_VTCodePostal write Set_BQ_VTCodePostal;
    property BQ_VTSiret: WordBool read Get_BQ_VTSiret write Set_BQ_VTSiret;
    property BQ_VTPays: WordBool read Get_BQ_VTPays write Set_BQ_VTPays;
    property BQ_VTContrat: WordBool read Get_BQ_VTContrat write Set_BQ_VTContrat;
    property BQ_VTDateAchat: WordBool read Get_BQ_VTDateAchat write Set_BQ_VTDateAchat;
    property BQ_VTTauxChange: WordBool read Get_BQ_VTTauxChange write Set_BQ_VTTauxChange;
    property BQ_VTInstruction: WordBool read Get_BQ_VTInstruction write Set_BQ_VTInstruction;
    property BQ_BBIntitule: WordBool read Get_BQ_BBIntitule write Set_BQ_BBIntitule;
    property BQ_BBBIC: WordBool read Get_BQ_BBBIC write Set_BQ_BBBIC;
    property BQ_BBAdresse: WordBool read Get_BQ_BBAdresse write Set_BQ_BBAdresse;
    property BQ_BBVille: WordBool read Get_BQ_BBVille write Set_BQ_BBVille;
    property BQ_BBCodePostal: WordBool read Get_BQ_BBCodePostal write Set_BQ_BBCodePostal;
    property BQ_BBCompte: WordBool read Get_BQ_BBCompte write Set_BQ_BBCompte;
    property BQ_BIIntitule: WordBool read Get_BQ_BIIntitule write Set_BQ_BIIntitule;
    property BQ_BIBIC: WordBool read Get_BQ_BIBIC write Set_BQ_BIBIC;
    property BQ_BIAdresse: WordBool read Get_BQ_BIAdresse write Set_BQ_BIAdresse;
    property BQ_BIVille: WordBool read Get_BQ_BIVille write Set_BQ_BIVille;
    property BQ_BICodePostal: WordBool read Get_BQ_BICodePostal write Set_BQ_BICodePostal;
    property BQ_BIPays: WordBool read Get_BQ_BIPays write Set_BQ_BIPays;
    property BQ_TransEMailEnvoi: WideString read Get_BQ_TransEMailEnvoi write Set_BQ_TransEMailEnvoi;
    property BQ_TransSite: WideString read Get_BQ_TransSite write Set_BQ_TransSite;
    property BQ_FormatVir: BanqueFormatVirement read Get_BQ_FormatVir write Set_BQ_FormatVir;
    property BQ_FormatVirInter: BanqueFormatVirement read Get_BQ_FormatVirInter write Set_BQ_FormatVirInter;
    property BQ_FormatPrel: BanqueFormatVirement read Get_BQ_FormatPrel write Set_BQ_FormatPrel;
    property BQ_VTCodeService: WideString read Get_BQ_VTCodeService write Set_BQ_VTCodeService;
    property BQ_ModeleParam: WideString read Get_BQ_ModeleParam write Set_BQ_ModeleParam;
  end;

// *********************************************************************//
// DispIntf :    IBOBanqueDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {105B22E1-1E39-4E1C-9882-C6DBE95F8456}
// *********************************************************************//
  IBOBanqueDisp = dispinterface
    ['{105B22E1-1E39-4E1C-9882-C6DBE95F8456}']
    property FactoryBanque: IBOBanqueFactory readonly dispid 100;
    property FactoryBanqueRib: IBOBanqueRibFactory readonly dispid 101;
    property FactoryBanqueContact: IBITypeObjectFactory readonly dispid 102;
    property BQ_Intitule: WideString dispid 103;
    property Adresse: IAdresse dispid 104;
    property BQ_Contact: WideString dispid 105;
    property BQ_Abrege: WideString dispid 106;
    property BQ_BIC: WideString dispid 107;
    property Telecom: ITelecom dispid 108;
    property BQ_ModeRemise: BanqueModeRemise dispid 111;
    property BQ_BordDevise: WordBool dispid 112;
    property BQ_AchatDevise: WordBool dispid 113;
    property BQ_Remise: BanqueRemise dispid 114;
    property BQ_CodeIdent: WideString dispid 115;
    property BQ_DOAdresse: WordBool dispid 116;
    property BQ_DOVille: WordBool dispid 117;
    property BQ_DOCodePostal: WordBool dispid 118;
    property BQ_DOSiret: WordBool dispid 119;
    property BQ_DOCodeIdent: WordBool dispid 120;
    property BQ_DOAgenceVille: WordBool dispid 121;
    property BQ_DOAgenceCP: WordBool dispid 122;
    property BQ_DOTypeIdent: WordBool dispid 123;
    property BQ_DOCle: WordBool dispid 124;
    property BQ_VTAdresse: WordBool dispid 126;
    property BQ_VTVille: WordBool dispid 127;
    property BQ_VTCodePostal: WordBool dispid 128;
    property BQ_VTSiret: WordBool dispid 129;
    property BQ_VTPays: WordBool dispid 130;
    property BQ_VTContrat: WordBool dispid 131;
    property BQ_VTDateAchat: WordBool dispid 132;
    property BQ_VTTauxChange: WordBool dispid 133;
    property BQ_VTInstruction: WordBool dispid 134;
    property BQ_BBIntitule: WordBool dispid 135;
    property BQ_BBBIC: WordBool dispid 136;
    property BQ_BBAdresse: WordBool dispid 137;
    property BQ_BBVille: WordBool dispid 138;
    property BQ_BBCodePostal: WordBool dispid 139;
    property BQ_BBCompte: WordBool dispid 140;
    property BQ_BIIntitule: WordBool dispid 141;
    property BQ_BIBIC: WordBool dispid 142;
    property BQ_BIAdresse: WordBool dispid 143;
    property BQ_BIVille: WordBool dispid 144;
    property BQ_BICodePostal: WordBool dispid 145;
    property BQ_BIPays: WordBool dispid 146;
    property BQ_TransEMailEnvoi: WideString dispid 147;
    property BQ_TransSite: WideString dispid 148;
    property BQ_FormatVir: BanqueFormatVirement dispid 149;
    property BQ_FormatVirInter: BanqueFormatVirement dispid 150;
    property BQ_FormatPrel: BanqueFormatVirement dispid 151;
    property BQ_VTCodeService: WideString dispid 152;
    property BQ_ModeleParam: WideString dispid 153;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IBOBanqueRibFactory
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {88C7D8E1-940D-44FA-B347-B3D5E54BFF06}
// *********************************************************************//
  IBOBanqueRibFactory = interface(IBITypeObjectFactory)
    ['{88C7D8E1-940D-44FA-B347-B3D5E54BFF06}']
    function ExistAbrege(const sAbrege: WideString): WordBool; safecall;
    function ReadAbrege(const sAbrege: WideString): IBOBanqueRib; safecall;
  end;

// *********************************************************************//
// DispIntf :    IBOBanqueRibFactoryDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {88C7D8E1-940D-44FA-B347-B3D5E54BFF06}
// *********************************************************************//
  IBOBanqueRibFactoryDisp = dispinterface
    ['{88C7D8E1-940D-44FA-B347-B3D5E54BFF06}']
    function ExistAbrege(const sAbrege: WideString): WordBool; dispid 10;
    function ReadAbrege(const sAbrege: WideString): IBOBanqueRib; dispid 11;
    property List: IBICollection readonly dispid 1;
    function Create: IBIPersistObject; dispid 2;
    function Read(const pOID: IBIObjectID): IBIPersistObject; dispid 3;
    function _QuerySynchro(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                           TypeExtraction: SynchroExtractType): IBICollection; dispid 4;
    function _QuerySynchroRemoved(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                                  TypeExtraction: SynchroExtractType): IBICollectionDispatch; dispid 5;
    function ReadFrom(const pStream: IStream): IBIPersistObject; dispid 6;
    property ListForward: IBICollection readonly dispid 7;
    function QueryPredicate(const pPredicate: IDispatch; const sSortDescriptors: WideString): IBICollection; dispid 8;
  end;

// *********************************************************************//
// Interface :   IBOBanqueRib
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {9F917752-EA5C-40AE-AD02-4BC192B64A56}
// *********************************************************************//
  IBOBanqueRib = interface(IBIPersistObject)
    ['{9F917752-EA5C-40AE-AD02-4BC192B64A56}']
    function Get_FactoryBanqueRib: IBOBanqueRibFactory; safecall;
    function Get_Banque: IBOBanque; safecall;
    function Get_EB_Banque: WideString; safecall;
    procedure Set_EB_Banque(const pVal: WideString); safecall;
    function Get_EB_Guichet: WideString; safecall;
    procedure Set_EB_Guichet(const pVal: WideString); safecall;
    function Get_EB_Compte: WideString; safecall;
    procedure Set_EB_Compte(const pVal: WideString); safecall;
    function Get_EB_Cle: WideString; safecall;
    procedure Set_EB_Cle(const pVal: WideString); safecall;
    function Get_EB_Commentaire: WideString; safecall;
    procedure Set_EB_Commentaire(const pVal: WideString); safecall;
    function Get_Journal: IBOJournal3; safecall;
    procedure Set_Journal(const pVal: IBOJournal3); safecall;
    function Get_EB_Struct: RibType; safecall;
    procedure Set_EB_Struct(pVal: RibType); safecall;
    function Get_Devise: IBPDevise2; safecall;
    procedure Set_Devise(const pVal: IBPDevise2); safecall;
    function Get_EB_Abrege: WideString; safecall;
    procedure Set_EB_Abrege(const pVal: WideString); safecall;
    function Get_EB_Emetteur(sElt: Smallint): WideString; safecall;
    procedure Set_EB_Emetteur(sElt: Smallint; const pVal: WideString); safecall;
    function Get_Adresse: IAdresse; safecall;
    procedure Set_Adresse(const pAdresse: IAdresse); safecall;
    function Get_EB_Bic: WideString; safecall;
    procedure Set_EB_Bic(const pVal: WideString); safecall;
    function Get_EB_IBAN: WideString; safecall;
    procedure Set_EB_IBAN(const pVal: WideString); safecall;
    function Get_EB_CalculIBAN: WordBool; safecall;
    procedure Set_EB_CalculIBAN(pVal: WordBool); safecall;
    function Get_EB_NomAgence: WideString; safecall;
    procedure Set_EB_NomAgence(const pVal: WideString); safecall;
    function Get_JournalEscompte: IBOJournal3; safecall;
    procedure Set_JournalEscompte(const pVal: IBOJournal3); safecall;
    function Get_JournalEncaiss: IBOJournal3; safecall;
    procedure Set_JournalEncaiss(const pVal: IBOJournal3); safecall;
    function Get_EB_IntraGroupe: WordBool; safecall;
    procedure Set_EB_IntraGroupe(pVal: WordBool); safecall;
    function Get_EB_BenefRaisonSoc: WideString; safecall;
    procedure Set_EB_BenefRaisonSoc(const pVal: WideString); safecall;
    function Get_EB_BenefAdresse: IAdresse; safecall;
    procedure Set_EB_BenefAdresse(const pAdresse: IAdresse); safecall;
    function Get_EB_BenefSiret: WideString; safecall;
    procedure Set_EB_BenefSiret(const pVal: WideString); safecall;
    function Get_EB_PaysAgence: WideString; safecall;
    procedure Set_EB_PaysAgence(const pVal: WideString); safecall;
    function Get_EB_Sommeil: WordBool; safecall;
    procedure Set_EB_Sommeil(pVal: WordBool); safecall;
    property FactoryBanqueRib: IBOBanqueRibFactory read Get_FactoryBanqueRib;
    property Banque: IBOBanque read Get_Banque;
    property EB_Banque: WideString read Get_EB_Banque write Set_EB_Banque;
    property EB_Guichet: WideString read Get_EB_Guichet write Set_EB_Guichet;
    property EB_Compte: WideString read Get_EB_Compte write Set_EB_Compte;
    property EB_Cle: WideString read Get_EB_Cle write Set_EB_Cle;
    property EB_Commentaire: WideString read Get_EB_Commentaire write Set_EB_Commentaire;
    property Journal: IBOJournal3 read Get_Journal write Set_Journal;
    property EB_Struct: RibType read Get_EB_Struct write Set_EB_Struct;
    property Devise: IBPDevise2 read Get_Devise write Set_Devise;
    property EB_Abrege: WideString read Get_EB_Abrege write Set_EB_Abrege;
    property EB_Emetteur[sElt: Smallint]: WideString read Get_EB_Emetteur write Set_EB_Emetteur;
    property Adresse: IAdresse read Get_Adresse write Set_Adresse;
    property EB_Bic: WideString read Get_EB_Bic write Set_EB_Bic;
    property EB_IBAN: WideString read Get_EB_IBAN write Set_EB_IBAN;
    property EB_CalculIBAN: WordBool read Get_EB_CalculIBAN write Set_EB_CalculIBAN;
    property EB_NomAgence: WideString read Get_EB_NomAgence write Set_EB_NomAgence;
    property JournalEscompte: IBOJournal3 read Get_JournalEscompte write Set_JournalEscompte;
    property JournalEncaiss: IBOJournal3 read Get_JournalEncaiss write Set_JournalEncaiss;
    property EB_IntraGroupe: WordBool read Get_EB_IntraGroupe write Set_EB_IntraGroupe;
    property EB_BenefRaisonSoc: WideString read Get_EB_BenefRaisonSoc write Set_EB_BenefRaisonSoc;
    property EB_BenefAdresse: IAdresse read Get_EB_BenefAdresse write Set_EB_BenefAdresse;
    property EB_BenefSiret: WideString read Get_EB_BenefSiret write Set_EB_BenefSiret;
    property EB_PaysAgence: WideString read Get_EB_PaysAgence write Set_EB_PaysAgence;
    property EB_Sommeil: WordBool read Get_EB_Sommeil write Set_EB_Sommeil;
  end;

// *********************************************************************//
// DispIntf :    IBOBanqueRibDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {9F917752-EA5C-40AE-AD02-4BC192B64A56}
// *********************************************************************//
  IBOBanqueRibDisp = dispinterface
    ['{9F917752-EA5C-40AE-AD02-4BC192B64A56}']
    property FactoryBanqueRib: IBOBanqueRibFactory readonly dispid 100;
    property Banque: IBOBanque readonly dispid 101;
    property EB_Banque: WideString dispid 103;
    property EB_Guichet: WideString dispid 104;
    property EB_Compte: WideString dispid 105;
    property EB_Cle: WideString dispid 106;
    property EB_Commentaire: WideString dispid 107;
    property Journal: IBOJournal3 dispid 108;
    property EB_Struct: RibType dispid 109;
    property Devise: IBPDevise2 dispid 110;
    property EB_Abrege: WideString dispid 111;
    property EB_Emetteur[sElt: Smallint]: WideString dispid 112;
    property Adresse: IAdresse dispid 113;
    property EB_Bic: WideString dispid 115;
    property EB_IBAN: WideString dispid 116;
    property EB_CalculIBAN: WordBool dispid 117;
    property EB_NomAgence: WideString dispid 118;
    property JournalEscompte: IBOJournal3 dispid 119;
    property JournalEncaiss: IBOJournal3 dispid 120;
    property EB_IntraGroupe: WordBool dispid 121;
    property EB_BenefRaisonSoc: WideString dispid 122;
    property EB_BenefAdresse: IAdresse dispid 123;
    property EB_BenefSiret: WideString dispid 124;
    property EB_PaysAgence: WideString dispid 125;
    property EB_Sommeil: WordBool dispid 126;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IBPStructBanqueFactory
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {8259C696-BE45-44EA-81EE-8AE0223AB61A}
// *********************************************************************//
  IBPStructBanqueFactory = interface(IBITypeObjectFactory)
    ['{8259C696-BE45-44EA-81EE-8AE0223AB61A}']
    function ReadType(sType: RibType): IBPStructBanque; safecall;
  end;

// *********************************************************************//
// DispIntf :    IBPStructBanqueFactoryDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {8259C696-BE45-44EA-81EE-8AE0223AB61A}
// *********************************************************************//
  IBPStructBanqueFactoryDisp = dispinterface
    ['{8259C696-BE45-44EA-81EE-8AE0223AB61A}']
    function ReadType(sType: RibType): IBPStructBanque; dispid 10;
    property List: IBICollection readonly dispid 1;
    function Create: IBIPersistObject; dispid 2;
    function Read(const pOID: IBIObjectID): IBIPersistObject; dispid 3;
    function _QuerySynchro(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                           TypeExtraction: SynchroExtractType): IBICollection; dispid 4;
    function _QuerySynchroRemoved(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                                  TypeExtraction: SynchroExtractType): IBICollectionDispatch; dispid 5;
    function ReadFrom(const pStream: IStream): IBIPersistObject; dispid 6;
    property ListForward: IBICollection readonly dispid 7;
    function QueryPredicate(const pPredicate: IDispatch; const sSortDescriptors: WideString): IBICollection; dispid 8;
  end;

// *********************************************************************//
// Interface :   IBPStructBanque
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {46BB94A9-F5A6-442D-8C5B-42D1CF3F5BA0}
// *********************************************************************//
  IBPStructBanque = interface(IBIPersistObject)
    ['{46BB94A9-F5A6-442D-8C5B-42D1CF3F5BA0}']
    function Get_FactoryStructBanque: IBPStructBanqueFactory; safecall;
    function Get_type_: RibType; safecall;
    function Get_B_LBanque: Smallint; safecall;
    procedure Set_B_LBanque(pVal: Smallint); safecall;
    function Get_B_TBanque: StructBanqueFieldType; safecall;
    procedure Set_B_TBanque(pVal: StructBanqueFieldType); safecall;
    function Get_B_LGuichet: Smallint; safecall;
    procedure Set_B_LGuichet(pVal: Smallint); safecall;
    function Get_B_TGuichet: StructBanqueFieldType; safecall;
    procedure Set_B_TGuichet(pVal: StructBanqueFieldType); safecall;
    function Get_B_LCompte: Smallint; safecall;
    procedure Set_B_LCompte(pVal: Smallint); safecall;
    function Get_B_TCompte: StructBanqueFieldType; safecall;
    procedure Set_B_TCompte(pVal: StructBanqueFieldType); safecall;
    function Get_B_LCle: Smallint; safecall;
    procedure Set_B_LCle(pVal: Smallint); safecall;
    function Get_B_TCle: StructBanqueFieldType; safecall;
    procedure Set_B_TCle(pVal: StructBanqueFieldType); safecall;
    function Get_B_Edi: WordBool; safecall;
    procedure Set_B_Edi(pVal: WordBool); safecall;
    function Get_B_Controle: StructBanqueControleRib; safecall;
    procedure Set_B_Controle(pVal: StructBanqueControleRib); safecall;
    property FactoryStructBanque: IBPStructBanqueFactory read Get_FactoryStructBanque;
    property type_: RibType read Get_type_;
    property B_LBanque: Smallint read Get_B_LBanque write Set_B_LBanque;
    property B_TBanque: StructBanqueFieldType read Get_B_TBanque write Set_B_TBanque;
    property B_LGuichet: Smallint read Get_B_LGuichet write Set_B_LGuichet;
    property B_TGuichet: StructBanqueFieldType read Get_B_TGuichet write Set_B_TGuichet;
    property B_LCompte: Smallint read Get_B_LCompte write Set_B_LCompte;
    property B_TCompte: StructBanqueFieldType read Get_B_TCompte write Set_B_TCompte;
    property B_LCle: Smallint read Get_B_LCle write Set_B_LCle;
    property B_TCle: StructBanqueFieldType read Get_B_TCle write Set_B_TCle;
    property B_Edi: WordBool read Get_B_Edi write Set_B_Edi;
    property B_Controle: StructBanqueControleRib read Get_B_Controle write Set_B_Controle;
  end;

// *********************************************************************//
// DispIntf :    IBPStructBanqueDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {46BB94A9-F5A6-442D-8C5B-42D1CF3F5BA0}
// *********************************************************************//
  IBPStructBanqueDisp = dispinterface
    ['{46BB94A9-F5A6-442D-8C5B-42D1CF3F5BA0}']
    property FactoryStructBanque: IBPStructBanqueFactory readonly dispid 100;
    property type_: RibType readonly dispid 101;
    property B_LBanque: Smallint dispid 102;
    property B_TBanque: StructBanqueFieldType dispid 103;
    property B_LGuichet: Smallint dispid 104;
    property B_TGuichet: StructBanqueFieldType dispid 105;
    property B_LCompte: Smallint dispid 106;
    property B_TCompte: StructBanqueFieldType dispid 107;
    property B_LCle: Smallint dispid 108;
    property B_TCle: StructBanqueFieldType dispid 109;
    property B_Edi: WordBool dispid 110;
    property B_Controle: StructBanqueControleRib dispid 111;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IPMLettrer
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {10EF176B-FC21-452C-93CA-E328D7526A16}
// *********************************************************************//
  IPMLettrer = interface(IPMProcess)
    ['{10EF176B-FC21-452C-93CA-E328D7526A16}']
    function Get_type_: LettrageType; safecall;
    procedure Set_type_(pVal: LettrageType); safecall;
    function Get_Lettre: WideString; safecall;
    procedure Set_Lettre(const pVal: WideString); safecall;
    procedure SetLettreDefault; safecall;
    procedure AddEcriture(const pObj: IBOEcriture3); safecall;
    procedure RmvEcriture(const pObj: IBOEcriture3); safecall;
    function Get_ListEcritures: IBICollection; safecall;
    function Get_Debit: Double; safecall;
    function Get_Credit: Double; safecall;
    function Get_Solde: Double; safecall;
    function Get_DebitDevise: Double; safecall;
    function Get_CreditDevise: Double; safecall;
    function Get_SoldeDevise: Double; safecall;
    property type_: LettrageType read Get_type_ write Set_type_;
    property Lettre: WideString read Get_Lettre write Set_Lettre;
    property ListEcritures: IBICollection read Get_ListEcritures;
    property Debit: Double read Get_Debit;
    property Credit: Double read Get_Credit;
    property Solde: Double read Get_Solde;
    property DebitDevise: Double read Get_DebitDevise;
    property CreditDevise: Double read Get_CreditDevise;
    property SoldeDevise: Double read Get_SoldeDevise;
  end;

// *********************************************************************//
// DispIntf :    IPMLettrerDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {10EF176B-FC21-452C-93CA-E328D7526A16}
// *********************************************************************//
  IPMLettrerDisp = dispinterface
    ['{10EF176B-FC21-452C-93CA-E328D7526A16}']
    property type_: LettrageType dispid 100;
    property Lettre: WideString dispid 101;
    procedure SetLettreDefault; dispid 102;
    procedure AddEcriture(const pObj: IBOEcriture3); dispid 103;
    procedure RmvEcriture(const pObj: IBOEcriture3); dispid 104;
    property ListEcritures: IBICollection readonly dispid 105;
    property Debit: Double readonly dispid 106;
    property Credit: Double readonly dispid 107;
    property Solde: Double readonly dispid 108;
    property DebitDevise: Double readonly dispid 109;
    property CreditDevise: Double readonly dispid 110;
    property SoldeDevise: Double readonly dispid 111;
    procedure Process; dispid 10;
    property CanProcess: WordBool readonly dispid 11;
    property Errors: IFailInfoCol readonly dispid 12;
    property Transactional: WordBool dispid 13;
  end;

// *********************************************************************//
// Interface :   IBOPaysFactory
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {E9771CF3-E87A-497B-9C1C-8F323069758D}
// *********************************************************************//
  IBOPaysFactory = interface(IBITypeObjectFactory)
    ['{E9771CF3-E87A-497B-9C1C-8F323069758D}']
    function ExistIntitule(const s: WideString): WordBool; safecall;
    function ReadIntitule(const s: WideString): IBOPays; safecall;
  end;

// *********************************************************************//
// DispIntf :    IBOPaysFactoryDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {E9771CF3-E87A-497B-9C1C-8F323069758D}
// *********************************************************************//
  IBOPaysFactoryDisp = dispinterface
    ['{E9771CF3-E87A-497B-9C1C-8F323069758D}']
    function ExistIntitule(const s: WideString): WordBool; dispid 10;
    function ReadIntitule(const s: WideString): IBOPays; dispid 11;
    property List: IBICollection readonly dispid 1;
    function Create: IBIPersistObject; dispid 2;
    function Read(const pOID: IBIObjectID): IBIPersistObject; dispid 3;
    function _QuerySynchro(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                           TypeExtraction: SynchroExtractType): IBICollection; dispid 4;
    function _QuerySynchroRemoved(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                                  TypeExtraction: SynchroExtractType): IBICollectionDispatch; dispid 5;
    function ReadFrom(const pStream: IStream): IBIPersistObject; dispid 6;
    property ListForward: IBICollection readonly dispid 7;
    function QueryPredicate(const pPredicate: IDispatch; const sSortDescriptors: WideString): IBICollection; dispid 8;
  end;

// *********************************************************************//
// Interface :   IBOPays
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {9FB3E9A1-4853-4B1D-BEC3-4A1AC48EEB19}
// *********************************************************************//
  IBOPays = interface(IBIPersistObject)
    ['{9FB3E9A1-4853-4B1D-BEC3-4A1AC48EEB19}']
    function Get_Intitule: WideString; safecall;
    procedure Set_Intitule(const pVal: WideString); safecall;
    function Get_Code: WideString; safecall;
    procedure Set_Code(const pVal: WideString); safecall;
    function Get_CodeEdi: WideString; safecall;
    procedure Set_CodeEdi(const pVal: WideString); safecall;
    function Get_Assurance: Double; safecall;
    procedure Set_Assurance(pVal: Double); safecall;
    function Get_Transport: Double; safecall;
    procedure Set_Transport(pVal: Double); safecall;
    function Get_CodeISO2: WideString; safecall;
    procedure Set_CodeISO2(const pVal: WideString); safecall;
    function Get_IsSEPA: WordBool; safecall;
    procedure Set_IsSEPA(pVal: WordBool); safecall;
    property Intitule: WideString read Get_Intitule write Set_Intitule;
    property Code: WideString read Get_Code write Set_Code;
    property CodeEdi: WideString read Get_CodeEdi write Set_CodeEdi;
    property Assurance: Double read Get_Assurance write Set_Assurance;
    property Transport: Double read Get_Transport write Set_Transport;
    property CodeISO2: WideString read Get_CodeISO2 write Set_CodeISO2;
    property IsSEPA: WordBool read Get_IsSEPA write Set_IsSEPA;
  end;

// *********************************************************************//
// DispIntf :    IBOPaysDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {9FB3E9A1-4853-4B1D-BEC3-4A1AC48EEB19}
// *********************************************************************//
  IBOPaysDisp = dispinterface
    ['{9FB3E9A1-4853-4B1D-BEC3-4A1AC48EEB19}']
    property Intitule: WideString dispid 100;
    property Code: WideString dispid 101;
    property CodeEdi: WideString dispid 102;
    property Assurance: Double dispid 103;
    property Transport: Double dispid 104;
    property CodeISO2: WideString dispid 105;
    property IsSEPA: WordBool dispid 106;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IBOCompteRFactory
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {527CFDFC-A4F2-413A-9897-23B2F7C1A6D6}
// *********************************************************************//
  IBOCompteRFactory = interface(IBITypeObjectFactory)
    ['{527CFDFC-A4F2-413A-9897-23B2F7C1A6D6}']
    function Get_ListOrderClassement: IBICollection; safecall;
    function Get_ListOrderType: IBICollection; safecall;
    function ExistNumero(const sNum: WideString): WordBool; safecall;
    function ReadNumero(const sNum: WideString): IBOCompteR; safecall;
    property ListOrderClassement: IBICollection read Get_ListOrderClassement;
    property ListOrderType: IBICollection read Get_ListOrderType;
  end;

// *********************************************************************//
// DispIntf :    IBOCompteRFactoryDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {527CFDFC-A4F2-413A-9897-23B2F7C1A6D6}
// *********************************************************************//
  IBOCompteRFactoryDisp = dispinterface
    ['{527CFDFC-A4F2-413A-9897-23B2F7C1A6D6}']
    property ListOrderClassement: IBICollection readonly dispid 10;
    property ListOrderType: IBICollection readonly dispid 11;
    function ExistNumero(const sNum: WideString): WordBool; dispid 12;
    function ReadNumero(const sNum: WideString): IBOCompteR; dispid 13;
    property List: IBICollection readonly dispid 1;
    function Create: IBIPersistObject; dispid 2;
    function Read(const pOID: IBIObjectID): IBIPersistObject; dispid 3;
    function _QuerySynchro(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                           TypeExtraction: SynchroExtractType): IBICollection; dispid 4;
    function _QuerySynchroRemoved(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                                  TypeExtraction: SynchroExtractType): IBICollectionDispatch; dispid 5;
    function ReadFrom(const pStream: IStream): IBIPersistObject; dispid 6;
    property ListForward: IBICollection readonly dispid 7;
    function QueryPredicate(const pPredicate: IDispatch; const sSortDescriptors: WideString): IBICollection; dispid 8;
  end;

// *********************************************************************//
// Interface :   IBOEcritureAAllFactory
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {1D871194-8500-46AB-924C-9B2548EBE099}
// *********************************************************************//
  IBOEcritureAAllFactory = interface(IBITypeObjectFactory)
    ['{1D871194-8500-46AB-924C-9B2548EBE099}']
    function QueryPlanA(const pAnalytique: IBPAnalytique3): IBICollection; safecall;
    function QuerySectionA(const CompteA: IBOCompteA3): IBICollection; safecall;
    function _QuerySynchroOID(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                              TypeExtraction: SynchroExtractType): IBICollectionDispatch; safecall;
  end;

// *********************************************************************//
// DispIntf :    IBOEcritureAAllFactoryDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {1D871194-8500-46AB-924C-9B2548EBE099}
// *********************************************************************//
  IBOEcritureAAllFactoryDisp = dispinterface
    ['{1D871194-8500-46AB-924C-9B2548EBE099}']
    function QueryPlanA(const pAnalytique: IBPAnalytique3): IBICollection; dispid 10;
    function QuerySectionA(const CompteA: IBOCompteA3): IBICollection; dispid 11;
    function _QuerySynchroOID(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                              TypeExtraction: SynchroExtractType): IBICollectionDispatch; dispid 12;
    property List: IBICollection readonly dispid 1;
    function Create: IBIPersistObject; dispid 2;
    function Read(const pOID: IBIObjectID): IBIPersistObject; dispid 3;
    function _QuerySynchro(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                           TypeExtraction: SynchroExtractType): IBICollection; dispid 4;
    function _QuerySynchroRemoved(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                                  TypeExtraction: SynchroExtractType): IBICollectionDispatch; dispid 5;
    function ReadFrom(const pStream: IStream): IBIPersistObject; dispid 6;
    property ListForward: IBICollection readonly dispid 7;
    function QueryPredicate(const pPredicate: IDispatch; const sSortDescriptors: WideString): IBICollection; dispid 8;
  end;

// *********************************************************************//
// Interface :   IBOJournalAFactory
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {6F95DCED-011E-4F1A-8284-BACBA5526DEE}
// *********************************************************************//
  IBOJournalAFactory = interface(IBITypeObjectFactory)
    ['{6F95DCED-011E-4F1A-8284-BACBA5526DEE}']
    function ExistNumero(const sNum: WideString): WordBool; safecall;
    function ReadNumero(const sNum: WideString): IBOJournalA; safecall;
  end;

// *********************************************************************//
// DispIntf :    IBOJournalAFactoryDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {6F95DCED-011E-4F1A-8284-BACBA5526DEE}
// *********************************************************************//
  IBOJournalAFactoryDisp = dispinterface
    ['{6F95DCED-011E-4F1A-8284-BACBA5526DEE}']
    function ExistNumero(const sNum: WideString): WordBool; dispid 10;
    function ReadNumero(const sNum: WideString): IBOJournalA; dispid 11;
    property List: IBICollection readonly dispid 1;
    function Create: IBIPersistObject; dispid 2;
    function Read(const pOID: IBIObjectID): IBIPersistObject; dispid 3;
    function _QuerySynchro(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                           TypeExtraction: SynchroExtractType): IBICollection; dispid 4;
    function _QuerySynchroRemoved(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                                  TypeExtraction: SynchroExtractType): IBICollectionDispatch; dispid 5;
    function ReadFrom(const pStream: IStream): IBIPersistObject; dispid 6;
    property ListForward: IBICollection readonly dispid 7;
    function QueryPredicate(const pPredicate: IDispatch; const sSortDescriptors: WideString): IBICollection; dispid 8;
  end;

// *********************************************************************//
// Interface :   IBOJournalA
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {DC770506-F0B8-4523-9702-ABC21F060C0B}
// *********************************************************************//
  IBOJournalA = interface(IBIPersistObject)
    ['{DC770506-F0B8-4523-9702-ABC21F060C0B}']
    function Get_JA_Num: WideString; safecall;
    procedure Set_JA_Num(const pVal: WideString); safecall;
    function Get_JA_Intitule: WideString; safecall;
    procedure Set_JA_Intitule(const pVal: WideString); safecall;
    function Get_JA_Sommeil: WordBool; safecall;
    procedure Set_JA_Sommeil(pVal: WordBool); safecall;
    function Get_JA_IFRS: WordBool; safecall;
    procedure Set_JA_IFRS(pVal: WordBool); safecall;
    property JA_Num: WideString read Get_JA_Num write Set_JA_Num;
    property JA_Intitule: WideString read Get_JA_Intitule write Set_JA_Intitule;
    property JA_Sommeil: WordBool read Get_JA_Sommeil write Set_JA_Sommeil;
    property JA_IFRS: WordBool read Get_JA_IFRS write Set_JA_IFRS;
  end;

// *********************************************************************//
// DispIntf :    IBOJournalADisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {DC770506-F0B8-4523-9702-ABC21F060C0B}
// *********************************************************************//
  IBOJournalADisp = dispinterface
    ['{DC770506-F0B8-4523-9702-ABC21F060C0B}']
    property JA_Num: WideString dispid 101;
    property JA_Intitule: WideString dispid 102;
    property JA_Sommeil: WordBool dispid 110;
    property JA_IFRS: WordBool dispid 111;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IBOEcritureODFactory
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {51B2C00F-C2E3-4846-A57E-0554CAFAF01D}
// *********************************************************************//
  IBOEcritureODFactory = interface(IBITypeObjectFactory)
    ['{51B2C00F-C2E3-4846-A57E-0554CAFAF01D}']
    function QueryJournal(const Journal: IBOJournalA; DateDe: TDateTime; DateA: TDateTime): IBICollection; safecall;
    function QueryCompte(const CompteG: IBOCompteG3; const CompteA: IBOCompteA3): IBICollection; safecall;
  end;

// *********************************************************************//
// DispIntf :    IBOEcritureODFactoryDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {51B2C00F-C2E3-4846-A57E-0554CAFAF01D}
// *********************************************************************//
  IBOEcritureODFactoryDisp = dispinterface
    ['{51B2C00F-C2E3-4846-A57E-0554CAFAF01D}']
    function QueryJournal(const Journal: IBOJournalA; DateDe: TDateTime; DateA: TDateTime): IBICollection; dispid 10;
    function QueryCompte(const CompteG: IBOCompteG3; const CompteA: IBOCompteA3): IBICollection; dispid 15;
    property List: IBICollection readonly dispid 1;
    function Create: IBIPersistObject; dispid 2;
    function Read(const pOID: IBIObjectID): IBIPersistObject; dispid 3;
    function _QuerySynchro(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                           TypeExtraction: SynchroExtractType): IBICollection; dispid 4;
    function _QuerySynchroRemoved(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                                  TypeExtraction: SynchroExtractType): IBICollectionDispatch; dispid 5;
    function ReadFrom(const pStream: IStream): IBIPersistObject; dispid 6;
    property ListForward: IBICollection readonly dispid 7;
    function QueryPredicate(const pPredicate: IDispatch; const sSortDescriptors: WideString): IBICollection; dispid 8;
  end;

// *********************************************************************//
// Interface :   ICompanies
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {D7155186-A152-452F-8D3F-5E7D0E838CF2}
// *********************************************************************//
  ICompanies = interface(IDispatch)
    ['{D7155186-A152-452F-8D3F-5E7D0E838CF2}']
    function Get__NewEnum: IUnknown; safecall;
    function Get_Item(lIndex: Integer): ICompany; safecall;
    function Get_Count: Integer; safecall;
    property _NewEnum: IUnknown read Get__NewEnum;
    property Item[lIndex: Integer]: ICompany read Get_Item; default;
    property Count: Integer read Get_Count;
  end;

// *********************************************************************//
// DispIntf :    ICompaniesDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {D7155186-A152-452F-8D3F-5E7D0E838CF2}
// *********************************************************************//
  ICompaniesDisp = dispinterface
    ['{D7155186-A152-452F-8D3F-5E7D0E838CF2}']
    property _NewEnum: IUnknown readonly dispid -4;
    property Item[lIndex: Integer]: ICompany readonly dispid 0; default;
    property Count: Integer readonly dispid 1;
  end;

// *********************************************************************//
// Interface :   ICompany
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {37A95BCE-A845-4557-B607-2997600DCA2C}
// *********************************************************************//
  ICompany = interface(IDispatch)
    ['{37A95BCE-A845-4557-B607-2997600DCA2C}']
    function Get_Name: WideString; safecall;
    function Get_Id: WideString; safecall;
    property Name: WideString read Get_Name;
    property Id: WideString read Get_Id;
  end;

// *********************************************************************//
// DispIntf :    ICompanyDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {37A95BCE-A845-4557-B607-2997600DCA2C}
// *********************************************************************//
  ICompanyDisp = dispinterface
    ['{37A95BCE-A845-4557-B607-2997600DCA2C}']
    property Name: WideString readonly dispid 1;
    property Id: WideString readonly dispid 2;
  end;

// *********************************************************************//
// Interface :   IPMBonAPayer
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {420F35AA-D2F0-4E1D-BAE1-E754AF5FD960}
// *********************************************************************//
  IPMBonAPayer = interface(IPMProcess)
    ['{420F35AA-D2F0-4E1D-BAE1-E754AF5FD960}']
    procedure Set_Ecriture(const Param1: IBOEcriture3); safecall;
    function Get_Commentaire: WideString; safecall;
    procedure Set_Commentaire(const pVal: WideString); safecall;
    property Ecriture: IBOEcriture3 write Set_Ecriture;
    property Commentaire: WideString read Get_Commentaire write Set_Commentaire;
  end;

// *********************************************************************//
// DispIntf :    IPMBonAPayerDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {420F35AA-D2F0-4E1D-BAE1-E754AF5FD960}
// *********************************************************************//
  IPMBonAPayerDisp = dispinterface
    ['{420F35AA-D2F0-4E1D-BAE1-E754AF5FD960}']
    property Ecriture: IBOEcriture3 writeonly dispid 102;
    property Commentaire: WideString dispid 103;
    procedure Process; dispid 10;
    property CanProcess: WordBool readonly dispid 11;
    property Errors: IFailInfoCol readonly dispid 12;
    property Transactional: WordBool dispid 13;
  end;

// *********************************************************************//
// Interface :   IBSCIALApplication3
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {3FBE6898-EBB1-4D11-B5FF-09AE5301973B}
// *********************************************************************//
  IBSCIALApplication3 = interface(IBIPersistStream)
    ['{3FBE6898-EBB1-4D11-B5FF-09AE5301973B}']
    function Get_Licence: ILicence; safecall;
    function Get_Loggable: IBILoggable; safecall;
    function Get_Name: WideString; safecall;
    procedure Set_Name(const pName: WideString); safecall;
    function Get_CptaApplication: IBSCPTAApplication3; safecall;
    procedure Set_CptaApplication(const pObject: IBSCPTAApplication3); safecall;
    function Get_FactoryArticle: IBOArticleFactory3; safecall;
    function Get_FactoryFamille: IBOFamilleFactory2; safecall;
    function Get_FactoryCategorieTarif: IBPCategorieTarifFactory; safecall;
    function Get_FactoryCategorieComptaVente: IBPCategorieComptaVenteFactory; safecall;
    function Get_FactoryCategorieComptaAchat: IBPCategorieComptaAchatFactory; safecall;
    function Get_FactoryCategorieComptaStock: IBPCategorieComptaStockFactory; safecall;
    function Get_FactoryPeriodicite: IBPPeriodiciteFactory; safecall;
    function Get_FactoryExpedition: IBPExpeditionFactory3; safecall;
    function Get_FactoryConditionLivraison: IBPConditionLivraisonFactory; safecall;
    function Get_FactoryDepot: IBODepotFactory2; safecall;
    function Get_FactoryUnite: IBPUniteFactory; safecall;
    function Get_FactoryGamme: IBPGammeFactory; safecall;
    function Get_FactoryConditionnement: IBPConditionnementFactory; safecall;
    function Get_FactoryProduit: IBPProduitFactory2; safecall;
    function Get_FactoryModele: IBOModeleFactory; safecall;
    function Get_FactoryGlossaire: IBOGlossaireFactory; safecall;
    function Get_FactoryArrondi: IBITypeObjectFactory; safecall;
    function Get_FactoryDocument: IBODocumentFactory; safecall;
    function Get_FactoryDocumentStock: IBODocumentStockFactory3; safecall;
    function Get_FactoryDocumentAchat: IBODocumentAchatFactory3; safecall;
    function Get_FactoryDocumentVente: IBODocumentVenteFactory3; safecall;
    function Get_FactoryDocumentInterne: IBODocumentInterneFactory3; safecall;
    function Get_DepotPrincipal: IBODepot3; safecall;
    procedure Set_DepotPrincipal(const pObject: IBODepot3); safecall;
    function Get_FactorySoucheVente: IBISoucheFactory; safecall;
    function Get_FactorySoucheAchat: IBISoucheFactory; safecall;
    function Get_FactorySoucheInterne: IBISoucheFactory; safecall;
    function Get_FactorySoucheStock: IBISoucheFactory; safecall;
    function Get_FactoryParamDocVente: IBIParamDocFactory; safecall;
    function Get_FactoryParamDocAchat: IBIParamDocFactory; safecall;
    function Get_FactoryParamDocStock: IBIParamDocFactory; safecall;
    function Get_FactoryParamDocInterne: IBIParamDocFactory; safecall;
    function Get_FactoryBaremeCommission: IBOBaremeCommissionFactory; safecall;
    function Get_FactoryBaremeRabais: IBOBaremeRabaisFactory; safecall;
    function Get_FactoryBaremeSolde: IBOBaremeSoldeFactory; safecall;
    function Get_FactoryArticleStat: IBPArticleStatFactory; safecall;
    function Get_FactoryAgendaConfig: IBPAgendaFactory; safecall;
    function CreateProcess_Document(DO_Type: DocumentType): IPMDocument; safecall;
    function CreateProcess_AppliquerBareme(const pDoc: IBODocumentPart3): IPMAppliquerBareme; safecall;
    function CreateProcess_ControlerQualite: IPMControlerQualite; safecall;
    function Get_FactoryDocumentLigne: IBODocumentLigneAllFactory; safecall;
    function Get_FactoryBaremeRabaisFrs: IBOBaremeRabaisFactory; safecall;
    function Get_FactoryBaremeSoldeFrs: IBOBaremeSoldeFactory; safecall;
    function Get_FactoryAgenda: IBOAgendaFactory; safecall;
    function Get_FactoryRessourceBase: IBIRessourceFactory; safecall;
    function Get_FactoryRessource: IBORessourceFactory; safecall;
    function Get_FactoryRessourceCentre: IBORessourceCentreFactory; safecall;
    function Get_FactoryDossier: IBITypeObjectFactory; safecall;
    function Get_FactoryDossierParam: IBITypeObjectFactory; safecall;
    function ControlQualiteStat(const pArticle: IBOArticle3; const pFournisseur: IBOFournisseur3; 
                                DateDe: TDateTime; DateA: TDateTime): IControleQualiteStat; safecall;
    function ControlQualiteStatMonoGamme(const pArtGammeEnum: IBOArticleGammeEnum3; 
                                         const pFournisseur: IBOFournisseur3; DateDe: TDateTime; 
                                         DateA: TDateTime): IControleQualiteStat; safecall;
    function ControlQualiteStatDoubleGamme(const pArtGammeEnum1: IBOArticleGammeEnum3; 
                                           const pArtGammeEnum2: IBOArticleGammeEnum3; 
                                           const pFournisseur: IBOFournisseur3; DateDe: TDateTime; 
                                           DateA: TDateTime): IControleQualiteStat; safecall;
    function Get_Transformation: ITransformation; safecall;
    function CreateProcess_Coliser: IPMColiser; safecall;
    function CreateProcess_PreleverLot: IPMPreleverLot; safecall;
    function CreateProcess_DocTransferer: IPMDocTransferer; safecall;
    function Get_FactoryArticleDepotLot: IBOArticleDepotLotAllFactory; safecall;
    function CreateProcess_SousTotal(const pDoc: IBODocumentPart3): IPMDocInsererSousTotal; safecall;
    function CreateProcess_RecalculPrixCompose(const pDoc: IBODocument3): IPMDocRecalculPrixCompose; safecall;
    function CreateProcess_SortirLots: IPMSortirLots; safecall;
    function Get_Companies: ICompanies; safecall;
    function Get_CompanyServer: WideString; safecall;
    procedure Set_CompanyServer(const pName: WideString); safecall;
    function Get_CompanyDatabaseName: WideString; safecall;
    procedure Set_CompanyDatabaseName(const pName: WideString); safecall;
    function Get_CompanyName: WideString; safecall;
    procedure Set_CompanyName(const pName: WideString); safecall;
    function CreateProcess_ConversionClient(const pClient: IBOClient3): IPMConversionClient; safecall;
    function Get_FactoryMotifDevis: IBPMotifDevisFactory; safecall;
    function Get_FactoryDocumentReglement: IBODocumentReglementFactory; safecall;
    function CreateProcess_ReglerEcheances: IPMReglerEcheances; safecall;
    property Licence: ILicence read Get_Licence;
    property Loggable: IBILoggable read Get_Loggable;
    property Name: WideString read Get_Name write Set_Name;
    property CptaApplication: IBSCPTAApplication3 read Get_CptaApplication write Set_CptaApplication;
    property FactoryArticle: IBOArticleFactory3 read Get_FactoryArticle;
    property FactoryFamille: IBOFamilleFactory2 read Get_FactoryFamille;
    property FactoryCategorieTarif: IBPCategorieTarifFactory read Get_FactoryCategorieTarif;
    property FactoryCategorieComptaVente: IBPCategorieComptaVenteFactory read Get_FactoryCategorieComptaVente;
    property FactoryCategorieComptaAchat: IBPCategorieComptaAchatFactory read Get_FactoryCategorieComptaAchat;
    property FactoryCategorieComptaStock: IBPCategorieComptaStockFactory read Get_FactoryCategorieComptaStock;
    property FactoryPeriodicite: IBPPeriodiciteFactory read Get_FactoryPeriodicite;
    property FactoryExpedition: IBPExpeditionFactory3 read Get_FactoryExpedition;
    property FactoryConditionLivraison: IBPConditionLivraisonFactory read Get_FactoryConditionLivraison;
    property FactoryDepot: IBODepotFactory2 read Get_FactoryDepot;
    property FactoryUnite: IBPUniteFactory read Get_FactoryUnite;
    property FactoryGamme: IBPGammeFactory read Get_FactoryGamme;
    property FactoryConditionnement: IBPConditionnementFactory read Get_FactoryConditionnement;
    property FactoryProduit: IBPProduitFactory2 read Get_FactoryProduit;
    property FactoryModele: IBOModeleFactory read Get_FactoryModele;
    property FactoryGlossaire: IBOGlossaireFactory read Get_FactoryGlossaire;
    property FactoryArrondi: IBITypeObjectFactory read Get_FactoryArrondi;
    property FactoryDocument: IBODocumentFactory read Get_FactoryDocument;
    property FactoryDocumentStock: IBODocumentStockFactory3 read Get_FactoryDocumentStock;
    property FactoryDocumentAchat: IBODocumentAchatFactory3 read Get_FactoryDocumentAchat;
    property FactoryDocumentVente: IBODocumentVenteFactory3 read Get_FactoryDocumentVente;
    property FactoryDocumentInterne: IBODocumentInterneFactory3 read Get_FactoryDocumentInterne;
    property DepotPrincipal: IBODepot3 read Get_DepotPrincipal write Set_DepotPrincipal;
    property FactorySoucheVente: IBISoucheFactory read Get_FactorySoucheVente;
    property FactorySoucheAchat: IBISoucheFactory read Get_FactorySoucheAchat;
    property FactorySoucheInterne: IBISoucheFactory read Get_FactorySoucheInterne;
    property FactorySoucheStock: IBISoucheFactory read Get_FactorySoucheStock;
    property FactoryParamDocVente: IBIParamDocFactory read Get_FactoryParamDocVente;
    property FactoryParamDocAchat: IBIParamDocFactory read Get_FactoryParamDocAchat;
    property FactoryParamDocStock: IBIParamDocFactory read Get_FactoryParamDocStock;
    property FactoryParamDocInterne: IBIParamDocFactory read Get_FactoryParamDocInterne;
    property FactoryBaremeCommission: IBOBaremeCommissionFactory read Get_FactoryBaremeCommission;
    property FactoryBaremeRabais: IBOBaremeRabaisFactory read Get_FactoryBaremeRabais;
    property FactoryBaremeSolde: IBOBaremeSoldeFactory read Get_FactoryBaremeSolde;
    property FactoryArticleStat: IBPArticleStatFactory read Get_FactoryArticleStat;
    property FactoryAgendaConfig: IBPAgendaFactory read Get_FactoryAgendaConfig;
    property FactoryDocumentLigne: IBODocumentLigneAllFactory read Get_FactoryDocumentLigne;
    property FactoryBaremeRabaisFrs: IBOBaremeRabaisFactory read Get_FactoryBaremeRabaisFrs;
    property FactoryBaremeSoldeFrs: IBOBaremeSoldeFactory read Get_FactoryBaremeSoldeFrs;
    property FactoryAgenda: IBOAgendaFactory read Get_FactoryAgenda;
    property FactoryRessourceBase: IBIRessourceFactory read Get_FactoryRessourceBase;
    property FactoryRessource: IBORessourceFactory read Get_FactoryRessource;
    property FactoryRessourceCentre: IBORessourceCentreFactory read Get_FactoryRessourceCentre;
    property FactoryDossier: IBITypeObjectFactory read Get_FactoryDossier;
    property FactoryDossierParam: IBITypeObjectFactory read Get_FactoryDossierParam;
    property Transformation: ITransformation read Get_Transformation;
    property FactoryArticleDepotLot: IBOArticleDepotLotAllFactory read Get_FactoryArticleDepotLot;
    property Companies: ICompanies read Get_Companies;
    property CompanyServer: WideString read Get_CompanyServer write Set_CompanyServer;
    property CompanyDatabaseName: WideString read Get_CompanyDatabaseName write Set_CompanyDatabaseName;
    property CompanyName: WideString read Get_CompanyName write Set_CompanyName;
    property FactoryMotifDevis: IBPMotifDevisFactory read Get_FactoryMotifDevis;
    property FactoryDocumentReglement: IBODocumentReglementFactory read Get_FactoryDocumentReglement;
  end;

// *********************************************************************//
// DispIntf :    IBSCIALApplication3Disp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {3FBE6898-EBB1-4D11-B5FF-09AE5301973B}
// *********************************************************************//
  IBSCIALApplication3Disp = dispinterface
    ['{3FBE6898-EBB1-4D11-B5FF-09AE5301973B}']
    property Licence: ILicence readonly dispid 36;
    property Loggable: IBILoggable readonly dispid 37;
    property Name: WideString dispid 10;
    property CptaApplication: IBSCPTAApplication3 dispid 11;
    property FactoryArticle: IBOArticleFactory3 readonly dispid 12;
    property FactoryFamille: IBOFamilleFactory2 readonly dispid 13;
    property FactoryCategorieTarif: IBPCategorieTarifFactory readonly dispid 15;
    property FactoryCategorieComptaVente: IBPCategorieComptaVenteFactory readonly dispid 16;
    property FactoryCategorieComptaAchat: IBPCategorieComptaAchatFactory readonly dispid 17;
    property FactoryCategorieComptaStock: IBPCategorieComptaStockFactory readonly dispid 18;
    property FactoryPeriodicite: IBPPeriodiciteFactory readonly dispid 19;
    property FactoryExpedition: IBPExpeditionFactory3 readonly dispid 20;
    property FactoryConditionLivraison: IBPConditionLivraisonFactory readonly dispid 21;
    property FactoryDepot: IBODepotFactory2 readonly dispid 22;
    property FactoryUnite: IBPUniteFactory readonly dispid 23;
    property FactoryGamme: IBPGammeFactory readonly dispid 24;
    property FactoryConditionnement: IBPConditionnementFactory readonly dispid 25;
    property FactoryProduit: IBPProduitFactory2 readonly dispid 26;
    property FactoryModele: IBOModeleFactory readonly dispid 27;
    property FactoryGlossaire: IBOGlossaireFactory readonly dispid 28;
    property FactoryArrondi: IBITypeObjectFactory readonly dispid 29;
    property FactoryDocument: IBODocumentFactory readonly dispid 30;
    property FactoryDocumentStock: IBODocumentStockFactory3 readonly dispid 31;
    property FactoryDocumentAchat: IBODocumentAchatFactory3 readonly dispid 32;
    property FactoryDocumentVente: IBODocumentVenteFactory3 readonly dispid 33;
    property FactoryDocumentInterne: IBODocumentInterneFactory3 readonly dispid 34;
    property DepotPrincipal: IBODepot3 dispid 38;
    property FactorySoucheVente: IBISoucheFactory readonly dispid 39;
    property FactorySoucheAchat: IBISoucheFactory readonly dispid 40;
    property FactorySoucheInterne: IBISoucheFactory readonly dispid 41;
    property FactorySoucheStock: IBISoucheFactory readonly dispid 42;
    property FactoryParamDocVente: IBIParamDocFactory readonly dispid 43;
    property FactoryParamDocAchat: IBIParamDocFactory readonly dispid 44;
    property FactoryParamDocStock: IBIParamDocFactory readonly dispid 45;
    property FactoryParamDocInterne: IBIParamDocFactory readonly dispid 46;
    property FactoryBaremeCommission: IBOBaremeCommissionFactory readonly dispid 47;
    property FactoryBaremeRabais: IBOBaremeRabaisFactory readonly dispid 48;
    property FactoryBaremeSolde: IBOBaremeSoldeFactory readonly dispid 49;
    property FactoryArticleStat: IBPArticleStatFactory readonly dispid 50;
    property FactoryAgendaConfig: IBPAgendaFactory readonly dispid 51;
    function CreateProcess_Document(DO_Type: DocumentType): IPMDocument; dispid 100;
    function CreateProcess_AppliquerBareme(const pDoc: IBODocumentPart3): IPMAppliquerBareme; dispid 104;
    function CreateProcess_ControlerQualite: IPMControlerQualite; dispid 109;
    property FactoryDocumentLigne: IBODocumentLigneAllFactory readonly dispid 101;
    property FactoryBaremeRabaisFrs: IBOBaremeRabaisFactory readonly dispid 102;
    property FactoryBaremeSoldeFrs: IBOBaremeSoldeFactory readonly dispid 103;
    property FactoryAgenda: IBOAgendaFactory readonly dispid 105;
    property FactoryRessourceBase: IBIRessourceFactory readonly dispid 106;
    property FactoryRessource: IBORessourceFactory readonly dispid 107;
    property FactoryRessourceCentre: IBORessourceCentreFactory readonly dispid 108;
    property FactoryDossier: IBITypeObjectFactory readonly dispid 113;
    property FactoryDossierParam: IBITypeObjectFactory readonly dispid 114;
    function ControlQualiteStat(const pArticle: IBOArticle3; const pFournisseur: IBOFournisseur3; 
                                DateDe: TDateTime; DateA: TDateTime): IControleQualiteStat; dispid 110;
    function ControlQualiteStatMonoGamme(const pArtGammeEnum: IBOArticleGammeEnum3; 
                                         const pFournisseur: IBOFournisseur3; DateDe: TDateTime; 
                                         DateA: TDateTime): IControleQualiteStat; dispid 111;
    function ControlQualiteStatDoubleGamme(const pArtGammeEnum1: IBOArticleGammeEnum3; 
                                           const pArtGammeEnum2: IBOArticleGammeEnum3; 
                                           const pFournisseur: IBOFournisseur3; DateDe: TDateTime; 
                                           DateA: TDateTime): IControleQualiteStat; dispid 112;
    property Transformation: ITransformation readonly dispid 115;
    function CreateProcess_Coliser: IPMColiser; dispid 116;
    function CreateProcess_PreleverLot: IPMPreleverLot; dispid 117;
    function CreateProcess_DocTransferer: IPMDocTransferer; dispid 118;
    property FactoryArticleDepotLot: IBOArticleDepotLotAllFactory readonly dispid 119;
    function CreateProcess_SousTotal(const pDoc: IBODocumentPart3): IPMDocInsererSousTotal; dispid 120;
    function CreateProcess_RecalculPrixCompose(const pDoc: IBODocument3): IPMDocRecalculPrixCompose; dispid 121;
    function CreateProcess_SortirLots: IPMSortirLots; dispid 122;
    property Companies: ICompanies readonly dispid 123;
    property CompanyServer: WideString dispid 150;
    property CompanyDatabaseName: WideString dispid 151;
    property CompanyName: WideString dispid 152;
    function CreateProcess_ConversionClient(const pClient: IBOClient3): IPMConversionClient; dispid 153;
    property FactoryMotifDevis: IBPMotifDevisFactory readonly dispid 154;
    property FactoryDocumentReglement: IBODocumentReglementFactory readonly dispid 155;
    function CreateProcess_ReglerEcheances: IPMReglerEcheances; dispid 156;
    property IsOpen: WordBool readonly dispid 1;
    procedure Open; dispid 2;
    procedure Close; dispid 3;
    procedure Create; dispid 4;
    property DatabaseInfo: IDatabaseInfo readonly dispid 5;
    property Synchro: ISynchroStream readonly dispid 6;
    function ReadFrom(const pStream: IStream): IBIPersistObject; dispid 7;
  end;

// *********************************************************************//
// Interface :   IBPCategorieComptaVenteFactory
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {E1F2CBDB-6CF9-4A33-A007-3E0FE21496B7}
// *********************************************************************//
  IBPCategorieComptaVenteFactory = interface(IBITypeObjectFactory)
    ['{E1F2CBDB-6CF9-4A33-A007-3E0FE21496B7}']
    function ExistIntitule(const sIntitule: WideString): WordBool; safecall;
    function ReadIntitule(const sIntitule: WideString): IBPCategorieComptaVente; safecall;
  end;

// *********************************************************************//
// DispIntf :    IBPCategorieComptaVenteFactoryDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {E1F2CBDB-6CF9-4A33-A007-3E0FE21496B7}
// *********************************************************************//
  IBPCategorieComptaVenteFactoryDisp = dispinterface
    ['{E1F2CBDB-6CF9-4A33-A007-3E0FE21496B7}']
    function ExistIntitule(const sIntitule: WideString): WordBool; dispid 10;
    function ReadIntitule(const sIntitule: WideString): IBPCategorieComptaVente; dispid 11;
    property List: IBICollection readonly dispid 1;
    function Create: IBIPersistObject; dispid 2;
    function Read(const pOID: IBIObjectID): IBIPersistObject; dispid 3;
    function _QuerySynchro(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                           TypeExtraction: SynchroExtractType): IBICollection; dispid 4;
    function _QuerySynchroRemoved(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                                  TypeExtraction: SynchroExtractType): IBICollectionDispatch; dispid 5;
    function ReadFrom(const pStream: IStream): IBIPersistObject; dispid 6;
    property ListForward: IBICollection readonly dispid 7;
    function QueryPredicate(const pPredicate: IDispatch; const sSortDescriptors: WideString): IBICollection; dispid 8;
  end;

// *********************************************************************//
// Interface :   IBPCategorieComptaVente
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {3D471238-B9A3-4593-B33F-D0D9F38EBFAF}
// *********************************************************************//
  IBPCategorieComptaVente = interface(IBICategorieCompta)
    ['{3D471238-B9A3-4593-B33F-D0D9F38EBFAF}']
    function Get_FactoryCategorieComptaVente: IBPCategorieComptaVenteFactory; safecall;
    property FactoryCategorieComptaVente: IBPCategorieComptaVenteFactory read Get_FactoryCategorieComptaVente;
  end;

// *********************************************************************//
// DispIntf :    IBPCategorieComptaVenteDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {3D471238-B9A3-4593-B33F-D0D9F38EBFAF}
// *********************************************************************//
  IBPCategorieComptaVenteDisp = dispinterface
    ['{3D471238-B9A3-4593-B33F-D0D9F38EBFAF}']
    property FactoryCategorieComptaVente: IBPCategorieComptaVenteFactory readonly dispid 110;
    property Intitule: WideString dispid 100;
    property Domaine: DomaineType readonly dispid 101;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IBPCategorieComptaAchatFactory
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {266979EE-CBF1-4268-A9F6-4B409EFC0A71}
// *********************************************************************//
  IBPCategorieComptaAchatFactory = interface(IBITypeObjectFactory)
    ['{266979EE-CBF1-4268-A9F6-4B409EFC0A71}']
    function ExistIntitule(const sIntitule: WideString): WordBool; safecall;
    function ReadIntitule(const sIntitule: WideString): IBPCategorieComptaAchat; safecall;
  end;

// *********************************************************************//
// DispIntf :    IBPCategorieComptaAchatFactoryDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {266979EE-CBF1-4268-A9F6-4B409EFC0A71}
// *********************************************************************//
  IBPCategorieComptaAchatFactoryDisp = dispinterface
    ['{266979EE-CBF1-4268-A9F6-4B409EFC0A71}']
    function ExistIntitule(const sIntitule: WideString): WordBool; dispid 10;
    function ReadIntitule(const sIntitule: WideString): IBPCategorieComptaAchat; dispid 11;
    property List: IBICollection readonly dispid 1;
    function Create: IBIPersistObject; dispid 2;
    function Read(const pOID: IBIObjectID): IBIPersistObject; dispid 3;
    function _QuerySynchro(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                           TypeExtraction: SynchroExtractType): IBICollection; dispid 4;
    function _QuerySynchroRemoved(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                                  TypeExtraction: SynchroExtractType): IBICollectionDispatch; dispid 5;
    function ReadFrom(const pStream: IStream): IBIPersistObject; dispid 6;
    property ListForward: IBICollection readonly dispid 7;
    function QueryPredicate(const pPredicate: IDispatch; const sSortDescriptors: WideString): IBICollection; dispid 8;
  end;

// *********************************************************************//
// Interface :   IBPCategorieComptaAchat
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {49897345-3D8F-4F09-99C7-CCBFD73969C9}
// *********************************************************************//
  IBPCategorieComptaAchat = interface(IBICategorieCompta)
    ['{49897345-3D8F-4F09-99C7-CCBFD73969C9}']
    function Get_FactoryCategorieComptaAchat: IBPCategorieComptaAchatFactory; safecall;
    property FactoryCategorieComptaAchat: IBPCategorieComptaAchatFactory read Get_FactoryCategorieComptaAchat;
  end;

// *********************************************************************//
// DispIntf :    IBPCategorieComptaAchatDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {49897345-3D8F-4F09-99C7-CCBFD73969C9}
// *********************************************************************//
  IBPCategorieComptaAchatDisp = dispinterface
    ['{49897345-3D8F-4F09-99C7-CCBFD73969C9}']
    property FactoryCategorieComptaAchat: IBPCategorieComptaAchatFactory readonly dispid 110;
    property Intitule: WideString dispid 100;
    property Domaine: DomaineType readonly dispid 101;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IBPCategorieComptaStockFactory
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {EC38C20D-EE75-4087-B42B-09FF3EE8AE43}
// *********************************************************************//
  IBPCategorieComptaStockFactory = interface(IBITypeObjectFactory)
    ['{EC38C20D-EE75-4087-B42B-09FF3EE8AE43}']
    function ExistIntitule(const sIntitule: WideString): WordBool; safecall;
    function ReadIntitule(const sIntitule: WideString): IBPCategorieComptaStock; safecall;
  end;

// *********************************************************************//
// DispIntf :    IBPCategorieComptaStockFactoryDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {EC38C20D-EE75-4087-B42B-09FF3EE8AE43}
// *********************************************************************//
  IBPCategorieComptaStockFactoryDisp = dispinterface
    ['{EC38C20D-EE75-4087-B42B-09FF3EE8AE43}']
    function ExistIntitule(const sIntitule: WideString): WordBool; dispid 10;
    function ReadIntitule(const sIntitule: WideString): IBPCategorieComptaStock; dispid 11;
    property List: IBICollection readonly dispid 1;
    function Create: IBIPersistObject; dispid 2;
    function Read(const pOID: IBIObjectID): IBIPersistObject; dispid 3;
    function _QuerySynchro(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                           TypeExtraction: SynchroExtractType): IBICollection; dispid 4;
    function _QuerySynchroRemoved(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                                  TypeExtraction: SynchroExtractType): IBICollectionDispatch; dispid 5;
    function ReadFrom(const pStream: IStream): IBIPersistObject; dispid 6;
    property ListForward: IBICollection readonly dispid 7;
    function QueryPredicate(const pPredicate: IDispatch; const sSortDescriptors: WideString): IBICollection; dispid 8;
  end;

// *********************************************************************//
// Interface :   IBPCategorieComptaStock
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {892665D1-CA5A-40FD-A33B-C17B150C20DD}
// *********************************************************************//
  IBPCategorieComptaStock = interface(IBICategorieCompta)
    ['{892665D1-CA5A-40FD-A33B-C17B150C20DD}']
    function Get_FactoryCategorieComptaStock: IBPCategorieComptaStockFactory; safecall;
    property FactoryCategorieComptaStock: IBPCategorieComptaStockFactory read Get_FactoryCategorieComptaStock;
  end;

// *********************************************************************//
// DispIntf :    IBPCategorieComptaStockDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {892665D1-CA5A-40FD-A33B-C17B150C20DD}
// *********************************************************************//
  IBPCategorieComptaStockDisp = dispinterface
    ['{892665D1-CA5A-40FD-A33B-C17B150C20DD}']
    property FactoryCategorieComptaStock: IBPCategorieComptaStockFactory readonly dispid 110;
    property Intitule: WideString dispid 100;
    property Domaine: DomaineType readonly dispid 101;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IBODocumentStockFactory3
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {DD1ADDDD-EDDF-4FB5-A614-7BF54A5E9198}
// *********************************************************************//
  IBODocumentStockFactory3 = interface(IBITypeObjectFactory)
    ['{DD1ADDDD-EDDF-4FB5-A614-7BF54A5E9198}']
    function CreateType(DO_Type: DocumentType): IBODocumentStock3; safecall;
    function QueryTypeOrderPiece(DO_Type: DocumentType): IBICollection; safecall;
    function QueryTypePieceOrderPiece(DO_Type: DocumentType; const sDO_PieceDe: WideString; 
                                      const sDO_PieceA: WideString): IBICollection; safecall;
    function ExistPiece(DO_Type: DocumentType; const sDO_Piece: WideString): WordBool; safecall;
    function ReadPiece(DO_Type: DocumentType; const sDO_Piece: WideString): IBODocumentStock3; safecall;
    function QueryDepotOrderType(const Depot: IBODepot3): IBICollection; safecall;
    function _QuerySynchroType(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                               TypeExtraction: SynchroExtractType; TypeDe: DocumentType; 
                               TypeA: DocumentType): IBICollection; safecall;
    function _QuerySynchroOIDType(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                                  TypeExtraction: SynchroExtractType; TypeDe: DocumentType; 
                                  TypeA: DocumentType): IBICollectionDispatch; safecall;
    function QueryTypeDateOrderPiece(DO_Type: DocumentType; DateDeb: TDateTime; DateFin: TDateTime): IBICollection; safecall;
  end;

// *********************************************************************//
// DispIntf :    IBODocumentStockFactory3Disp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {DD1ADDDD-EDDF-4FB5-A614-7BF54A5E9198}
// *********************************************************************//
  IBODocumentStockFactory3Disp = dispinterface
    ['{DD1ADDDD-EDDF-4FB5-A614-7BF54A5E9198}']
    function CreateType(DO_Type: DocumentType): IBODocumentStock3; dispid 20;
    function QueryTypeOrderPiece(DO_Type: DocumentType): IBICollection; dispid 21;
    function QueryTypePieceOrderPiece(DO_Type: DocumentType; const sDO_PieceDe: WideString; 
                                      const sDO_PieceA: WideString): IBICollection; dispid 22;
    function ExistPiece(DO_Type: DocumentType; const sDO_Piece: WideString): WordBool; dispid 23;
    function ReadPiece(DO_Type: DocumentType; const sDO_Piece: WideString): IBODocumentStock3; dispid 24;
    function QueryDepotOrderType(const Depot: IBODepot3): IBICollection; dispid 25;
    function _QuerySynchroType(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                               TypeExtraction: SynchroExtractType; TypeDe: DocumentType; 
                               TypeA: DocumentType): IBICollection; dispid 26;
    function _QuerySynchroOIDType(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                                  TypeExtraction: SynchroExtractType; TypeDe: DocumentType; 
                                  TypeA: DocumentType): IBICollectionDispatch; dispid 27;
    function QueryTypeDateOrderPiece(DO_Type: DocumentType; DateDeb: TDateTime; DateFin: TDateTime): IBICollection; dispid 28;
    property List: IBICollection readonly dispid 1;
    function Create: IBIPersistObject; dispid 2;
    function Read(const pOID: IBIObjectID): IBIPersistObject; dispid 3;
    function _QuerySynchro(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                           TypeExtraction: SynchroExtractType): IBICollection; dispid 4;
    function _QuerySynchroRemoved(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                                  TypeExtraction: SynchroExtractType): IBICollectionDispatch; dispid 5;
    function ReadFrom(const pStream: IStream): IBIPersistObject; dispid 6;
    property ListForward: IBICollection readonly dispid 7;
    function QueryPredicate(const pPredicate: IDispatch; const sSortDescriptors: WideString): IBICollection; dispid 8;
  end;

// *********************************************************************//
// Interface :   IBODocumentStock3
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {D53827CA-0296-4948-AD6C-3C334145FDBD}
// *********************************************************************//
  IBODocumentStock3 = interface(IBODocument3)
    ['{D53827CA-0296-4948-AD6C-3C334145FDBD}']
    function Get_FactoryDocumentStock: IBODocumentStockFactory3; safecall;
    function Get_DepotOrigine: IBODepot3; safecall;
    function Get_DepotDestination: IBODepot3; safecall;
    procedure Set_DepotOrigine(const pDepot: IBODepot3); safecall;
    procedure Set_DepotDestination(const pDepot: IBODepot3); safecall;
    function Get_DO_DateFabrication: TDateTime; safecall;
    procedure Set_DO_DateFabrication(pVal: TDateTime); safecall;
    property FactoryDocumentStock: IBODocumentStockFactory3 read Get_FactoryDocumentStock;
    property DepotOrigine: IBODepot3 read Get_DepotOrigine write Set_DepotOrigine;
    property DepotDestination: IBODepot3 read Get_DepotDestination write Set_DepotDestination;
    property DO_DateFabrication: TDateTime read Get_DO_DateFabrication write Set_DO_DateFabrication;
  end;

// *********************************************************************//
// DispIntf :    IBODocumentStock3Disp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {D53827CA-0296-4948-AD6C-3C334145FDBD}
// *********************************************************************//
  IBODocumentStock3Disp = dispinterface
    ['{D53827CA-0296-4948-AD6C-3C334145FDBD}']
    property FactoryDocumentStock: IBODocumentStockFactory3 readonly dispid 150;
    property DepotOrigine: IBODepot3 dispid 152;
    property DepotDestination: IBODepot3 dispid 153;
    property DO_DateFabrication: TDateTime dispid 154;
    property FactoryDocument: IBODocumentFactory readonly dispid 100;
    property FactoryDocumentLigne: IBODocumentLigneFactory readonly dispid 101;
    property DO_Domaine: DomaineType readonly dispid 104;
    property DO_Type: DocumentType readonly dispid 105;
    property DO_Piece: WideString dispid 106;
    property DO_Date: TDateTime dispid 107;
    property DO_Ref: WideString dispid 108;
    property DepotStockage: IBODepot3 dispid 109;
    property DO_Imprim: WordBool readonly dispid 110;
    property DO_Heure: TDateTime readonly dispid 111;
    property DO_Transfere: WordBool readonly dispid 113;
    property InfoLibre: IBIValues readonly dispid 114;
    procedure SetDefaultDO_Piece; dispid 115;
    property Collaborateur: IBOCollaborateur dispid 116;
    property Souche: IBISouche dispid 117;
    property CompteA: IBOCompteA3 dispid 161;
    property DO_TotalHT: Double readonly dispid 118;
    property FactoryDocumentMedia: IBITypeObjectFactory readonly dispid 119;
    property DO_TotalHTNet: Double readonly dispid 120;
    property DO_TotalTTC: Double readonly dispid 121;
    property DO_NetAPayer: Double readonly dispid 122;
    property DO_MontantRegle: Double readonly dispid 123;
    procedure RecalculTotaux(pVal: WordBool); dispid 124;
    procedure SetAutoRecalculTotaux(pVal: WordBool); dispid 125;
    function HasAutoRecalculTotaux: WordBool; dispid 126;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IBODocumentAchatFactory3
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {17DB8F80-222C-49EA-9424-53620A49EF4A}
// *********************************************************************//
  IBODocumentAchatFactory3 = interface(IBITypeObjectFactory)
    ['{17DB8F80-222C-49EA-9424-53620A49EF4A}']
    function CreateType(DO_Type: DocumentType): IBODocumentAchat3; safecall;
    function QueryTypeOrderPiece(DO_Type: DocumentType): IBICollection; safecall;
    function QueryTypePieceOrderPiece(DO_Type: DocumentType; const sDO_PieceDe: WideString; 
                                      const sDO_PieceA: WideString): IBICollection; safecall;
    function ExistPiece(DO_Type: DocumentType; const sDO_Piece: WideString): WordBool; safecall;
    function ReadPiece(DO_Type: DocumentType; const sDO_Piece: WideString): IBODocumentAchat3; safecall;
    function CreateFacture(DO_Provenance: DocumentProvenanceType): IBODocumentAchat3; safecall;
    function QueryTiersOrderDate(const Fourniss: IBOFournisseur3): IBICollection; safecall;
    function QueryTiersTypeOrderDate(const Fourniss: IBOFournisseur3; DO_Type: DocumentType): IBICollection; safecall;
    function QueryCollaborateurType(const Collab: IBOCollaborateur; DO_Type: DocumentType): IBICollection; safecall;
    function QueryTiersDateOrderDate(const Fourniss: IBOFournisseur3; DateDeb: TDateTime; 
                                     DateFin: TDateTime): IBICollection; safecall;
    function QueryTiersTypeDateOrderDate(const Fourniss: IBOFournisseur3; DO_Type: DocumentType; 
                                         DateDeb: TDateTime; DateFin: TDateTime): IBICollection; safecall;
    function _QuerySynchroType(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                               TypeExtraction: SynchroExtractType; TypeDe: DocumentType; 
                               TypeA: DocumentType): IBICollection; safecall;
    function _QuerySynchroOIDType(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                                  TypeExtraction: SynchroExtractType; TypeDe: DocumentType; 
                                  TypeA: DocumentType): IBICollectionDispatch; safecall;
    function QueryTypeDateOrderPiece(DO_Type: DocumentType; DateDeb: TDateTime; DateFin: TDateTime): IBICollection; safecall;
  end;

// *********************************************************************//
// DispIntf :    IBODocumentAchatFactory3Disp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {17DB8F80-222C-49EA-9424-53620A49EF4A}
// *********************************************************************//
  IBODocumentAchatFactory3Disp = dispinterface
    ['{17DB8F80-222C-49EA-9424-53620A49EF4A}']
    function CreateType(DO_Type: DocumentType): IBODocumentAchat3; dispid 20;
    function QueryTypeOrderPiece(DO_Type: DocumentType): IBICollection; dispid 21;
    function QueryTypePieceOrderPiece(DO_Type: DocumentType; const sDO_PieceDe: WideString; 
                                      const sDO_PieceA: WideString): IBICollection; dispid 22;
    function ExistPiece(DO_Type: DocumentType; const sDO_Piece: WideString): WordBool; dispid 23;
    function ReadPiece(DO_Type: DocumentType; const sDO_Piece: WideString): IBODocumentAchat3; dispid 24;
    function CreateFacture(DO_Provenance: DocumentProvenanceType): IBODocumentAchat3; dispid 25;
    function QueryTiersOrderDate(const Fourniss: IBOFournisseur3): IBICollection; dispid 26;
    function QueryTiersTypeOrderDate(const Fourniss: IBOFournisseur3; DO_Type: DocumentType): IBICollection; dispid 27;
    function QueryCollaborateurType(const Collab: IBOCollaborateur; DO_Type: DocumentType): IBICollection; dispid 28;
    function QueryTiersDateOrderDate(const Fourniss: IBOFournisseur3; DateDeb: TDateTime; 
                                     DateFin: TDateTime): IBICollection; dispid 29;
    function QueryTiersTypeDateOrderDate(const Fourniss: IBOFournisseur3; DO_Type: DocumentType; 
                                         DateDeb: TDateTime; DateFin: TDateTime): IBICollection; dispid 30;
    function _QuerySynchroType(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                               TypeExtraction: SynchroExtractType; TypeDe: DocumentType; 
                               TypeA: DocumentType): IBICollection; dispid 31;
    function _QuerySynchroOIDType(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                                  TypeExtraction: SynchroExtractType; TypeDe: DocumentType; 
                                  TypeA: DocumentType): IBICollectionDispatch; dispid 32;
    function QueryTypeDateOrderPiece(DO_Type: DocumentType; DateDeb: TDateTime; DateFin: TDateTime): IBICollection; dispid 33;
    property List: IBICollection readonly dispid 1;
    function Create: IBIPersistObject; dispid 2;
    function Read(const pOID: IBIObjectID): IBIPersistObject; dispid 3;
    function _QuerySynchro(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                           TypeExtraction: SynchroExtractType): IBICollection; dispid 4;
    function _QuerySynchroRemoved(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                                  TypeExtraction: SynchroExtractType): IBICollectionDispatch; dispid 5;
    function ReadFrom(const pStream: IStream): IBIPersistObject; dispid 6;
    property ListForward: IBICollection readonly dispid 7;
    function QueryPredicate(const pPredicate: IDispatch; const sSortDescriptors: WideString): IBICollection; dispid 8;
  end;

// *********************************************************************//
// Interface :   IBODocumentPart3
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {589F1EF5-419A-46BB-BA5E-EE64B9FD1E39}
// *********************************************************************//
  IBODocumentPart3 = interface(IBODocument3)
    ['{589F1EF5-419A-46BB-BA5E-EE64B9FD1E39}']
    function Get_FactoryDocumentPart: IBITypeObjectFactory; safecall;
    function Get_Tiers: IBOTiersPart3; safecall;
    procedure Set_Tiers(const pTiers: IBOTiersPart3); safecall;
    function Get_Devise: IBPDevise2; safecall;
    procedure Set_Devise(const pDevise: IBPDevise2); safecall;
    function Get_DO_Cours: Double; safecall;
    procedure Set_DO_Cours(pVal: Double); safecall;
    function Get_TiersPayeur: IBOTiersPart3; safecall;
    procedure Set_TiersPayeur(const pTiers: IBOTiersPart3); safecall;
    function Get_Expedition: IBPExpedition3; safecall;
    procedure Set_Expedition(const pExpedition: IBPExpedition3); safecall;
    function Get_DO_TxEscompte: Double; safecall;
    procedure Set_DO_TxEscompte(pVal: Double); safecall;
    function Get_DO_Reliquat: WordBool; safecall;
    function Get_DO_Coord(sElt: Smallint): WideString; safecall;
    procedure Set_DO_Coord(sElt: Smallint; const pVal: WideString); safecall;
    function Get_DO_DateLivr: TDateTime; safecall;
    procedure Set_DO_DateLivr(pVal: TDateTime); safecall;
    function Get_ConditionLivraison: IBPConditionLivraison; safecall;
    procedure Set_ConditionLivraison(const pConditionLivraison: IBPConditionLivraison); safecall;
    function Get_DO_Transaction: Smallint; safecall;
    procedure Set_DO_Transaction(pVal: Smallint); safecall;
    function Get_DO_Langue: LangueType; safecall;
    procedure Set_DO_Langue(pVal: LangueType); safecall;
    function Get_DO_Ecart: Double; safecall;
    procedure Set_DO_Ecart(pVal: Double); safecall;
    function Get_DO_Regime: Smallint; safecall;
    procedure Set_DO_Regime(pVal: Smallint); safecall;
    function Get_DO_Souche: Smallint; safecall;
    procedure Set_DO_Souche(pVal: Smallint); safecall;
    function Get_CategorieCompta: IBICategorieCompta; safecall;
    procedure Set_CategorieCompta(const pCategorieCompta: IBICategorieCompta); safecall;
    function Get_CompteG: IBOCompteG3; safecall;
    procedure Set_CompteG(const pCompteG: IBOCompteG3); safecall;
    function Get_DO_Statut: DocumentStatutType; safecall;
    procedure Set_DO_Statut(pVal: DocumentStatutType); safecall;
    function Get_DO_Provenance: DocumentProvenanceType; safecall;
    function Get_CompteAIFRS: IBOCompteA3; safecall;
    procedure Set_CompteAIFRS(const pCompteA: IBOCompteA3); safecall;
    function Get_DO_Contact: WideString; safecall;
    procedure Set_DO_Contact(const pVal: WideString); safecall;
    function Get_FraisExpedition: Double; safecall;
    procedure Set_FraisExpedition(pVal: Double); safecall;
    function Get_DO_DateLivrRealisee: TDateTime; safecall;
    procedure Set_DO_DateLivrRealisee(pVal: TDateTime); safecall;
    property FactoryDocumentPart: IBITypeObjectFactory read Get_FactoryDocumentPart;
    property Tiers: IBOTiersPart3 read Get_Tiers write Set_Tiers;
    property Devise: IBPDevise2 read Get_Devise write Set_Devise;
    property DO_Cours: Double read Get_DO_Cours write Set_DO_Cours;
    property TiersPayeur: IBOTiersPart3 read Get_TiersPayeur write Set_TiersPayeur;
    property Expedition: IBPExpedition3 read Get_Expedition write Set_Expedition;
    property DO_TxEscompte: Double read Get_DO_TxEscompte write Set_DO_TxEscompte;
    property DO_Reliquat: WordBool read Get_DO_Reliquat;
    property DO_Coord[sElt: Smallint]: WideString read Get_DO_Coord write Set_DO_Coord;
    property DO_DateLivr: TDateTime read Get_DO_DateLivr write Set_DO_DateLivr;
    property ConditionLivraison: IBPConditionLivraison read Get_ConditionLivraison write Set_ConditionLivraison;
    property DO_Transaction: Smallint read Get_DO_Transaction write Set_DO_Transaction;
    property DO_Langue: LangueType read Get_DO_Langue write Set_DO_Langue;
    property DO_Ecart: Double read Get_DO_Ecart write Set_DO_Ecart;
    property DO_Regime: Smallint read Get_DO_Regime write Set_DO_Regime;
    property DO_Souche: Smallint read Get_DO_Souche write Set_DO_Souche;
    property CategorieCompta: IBICategorieCompta read Get_CategorieCompta write Set_CategorieCompta;
    property CompteG: IBOCompteG3 read Get_CompteG write Set_CompteG;
    property DO_Statut: DocumentStatutType read Get_DO_Statut write Set_DO_Statut;
    property DO_Provenance: DocumentProvenanceType read Get_DO_Provenance;
    property CompteAIFRS: IBOCompteA3 read Get_CompteAIFRS write Set_CompteAIFRS;
    property DO_Contact: WideString read Get_DO_Contact write Set_DO_Contact;
    property FraisExpedition: Double read Get_FraisExpedition write Set_FraisExpedition;
    property DO_DateLivrRealisee: TDateTime read Get_DO_DateLivrRealisee write Set_DO_DateLivrRealisee;
  end;

// *********************************************************************//
// DispIntf :    IBODocumentPart3Disp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {589F1EF5-419A-46BB-BA5E-EE64B9FD1E39}
// *********************************************************************//
  IBODocumentPart3Disp = dispinterface
    ['{589F1EF5-419A-46BB-BA5E-EE64B9FD1E39}']
    property FactoryDocumentPart: IBITypeObjectFactory readonly dispid 150;
    property Tiers: IBOTiersPart3 dispid 154;
    property Devise: IBPDevise2 dispid 155;
    property DO_Cours: Double dispid 156;
    property TiersPayeur: IBOTiersPart3 dispid 157;
    property Expedition: IBPExpedition3 dispid 158;
    property DO_TxEscompte: Double dispid 159;
    property DO_Reliquat: WordBool readonly dispid 160;
    property DO_Coord[sElt: Smallint]: WideString dispid 163;
    property DO_DateLivr: TDateTime dispid 164;
    property ConditionLivraison: IBPConditionLivraison dispid 165;
    property DO_Transaction: Smallint dispid 166;
    property DO_Langue: LangueType dispid 167;
    property DO_Ecart: Double dispid 168;
    property DO_Regime: Smallint dispid 169;
    property DO_Souche: Smallint dispid 170;
    property CategorieCompta: IBICategorieCompta dispid 171;
    property CompteG: IBOCompteG3 dispid 172;
    property DO_Statut: DocumentStatutType dispid 173;
    property DO_Provenance: DocumentProvenanceType readonly dispid 174;
    property CompteAIFRS: IBOCompteA3 dispid 175;
    property DO_Contact: WideString dispid 176;
    property FraisExpedition: Double dispid 177;
    property DO_DateLivrRealisee: TDateTime dispid 178;
    property FactoryDocument: IBODocumentFactory readonly dispid 100;
    property FactoryDocumentLigne: IBODocumentLigneFactory readonly dispid 101;
    property DO_Domaine: DomaineType readonly dispid 104;
    property DO_Type: DocumentType readonly dispid 105;
    property DO_Piece: WideString dispid 106;
    property DO_Date: TDateTime dispid 107;
    property DO_Ref: WideString dispid 108;
    property DepotStockage: IBODepot3 dispid 109;
    property DO_Imprim: WordBool readonly dispid 110;
    property DO_Heure: TDateTime readonly dispid 111;
    property DO_Transfere: WordBool readonly dispid 113;
    property InfoLibre: IBIValues readonly dispid 114;
    procedure SetDefaultDO_Piece; dispid 115;
    property Collaborateur: IBOCollaborateur dispid 116;
    property Souche: IBISouche dispid 117;
    property CompteA: IBOCompteA3 dispid 161;
    property DO_TotalHT: Double readonly dispid 118;
    property FactoryDocumentMedia: IBITypeObjectFactory readonly dispid 119;
    property DO_TotalHTNet: Double readonly dispid 120;
    property DO_TotalTTC: Double readonly dispid 121;
    property DO_NetAPayer: Double readonly dispid 122;
    property DO_MontantRegle: Double readonly dispid 123;
    procedure RecalculTotaux(pVal: WordBool); dispid 124;
    procedure SetAutoRecalculTotaux(pVal: WordBool); dispid 125;
    function HasAutoRecalculTotaux: WordBool; dispid 126;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IBODocumentAchat3
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {A7E0B84E-3FE1-4190-9BC4-D9C92EE6D1D0}
// *********************************************************************//
  IBODocumentAchat3 = interface(IBODocumentPart3)
    ['{A7E0B84E-3FE1-4190-9BC4-D9C92EE6D1D0}']
    function Get_FactoryDocumentAchat: IBODocumentAchatFactory3; safecall;
    function Get_FactoryDocumentEcheance: IBITypeObjectFactory; safecall;
    function Get_FactoryDocumentAcompte: IBITypeObjectFactory; safecall;
    function Get_Fournisseur: IBOFournisseur3; safecall;
    procedure SetDefaultFournisseur(const pFournisseur: IBOFournisseur3); safecall;
    function Get_Valorisation: IDocValorisation; safecall;
    function Get_DO_Motif: WideString; safecall;
    procedure Set_DO_Motif(const pVal: WideString); safecall;
    function Get_ConditionPaiement: DocumentConditionPaiementType; safecall;
    procedure Set_ConditionPaiement(pVal: DocumentConditionPaiementType); safecall;
    function Get_ModeleReglement: IBOModeleReglement; safecall;
    procedure Set_ModeleReglement(const pModele: IBOModeleReglement); safecall;
    function Get_DO_FactureFrs: WideString; safecall;
    procedure Set_DO_FactureFrs(const pVal: WideString); safecall;
    property FactoryDocumentAchat: IBODocumentAchatFactory3 read Get_FactoryDocumentAchat;
    property FactoryDocumentEcheance: IBITypeObjectFactory read Get_FactoryDocumentEcheance;
    property FactoryDocumentAcompte: IBITypeObjectFactory read Get_FactoryDocumentAcompte;
    property Fournisseur: IBOFournisseur3 read Get_Fournisseur;
    property Valorisation: IDocValorisation read Get_Valorisation;
    property DO_Motif: WideString read Get_DO_Motif write Set_DO_Motif;
    property ConditionPaiement: DocumentConditionPaiementType read Get_ConditionPaiement write Set_ConditionPaiement;
    property ModeleReglement: IBOModeleReglement read Get_ModeleReglement write Set_ModeleReglement;
    property DO_FactureFrs: WideString read Get_DO_FactureFrs write Set_DO_FactureFrs;
  end;

// *********************************************************************//
// DispIntf :    IBODocumentAchat3Disp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {A7E0B84E-3FE1-4190-9BC4-D9C92EE6D1D0}
// *********************************************************************//
  IBODocumentAchat3Disp = dispinterface
    ['{A7E0B84E-3FE1-4190-9BC4-D9C92EE6D1D0}']
    property FactoryDocumentAchat: IBODocumentAchatFactory3 readonly dispid 250;
    property FactoryDocumentEcheance: IBITypeObjectFactory readonly dispid 254;
    property FactoryDocumentAcompte: IBITypeObjectFactory readonly dispid 255;
    property Fournisseur: IBOFournisseur3 readonly dispid 252;
    procedure SetDefaultFournisseur(const pFournisseur: IBOFournisseur3); dispid 253;
    property Valorisation: IDocValorisation readonly dispid 256;
    property DO_Motif: WideString dispid 257;
    property ConditionPaiement: DocumentConditionPaiementType dispid 269;
    property ModeleReglement: IBOModeleReglement dispid 270;
    property DO_FactureFrs: WideString dispid 280;
    property FactoryDocumentPart: IBITypeObjectFactory readonly dispid 150;
    property Tiers: IBOTiersPart3 dispid 154;
    property Devise: IBPDevise2 dispid 155;
    property DO_Cours: Double dispid 156;
    property TiersPayeur: IBOTiersPart3 dispid 157;
    property Expedition: IBPExpedition3 dispid 158;
    property DO_TxEscompte: Double dispid 159;
    property DO_Reliquat: WordBool readonly dispid 160;
    property DO_Coord[sElt: Smallint]: WideString dispid 163;
    property DO_DateLivr: TDateTime dispid 164;
    property ConditionLivraison: IBPConditionLivraison dispid 165;
    property DO_Transaction: Smallint dispid 166;
    property DO_Langue: LangueType dispid 167;
    property DO_Ecart: Double dispid 168;
    property DO_Regime: Smallint dispid 169;
    property DO_Souche: Smallint dispid 170;
    property CategorieCompta: IBICategorieCompta dispid 171;
    property CompteG: IBOCompteG3 dispid 172;
    property DO_Statut: DocumentStatutType dispid 173;
    property DO_Provenance: DocumentProvenanceType readonly dispid 174;
    property CompteAIFRS: IBOCompteA3 dispid 175;
    property DO_Contact: WideString dispid 176;
    property FraisExpedition: Double dispid 177;
    property DO_DateLivrRealisee: TDateTime dispid 178;
    property FactoryDocument: IBODocumentFactory readonly dispid 100;
    property FactoryDocumentLigne: IBODocumentLigneFactory readonly dispid 101;
    property DO_Domaine: DomaineType readonly dispid 104;
    property DO_Type: DocumentType readonly dispid 105;
    property DO_Piece: WideString dispid 106;
    property DO_Date: TDateTime dispid 107;
    property DO_Ref: WideString dispid 108;
    property DepotStockage: IBODepot3 dispid 109;
    property DO_Imprim: WordBool readonly dispid 110;
    property DO_Heure: TDateTime readonly dispid 111;
    property DO_Transfere: WordBool readonly dispid 113;
    property InfoLibre: IBIValues readonly dispid 114;
    procedure SetDefaultDO_Piece; dispid 115;
    property Collaborateur: IBOCollaborateur dispid 116;
    property Souche: IBISouche dispid 117;
    property CompteA: IBOCompteA3 dispid 161;
    property DO_TotalHT: Double readonly dispid 118;
    property FactoryDocumentMedia: IBITypeObjectFactory readonly dispid 119;
    property DO_TotalHTNet: Double readonly dispid 120;
    property DO_TotalTTC: Double readonly dispid 121;
    property DO_NetAPayer: Double readonly dispid 122;
    property DO_MontantRegle: Double readonly dispid 123;
    procedure RecalculTotaux(pVal: WordBool); dispid 124;
    procedure SetAutoRecalculTotaux(pVal: WordBool); dispid 125;
    function HasAutoRecalculTotaux: WordBool; dispid 126;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IBODocumentVenteFactory3
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {E79A30D6-C657-4190-A3EB-BD04C8B48310}
// *********************************************************************//
  IBODocumentVenteFactory3 = interface(IBITypeObjectFactory)
    ['{E79A30D6-C657-4190-A3EB-BD04C8B48310}']
    function CreateType(DO_Type: DocumentType): IBODocumentVente3; safecall;
    function QueryTypeOrderPiece(DO_Type: DocumentType): IBICollection; safecall;
    function QueryTypePieceOrderPiece(DO_Type: DocumentType; const sDO_PieceDe: WideString; 
                                      const sDO_PieceA: WideString): IBICollection; safecall;
    function ExistPiece(DO_Type: DocumentType; const sDO_Piece: WideString): WordBool; safecall;
    function ReadPiece(DO_Type: DocumentType; const sDO_Piece: WideString): IBODocumentVente3; safecall;
    function CreateFacture(DO_Provenance: DocumentProvenanceType): IBODocumentVente3; safecall;
    function QueryTiersOrderDate(const Client: IBOClient3): IBICollection; safecall;
    function QueryTiersTypeOrderDate(const Client: IBOClient3; DO_Type: DocumentType): IBICollection; safecall;
    function QueryCollaborateurType(const Collab: IBOCollaborateur; DO_Type: DocumentType): IBICollection; safecall;
    function QueryTiersDateOrderDate(const Client: IBOClient3; DateDeb: TDateTime; 
                                     DateFin: TDateTime): IBICollection; safecall;
    function QueryTiersTypeDateOrderDate(const Client: IBOClient3; DO_Type: DocumentType; 
                                         DateDeb: TDateTime; DateFin: TDateTime): IBICollection; safecall;
    function _QuerySynchroType(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                               TypeExtraction: SynchroExtractType; TypeDe: DocumentType; 
                               TypeA: DocumentType): IBICollection; safecall;
    function _QuerySynchroOIDType(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                                  TypeExtraction: SynchroExtractType; TypeDe: DocumentType; 
                                  TypeA: DocumentType): IBICollectionDispatch; safecall;
    function QueryTypeDateOrderPiece(DO_Type: DocumentType; DateDeb: TDateTime; DateFin: TDateTime): IBICollection; safecall;
  end;

// *********************************************************************//
// DispIntf :    IBODocumentVenteFactory3Disp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {E79A30D6-C657-4190-A3EB-BD04C8B48310}
// *********************************************************************//
  IBODocumentVenteFactory3Disp = dispinterface
    ['{E79A30D6-C657-4190-A3EB-BD04C8B48310}']
    function CreateType(DO_Type: DocumentType): IBODocumentVente3; dispid 20;
    function QueryTypeOrderPiece(DO_Type: DocumentType): IBICollection; dispid 21;
    function QueryTypePieceOrderPiece(DO_Type: DocumentType; const sDO_PieceDe: WideString; 
                                      const sDO_PieceA: WideString): IBICollection; dispid 22;
    function ExistPiece(DO_Type: DocumentType; const sDO_Piece: WideString): WordBool; dispid 23;
    function ReadPiece(DO_Type: DocumentType; const sDO_Piece: WideString): IBODocumentVente3; dispid 24;
    function CreateFacture(DO_Provenance: DocumentProvenanceType): IBODocumentVente3; dispid 25;
    function QueryTiersOrderDate(const Client: IBOClient3): IBICollection; dispid 26;
    function QueryTiersTypeOrderDate(const Client: IBOClient3; DO_Type: DocumentType): IBICollection; dispid 27;
    function QueryCollaborateurType(const Collab: IBOCollaborateur; DO_Type: DocumentType): IBICollection; dispid 28;
    function QueryTiersDateOrderDate(const Client: IBOClient3; DateDeb: TDateTime; 
                                     DateFin: TDateTime): IBICollection; dispid 29;
    function QueryTiersTypeDateOrderDate(const Client: IBOClient3; DO_Type: DocumentType; 
                                         DateDeb: TDateTime; DateFin: TDateTime): IBICollection; dispid 30;
    function _QuerySynchroType(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                               TypeExtraction: SynchroExtractType; TypeDe: DocumentType; 
                               TypeA: DocumentType): IBICollection; dispid 31;
    function _QuerySynchroOIDType(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                                  TypeExtraction: SynchroExtractType; TypeDe: DocumentType; 
                                  TypeA: DocumentType): IBICollectionDispatch; dispid 32;
    function QueryTypeDateOrderPiece(DO_Type: DocumentType; DateDeb: TDateTime; DateFin: TDateTime): IBICollection; dispid 33;
    property List: IBICollection readonly dispid 1;
    function Create: IBIPersistObject; dispid 2;
    function Read(const pOID: IBIObjectID): IBIPersistObject; dispid 3;
    function _QuerySynchro(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                           TypeExtraction: SynchroExtractType): IBICollection; dispid 4;
    function _QuerySynchroRemoved(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                                  TypeExtraction: SynchroExtractType): IBICollectionDispatch; dispid 5;
    function ReadFrom(const pStream: IStream): IBIPersistObject; dispid 6;
    property ListForward: IBICollection readonly dispid 7;
    function QueryPredicate(const pPredicate: IDispatch; const sSortDescriptors: WideString): IBICollection; dispid 8;
  end;

// *********************************************************************//
// Interface :   IBODocumentVente3
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {85C765D6-E89D-4F0F-BB30-D49EB3A97660}
// *********************************************************************//
  IBODocumentVente3 = interface(IBODocumentPart3)
    ['{85C765D6-E89D-4F0F-BB30-D49EB3A97660}']
    function Get_FactoryDocumentVente: IBODocumentVenteFactory3; safecall;
    function Get_FactoryDocumentEcheance: IBITypeObjectFactory; safecall;
    function Get_FactoryDocumentAcompte: IBITypeObjectFactory; safecall;
    function Get_Client: IBOClient3; safecall;
    function Get_LieuLivraison: IBOClientLivraison3; safecall;
    procedure Set_LieuLivraison(const pClientLivraison: IBOClientLivraison3); safecall;
    function Get_Periodicite: IBPPeriodicite; safecall;
    procedure Set_Periodicite(const pPeriodicite: IBPPeriodicite); safecall;
    function Get_CategorieTarif: IBPCategorieTarif; safecall;
    procedure Set_CategorieTarif(const pCategorieTarif: IBPCategorieTarif); safecall;
    function Get_DO_Colisage: Smallint; safecall;
    procedure Set_DO_Colisage(pVal: Smallint); safecall;
    function Get_Unite: IBPUnite; safecall;
    procedure Set_Unite(const pUnite: IBPUnite); safecall;
    function Get_DO_BLFact: WordBool; safecall;
    procedure Set_DO_BLFact(pVal: WordBool); safecall;
    function Get_DO_NbFacture: Smallint; safecall;
    procedure Set_DO_NbFacture(pVal: Smallint); safecall;
    function Get_DO_NoWeb: WideString; safecall;
    procedure Set_DO_NoWeb(const pVal: WideString); safecall;
    function Get_DO_Cloture: WordBool; safecall;
    procedure SetDefaultClient(const pClient: IBOClient3); safecall;
    function Get_Valorisation: IDocValorisation; safecall;
    function Get_DO_Motif: WideString; safecall;
    procedure Set_DO_Motif(const pVal: WideString); safecall;
    function Get_CentraleAchat: IBOClient3; safecall;
    procedure Set_CentraleAchat(const pClient: IBOClient3); safecall;
    function Get_ConditionPaiement: DocumentConditionPaiementType; safecall;
    procedure Set_ConditionPaiement(pVal: DocumentConditionPaiementType); safecall;
    function Get_ModeleReglement: IBOModeleReglement; safecall;
    procedure Set_ModeleReglement(const pModele: IBOModeleReglement); safecall;
    function Get_DO_Valide: WordBool; safecall;
    function Get_DO_MotifDevis: IBPMotifDevis; safecall;
    procedure Set_DO_MotifDevis(const pMotifDevis: IBPMotifDevis); safecall;
    function Get_FactoryInfoComplement: IBOInfoComplementEnteteFactory; safecall;
    property FactoryDocumentVente: IBODocumentVenteFactory3 read Get_FactoryDocumentVente;
    property FactoryDocumentEcheance: IBITypeObjectFactory read Get_FactoryDocumentEcheance;
    property FactoryDocumentAcompte: IBITypeObjectFactory read Get_FactoryDocumentAcompte;
    property Client: IBOClient3 read Get_Client;
    property LieuLivraison: IBOClientLivraison3 read Get_LieuLivraison write Set_LieuLivraison;
    property Periodicite: IBPPeriodicite read Get_Periodicite write Set_Periodicite;
    property CategorieTarif: IBPCategorieTarif read Get_CategorieTarif write Set_CategorieTarif;
    property DO_Colisage: Smallint read Get_DO_Colisage write Set_DO_Colisage;
    property Unite: IBPUnite read Get_Unite write Set_Unite;
    property DO_BLFact: WordBool read Get_DO_BLFact write Set_DO_BLFact;
    property DO_NbFacture: Smallint read Get_DO_NbFacture write Set_DO_NbFacture;
    property DO_NoWeb: WideString read Get_DO_NoWeb write Set_DO_NoWeb;
    property DO_Cloture: WordBool read Get_DO_Cloture;
    property Valorisation: IDocValorisation read Get_Valorisation;
    property DO_Motif: WideString read Get_DO_Motif write Set_DO_Motif;
    property CentraleAchat: IBOClient3 read Get_CentraleAchat write Set_CentraleAchat;
    property ConditionPaiement: DocumentConditionPaiementType read Get_ConditionPaiement write Set_ConditionPaiement;
    property ModeleReglement: IBOModeleReglement read Get_ModeleReglement write Set_ModeleReglement;
    property DO_Valide: WordBool read Get_DO_Valide;
    property DO_MotifDevis: IBPMotifDevis read Get_DO_MotifDevis write Set_DO_MotifDevis;
    property FactoryInfoComplement: IBOInfoComplementEnteteFactory read Get_FactoryInfoComplement;
  end;

// *********************************************************************//
// DispIntf :    IBODocumentVente3Disp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {85C765D6-E89D-4F0F-BB30-D49EB3A97660}
// *********************************************************************//
  IBODocumentVente3Disp = dispinterface
    ['{85C765D6-E89D-4F0F-BB30-D49EB3A97660}']
    property FactoryDocumentVente: IBODocumentVenteFactory3 readonly dispid 250;
    property FactoryDocumentEcheance: IBITypeObjectFactory readonly dispid 263;
    property FactoryDocumentAcompte: IBITypeObjectFactory readonly dispid 264;
    property Client: IBOClient3 readonly dispid 252;
    property LieuLivraison: IBOClientLivraison3 dispid 253;
    property Periodicite: IBPPeriodicite dispid 255;
    property CategorieTarif: IBPCategorieTarif dispid 256;
    property DO_Colisage: Smallint dispid 257;
    property Unite: IBPUnite dispid 258;
    property DO_BLFact: WordBool dispid 259;
    property DO_NbFacture: Smallint dispid 260;
    property DO_NoWeb: WideString dispid 261;
    property DO_Cloture: WordBool readonly dispid 265;
    procedure SetDefaultClient(const pClient: IBOClient3); dispid 262;
    property Valorisation: IDocValorisation readonly dispid 266;
    property DO_Motif: WideString dispid 267;
    property CentraleAchat: IBOClient3 dispid 268;
    property ConditionPaiement: DocumentConditionPaiementType dispid 269;
    property ModeleReglement: IBOModeleReglement dispid 270;
    property DO_Valide: WordBool readonly dispid 271;
    property DO_MotifDevis: IBPMotifDevis dispid 272;
    property FactoryInfoComplement: IBOInfoComplementEnteteFactory readonly dispid 273;
    property FactoryDocumentPart: IBITypeObjectFactory readonly dispid 150;
    property Tiers: IBOTiersPart3 dispid 154;
    property Devise: IBPDevise2 dispid 155;
    property DO_Cours: Double dispid 156;
    property TiersPayeur: IBOTiersPart3 dispid 157;
    property Expedition: IBPExpedition3 dispid 158;
    property DO_TxEscompte: Double dispid 159;
    property DO_Reliquat: WordBool readonly dispid 160;
    property DO_Coord[sElt: Smallint]: WideString dispid 163;
    property DO_DateLivr: TDateTime dispid 164;
    property ConditionLivraison: IBPConditionLivraison dispid 165;
    property DO_Transaction: Smallint dispid 166;
    property DO_Langue: LangueType dispid 167;
    property DO_Ecart: Double dispid 168;
    property DO_Regime: Smallint dispid 169;
    property DO_Souche: Smallint dispid 170;
    property CategorieCompta: IBICategorieCompta dispid 171;
    property CompteG: IBOCompteG3 dispid 172;
    property DO_Statut: DocumentStatutType dispid 173;
    property DO_Provenance: DocumentProvenanceType readonly dispid 174;
    property CompteAIFRS: IBOCompteA3 dispid 175;
    property DO_Contact: WideString dispid 176;
    property FraisExpedition: Double dispid 177;
    property DO_DateLivrRealisee: TDateTime dispid 178;
    property FactoryDocument: IBODocumentFactory readonly dispid 100;
    property FactoryDocumentLigne: IBODocumentLigneFactory readonly dispid 101;
    property DO_Domaine: DomaineType readonly dispid 104;
    property DO_Type: DocumentType readonly dispid 105;
    property DO_Piece: WideString dispid 106;
    property DO_Date: TDateTime dispid 107;
    property DO_Ref: WideString dispid 108;
    property DepotStockage: IBODepot3 dispid 109;
    property DO_Imprim: WordBool readonly dispid 110;
    property DO_Heure: TDateTime readonly dispid 111;
    property DO_Transfere: WordBool readonly dispid 113;
    property InfoLibre: IBIValues readonly dispid 114;
    procedure SetDefaultDO_Piece; dispid 115;
    property Collaborateur: IBOCollaborateur dispid 116;
    property Souche: IBISouche dispid 117;
    property CompteA: IBOCompteA3 dispid 161;
    property DO_TotalHT: Double readonly dispid 118;
    property FactoryDocumentMedia: IBITypeObjectFactory readonly dispid 119;
    property DO_TotalHTNet: Double readonly dispid 120;
    property DO_TotalTTC: Double readonly dispid 121;
    property DO_NetAPayer: Double readonly dispid 122;
    property DO_MontantRegle: Double readonly dispid 123;
    procedure RecalculTotaux(pVal: WordBool); dispid 124;
    procedure SetAutoRecalculTotaux(pVal: WordBool); dispid 125;
    function HasAutoRecalculTotaux: WordBool; dispid 126;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IBPMotifDevis
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {676595F6-BC67-40E9-AAE2-D1D27A85FCCD}
// *********************************************************************//
  IBPMotifDevis = interface(IBIPersistObject)
    ['{676595F6-BC67-40E9-AAE2-D1D27A85FCCD}']
    function Get_FactoryMotifDevis: IBPMotifDevisFactory; safecall;
    function Get_Intitule: WideString; safecall;
    procedure Set_Intitule(const pVal: WideString); safecall;
    property FactoryMotifDevis: IBPMotifDevisFactory read Get_FactoryMotifDevis;
    property Intitule: WideString read Get_Intitule write Set_Intitule;
  end;

// *********************************************************************//
// DispIntf :    IBPMotifDevisDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {676595F6-BC67-40E9-AAE2-D1D27A85FCCD}
// *********************************************************************//
  IBPMotifDevisDisp = dispinterface
    ['{676595F6-BC67-40E9-AAE2-D1D27A85FCCD}']
    property FactoryMotifDevis: IBPMotifDevisFactory readonly dispid 100;
    property Intitule: WideString dispid 101;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IBPMotifDevisFactory
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {23E01CDB-AF39-438A-8040-40141C445716}
// *********************************************************************//
  IBPMotifDevisFactory = interface(IBITypeObjectFactory)
    ['{23E01CDB-AF39-438A-8040-40141C445716}']
    function ExistIntitule(const sIntitule: WideString): WordBool; safecall;
    function ReadIntitule(const sIntitule: WideString): IBPMotifDevis; safecall;
  end;

// *********************************************************************//
// DispIntf :    IBPMotifDevisFactoryDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {23E01CDB-AF39-438A-8040-40141C445716}
// *********************************************************************//
  IBPMotifDevisFactoryDisp = dispinterface
    ['{23E01CDB-AF39-438A-8040-40141C445716}']
    function ExistIntitule(const sIntitule: WideString): WordBool; dispid 10;
    function ReadIntitule(const sIntitule: WideString): IBPMotifDevis; dispid 11;
    property List: IBICollection readonly dispid 1;
    function Create: IBIPersistObject; dispid 2;
    function Read(const pOID: IBIObjectID): IBIPersistObject; dispid 3;
    function _QuerySynchro(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                           TypeExtraction: SynchroExtractType): IBICollection; dispid 4;
    function _QuerySynchroRemoved(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                                  TypeExtraction: SynchroExtractType): IBICollectionDispatch; dispid 5;
    function ReadFrom(const pStream: IStream): IBIPersistObject; dispid 6;
    property ListForward: IBICollection readonly dispid 7;
    function QueryPredicate(const pPredicate: IDispatch; const sSortDescriptors: WideString): IBICollection; dispid 8;
  end;

// *********************************************************************//
// Interface :   IBOInfoComplementEnteteFactory
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {1056CEE3-ACC7-4381-B4CB-C15021766C15}
// *********************************************************************//
  IBOInfoComplementEnteteFactory = interface(IBITypeObjectFactory)
    ['{1056CEE3-ACC7-4381-B4CB-C15021766C15}']
    function ExistCode(const sCode: WideString): WordBool; safecall;
    function ReadCode(const sCode: WideString): IBOInfoComplementEntete; safecall;
  end;

// *********************************************************************//
// DispIntf :    IBOInfoComplementEnteteFactoryDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {1056CEE3-ACC7-4381-B4CB-C15021766C15}
// *********************************************************************//
  IBOInfoComplementEnteteFactoryDisp = dispinterface
    ['{1056CEE3-ACC7-4381-B4CB-C15021766C15}']
    function ExistCode(const sCode: WideString): WordBool; dispid 11;
    function ReadCode(const sCode: WideString): IBOInfoComplementEntete; dispid 12;
    property List: IBICollection readonly dispid 1;
    function Create: IBIPersistObject; dispid 2;
    function Read(const pOID: IBIObjectID): IBIPersistObject; dispid 3;
    function _QuerySynchro(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                           TypeExtraction: SynchroExtractType): IBICollection; dispid 4;
    function _QuerySynchroRemoved(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                                  TypeExtraction: SynchroExtractType): IBICollectionDispatch; dispid 5;
    function ReadFrom(const pStream: IStream): IBIPersistObject; dispid 6;
    property ListForward: IBICollection readonly dispid 7;
    function QueryPredicate(const pPredicate: IDispatch; const sSortDescriptors: WideString): IBICollection; dispid 8;
  end;

// *********************************************************************//
// Interface :   IBOInfoComplementEntete
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {7B6C6B17-BC01-4B0D-87AA-DEE6869A4F8F}
// *********************************************************************//
  IBOInfoComplementEntete = interface(IBIPersistObject)
    ['{7B6C6B17-BC01-4B0D-87AA-DEE6869A4F8F}']
    function Get_FactoryInfoComplement: IBOInfoComplementEnteteFactory; safecall;
    function Get_DocumentVente: IBODocumentVente3; safecall;
    function Get_DI_Code: WideString; safecall;
    function Get_DI_Intitule: WideString; safecall;
    function Get_DI_Type: InfoType; safecall;
    function Get_DI_Valeur: WideString; safecall;
    procedure Set_DI_Valeur(const pValeur: WideString); safecall;
    property FactoryInfoComplement: IBOInfoComplementEnteteFactory read Get_FactoryInfoComplement;
    property DocumentVente: IBODocumentVente3 read Get_DocumentVente;
    property DI_Code: WideString read Get_DI_Code;
    property DI_Intitule: WideString read Get_DI_Intitule;
    property DI_Type: InfoType read Get_DI_Type;
    property DI_Valeur: WideString read Get_DI_Valeur write Set_DI_Valeur;
  end;

// *********************************************************************//
// DispIntf :    IBOInfoComplementEnteteDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {7B6C6B17-BC01-4B0D-87AA-DEE6869A4F8F}
// *********************************************************************//
  IBOInfoComplementEnteteDisp = dispinterface
    ['{7B6C6B17-BC01-4B0D-87AA-DEE6869A4F8F}']
    property FactoryInfoComplement: IBOInfoComplementEnteteFactory readonly dispid 100;
    property DocumentVente: IBODocumentVente3 readonly dispid 101;
    property DI_Code: WideString readonly dispid 102;
    property DI_Intitule: WideString readonly dispid 103;
    property DI_Type: InfoType readonly dispid 105;
    property DI_Valeur: WideString dispid 106;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IBODocumentInterneFactory3
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {D8C4D565-F813-4DCD-A57A-87B9033B8174}
// *********************************************************************//
  IBODocumentInterneFactory3 = interface(IBITypeObjectFactory)
    ['{D8C4D565-F813-4DCD-A57A-87B9033B8174}']
    function CreateType(DO_Type: DocumentType): IBODocumentInterne3; safecall;
    function QueryTypeOrderPiece(DO_Type: DocumentType): IBICollection; safecall;
    function QueryTypePieceOrderPiece(DO_Type: DocumentType; const sDO_PieceDe: WideString; 
                                      const sDO_PieceA: WideString): IBICollection; safecall;
    function ExistPiece(DO_Type: DocumentType; const sDO_Piece: WideString): WordBool; safecall;
    function ReadPiece(DO_Type: DocumentType; const sDO_Piece: WideString): IBODocumentInterne3; safecall;
    function QueryTiersOrderDate(const Client: IBOClient3): IBICollection; safecall;
    function QueryTiersTypeOrderDate(const Client: IBOClient3; DO_Type: DocumentType): IBICollection; safecall;
    function QueryCollaborateurType(const Collab: IBOCollaborateur; DO_Type: DocumentType): IBICollection; safecall;
    function QueryTiersDateOrderDate(const Client: IBOClient3; DateDeb: TDateTime; 
                                     DateFin: TDateTime): IBICollection; safecall;
    function QueryTiersTypeDateOrderDate(const Client: IBOClient3; DO_Type: DocumentType; 
                                         DateDeb: TDateTime; DateFin: TDateTime): IBICollection; safecall;
    function QueryTypeDateOrderPiece(DO_Type: DocumentType; DateDeb: TDateTime; DateFin: TDateTime): IBICollection; safecall;
  end;

// *********************************************************************//
// DispIntf :    IBODocumentInterneFactory3Disp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {D8C4D565-F813-4DCD-A57A-87B9033B8174}
// *********************************************************************//
  IBODocumentInterneFactory3Disp = dispinterface
    ['{D8C4D565-F813-4DCD-A57A-87B9033B8174}']
    function CreateType(DO_Type: DocumentType): IBODocumentInterne3; dispid 20;
    function QueryTypeOrderPiece(DO_Type: DocumentType): IBICollection; dispid 21;
    function QueryTypePieceOrderPiece(DO_Type: DocumentType; const sDO_PieceDe: WideString; 
                                      const sDO_PieceA: WideString): IBICollection; dispid 22;
    function ExistPiece(DO_Type: DocumentType; const sDO_Piece: WideString): WordBool; dispid 23;
    function ReadPiece(DO_Type: DocumentType; const sDO_Piece: WideString): IBODocumentInterne3; dispid 24;
    function QueryTiersOrderDate(const Client: IBOClient3): IBICollection; dispid 25;
    function QueryTiersTypeOrderDate(const Client: IBOClient3; DO_Type: DocumentType): IBICollection; dispid 26;
    function QueryCollaborateurType(const Collab: IBOCollaborateur; DO_Type: DocumentType): IBICollection; dispid 27;
    function QueryTiersDateOrderDate(const Client: IBOClient3; DateDeb: TDateTime; 
                                     DateFin: TDateTime): IBICollection; dispid 28;
    function QueryTiersTypeDateOrderDate(const Client: IBOClient3; DO_Type: DocumentType; 
                                         DateDeb: TDateTime; DateFin: TDateTime): IBICollection; dispid 29;
    function QueryTypeDateOrderPiece(DO_Type: DocumentType; DateDeb: TDateTime; DateFin: TDateTime): IBICollection; dispid 30;
    property List: IBICollection readonly dispid 1;
    function Create: IBIPersistObject; dispid 2;
    function Read(const pOID: IBIObjectID): IBIPersistObject; dispid 3;
    function _QuerySynchro(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                           TypeExtraction: SynchroExtractType): IBICollection; dispid 4;
    function _QuerySynchroRemoved(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                                  TypeExtraction: SynchroExtractType): IBICollectionDispatch; dispid 5;
    function ReadFrom(const pStream: IStream): IBIPersistObject; dispid 6;
    property ListForward: IBICollection readonly dispid 7;
    function QueryPredicate(const pPredicate: IDispatch; const sSortDescriptors: WideString): IBICollection; dispid 8;
  end;

// *********************************************************************//
// Interface :   IBODocumentInterne3
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {7767F876-4462-45C7-84F6-6F6A28B347DA}
// *********************************************************************//
  IBODocumentInterne3 = interface(IBODocumentPart3)
    ['{7767F876-4462-45C7-84F6-6F6A28B347DA}']
    function Get_FactoryDocumentInterne: IBODocumentInterneFactory3; safecall;
    function Get_Client: IBOClient3; safecall;
    function Get_LieuLivraison: IBOClientLivraison3; safecall;
    procedure Set_LieuLivraison(const pClientLivraison: IBOClientLivraison3); safecall;
    function Get_Periodicite: IBPPeriodicite; safecall;
    procedure Set_Periodicite(const pPeriodicite: IBPPeriodicite); safecall;
    function Get_CategorieTarif: IBPCategorieTarif; safecall;
    procedure Set_CategorieTarif(const pCategorieTarif: IBPCategorieTarif); safecall;
    function Get_DO_NbFacture: Smallint; safecall;
    procedure Set_DO_NbFacture(pVal: Smallint); safecall;
    procedure SetDefaultClient(const pClient: IBOClient3); safecall;
    function Get_CentraleAchat: IBOClient3; safecall;
    procedure Set_CentraleAchat(const pClient: IBOClient3); safecall;
    property FactoryDocumentInterne: IBODocumentInterneFactory3 read Get_FactoryDocumentInterne;
    property Client: IBOClient3 read Get_Client;
    property LieuLivraison: IBOClientLivraison3 read Get_LieuLivraison write Set_LieuLivraison;
    property Periodicite: IBPPeriodicite read Get_Periodicite write Set_Periodicite;
    property CategorieTarif: IBPCategorieTarif read Get_CategorieTarif write Set_CategorieTarif;
    property DO_NbFacture: Smallint read Get_DO_NbFacture write Set_DO_NbFacture;
    property CentraleAchat: IBOClient3 read Get_CentraleAchat write Set_CentraleAchat;
  end;

// *********************************************************************//
// DispIntf :    IBODocumentInterne3Disp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {7767F876-4462-45C7-84F6-6F6A28B347DA}
// *********************************************************************//
  IBODocumentInterne3Disp = dispinterface
    ['{7767F876-4462-45C7-84F6-6F6A28B347DA}']
    property FactoryDocumentInterne: IBODocumentInterneFactory3 readonly dispid 250;
    property Client: IBOClient3 readonly dispid 251;
    property LieuLivraison: IBOClientLivraison3 dispid 252;
    property Periodicite: IBPPeriodicite dispid 254;
    property CategorieTarif: IBPCategorieTarif dispid 255;
    property DO_NbFacture: Smallint dispid 256;
    procedure SetDefaultClient(const pClient: IBOClient3); dispid 257;
    property CentraleAchat: IBOClient3 dispid 258;
    property FactoryDocumentPart: IBITypeObjectFactory readonly dispid 150;
    property Tiers: IBOTiersPart3 dispid 154;
    property Devise: IBPDevise2 dispid 155;
    property DO_Cours: Double dispid 156;
    property TiersPayeur: IBOTiersPart3 dispid 157;
    property Expedition: IBPExpedition3 dispid 158;
    property DO_TxEscompte: Double dispid 159;
    property DO_Reliquat: WordBool readonly dispid 160;
    property DO_Coord[sElt: Smallint]: WideString dispid 163;
    property DO_DateLivr: TDateTime dispid 164;
    property ConditionLivraison: IBPConditionLivraison dispid 165;
    property DO_Transaction: Smallint dispid 166;
    property DO_Langue: LangueType dispid 167;
    property DO_Ecart: Double dispid 168;
    property DO_Regime: Smallint dispid 169;
    property DO_Souche: Smallint dispid 170;
    property CategorieCompta: IBICategorieCompta dispid 171;
    property CompteG: IBOCompteG3 dispid 172;
    property DO_Statut: DocumentStatutType dispid 173;
    property DO_Provenance: DocumentProvenanceType readonly dispid 174;
    property CompteAIFRS: IBOCompteA3 dispid 175;
    property DO_Contact: WideString dispid 176;
    property FraisExpedition: Double dispid 177;
    property DO_DateLivrRealisee: TDateTime dispid 178;
    property FactoryDocument: IBODocumentFactory readonly dispid 100;
    property FactoryDocumentLigne: IBODocumentLigneFactory readonly dispid 101;
    property DO_Domaine: DomaineType readonly dispid 104;
    property DO_Type: DocumentType readonly dispid 105;
    property DO_Piece: WideString dispid 106;
    property DO_Date: TDateTime dispid 107;
    property DO_Ref: WideString dispid 108;
    property DepotStockage: IBODepot3 dispid 109;
    property DO_Imprim: WordBool readonly dispid 110;
    property DO_Heure: TDateTime readonly dispid 111;
    property DO_Transfere: WordBool readonly dispid 113;
    property InfoLibre: IBIValues readonly dispid 114;
    procedure SetDefaultDO_Piece; dispid 115;
    property Collaborateur: IBOCollaborateur dispid 116;
    property Souche: IBISouche dispid 117;
    property CompteA: IBOCompteA3 dispid 161;
    property DO_TotalHT: Double readonly dispid 118;
    property FactoryDocumentMedia: IBITypeObjectFactory readonly dispid 119;
    property DO_TotalHTNet: Double readonly dispid 120;
    property DO_TotalTTC: Double readonly dispid 121;
    property DO_NetAPayer: Double readonly dispid 122;
    property DO_MontantRegle: Double readonly dispid 123;
    procedure RecalculTotaux(pVal: WordBool); dispid 124;
    procedure SetAutoRecalculTotaux(pVal: WordBool); dispid 125;
    function HasAutoRecalculTotaux: WordBool; dispid 126;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IBISoucheFactory
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {9E13020C-7A1B-4696-9CB8-CCB24B4CC2CD}
// *********************************************************************//
  IBISoucheFactory = interface(IBITypeObjectFactory)
    ['{9E13020C-7A1B-4696-9CB8-CCB24B4CC2CD}']
    function ExistIntitule(const sIntitule: WideString): WordBool; safecall;
    function ReadIntitule(const sIntitule: WideString): IBISouche; safecall;
    function QuerySoucheValide: IBICollection; safecall;
  end;

// *********************************************************************//
// DispIntf :    IBISoucheFactoryDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {9E13020C-7A1B-4696-9CB8-CCB24B4CC2CD}
// *********************************************************************//
  IBISoucheFactoryDisp = dispinterface
    ['{9E13020C-7A1B-4696-9CB8-CCB24B4CC2CD}']
    function ExistIntitule(const sIntitule: WideString): WordBool; dispid 10;
    function ReadIntitule(const sIntitule: WideString): IBISouche; dispid 11;
    function QuerySoucheValide: IBICollection; dispid 12;
    property List: IBICollection readonly dispid 1;
    function Create: IBIPersistObject; dispid 2;
    function Read(const pOID: IBIObjectID): IBIPersistObject; dispid 3;
    function _QuerySynchro(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                           TypeExtraction: SynchroExtractType): IBICollection; dispid 4;
    function _QuerySynchroRemoved(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                                  TypeExtraction: SynchroExtractType): IBICollectionDispatch; dispid 5;
    function ReadFrom(const pStream: IStream): IBIPersistObject; dispid 6;
    property ListForward: IBICollection readonly dispid 7;
    function QueryPredicate(const pPredicate: IDispatch; const sSortDescriptors: WideString): IBICollection; dispid 8;
  end;

// *********************************************************************//
// Interface :   IBIParamDocFactory
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {F11ADFA4-73B9-4DB2-BB5C-7AB2485DCA7B}
// *********************************************************************//
  IBIParamDocFactory = interface(IBITypeObjectFactory)
    ['{F11ADFA4-73B9-4DB2-BB5C-7AB2485DCA7B}']
    function ExistIntitule(const sIntitule: WideString): WordBool; safecall;
    function ReadIntitule(const sIntitule: WideString): IBIParamDoc; safecall;
    function ReadTypeDocument(DO_Type: DocumentType; DO_Provenance: DocumentProvenanceType): IBIParamDoc; safecall;
  end;

// *********************************************************************//
// DispIntf :    IBIParamDocFactoryDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {F11ADFA4-73B9-4DB2-BB5C-7AB2485DCA7B}
// *********************************************************************//
  IBIParamDocFactoryDisp = dispinterface
    ['{F11ADFA4-73B9-4DB2-BB5C-7AB2485DCA7B}']
    function ExistIntitule(const sIntitule: WideString): WordBool; dispid 10;
    function ReadIntitule(const sIntitule: WideString): IBIParamDoc; dispid 11;
    function ReadTypeDocument(DO_Type: DocumentType; DO_Provenance: DocumentProvenanceType): IBIParamDoc; dispid 12;
    property List: IBICollection readonly dispid 1;
    function Create: IBIPersistObject; dispid 2;
    function Read(const pOID: IBIObjectID): IBIPersistObject; dispid 3;
    function _QuerySynchro(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                           TypeExtraction: SynchroExtractType): IBICollection; dispid 4;
    function _QuerySynchroRemoved(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                                  TypeExtraction: SynchroExtractType): IBICollectionDispatch; dispid 5;
    function ReadFrom(const pStream: IStream): IBIPersistObject; dispid 6;
    property ListForward: IBICollection readonly dispid 7;
    function QueryPredicate(const pPredicate: IDispatch; const sSortDescriptors: WideString): IBICollection; dispid 8;
  end;

// *********************************************************************//
// Interface :   IBOBaremeCommissionFactory
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {0B7E40B4-FDE0-4513-955F-AF64B3C24863}
// *********************************************************************//
  IBOBaremeCommissionFactory = interface(IBITypeObjectFactory)
    ['{0B7E40B4-FDE0-4513-955F-AF64B3C24863}']
    function ExistIntitule(const sIntitule: WideString): WordBool; safecall;
    function ReadIntitule(const sIntitule: WideString): IBOBaremeCommission; safecall;
    function QueryApplicableDate(dVal: TDateTime): IBICollection; safecall;
    function QueryApplicableArticleDate(const pArticle: IBOArticle3; dVal: TDateTime): IBICollection; safecall;
  end;

// *********************************************************************//
// DispIntf :    IBOBaremeCommissionFactoryDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {0B7E40B4-FDE0-4513-955F-AF64B3C24863}
// *********************************************************************//
  IBOBaremeCommissionFactoryDisp = dispinterface
    ['{0B7E40B4-FDE0-4513-955F-AF64B3C24863}']
    function ExistIntitule(const sIntitule: WideString): WordBool; dispid 10;
    function ReadIntitule(const sIntitule: WideString): IBOBaremeCommission; dispid 11;
    function QueryApplicableDate(dVal: TDateTime): IBICollection; dispid 12;
    function QueryApplicableArticleDate(const pArticle: IBOArticle3; dVal: TDateTime): IBICollection; dispid 13;
    property List: IBICollection readonly dispid 1;
    function Create: IBIPersistObject; dispid 2;
    function Read(const pOID: IBIObjectID): IBIPersistObject; dispid 3;
    function _QuerySynchro(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                           TypeExtraction: SynchroExtractType): IBICollection; dispid 4;
    function _QuerySynchroRemoved(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                                  TypeExtraction: SynchroExtractType): IBICollectionDispatch; dispid 5;
    function ReadFrom(const pStream: IStream): IBIPersistObject; dispid 6;
    property ListForward: IBICollection readonly dispid 7;
    function QueryPredicate(const pPredicate: IDispatch; const sSortDescriptors: WideString): IBICollection; dispid 8;
  end;

// *********************************************************************//
// Interface :   IBOBaremeCommission
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {58690C03-8166-406A-920B-A3BE8A726585}
// *********************************************************************//
  IBOBaremeCommission = interface(IBIPersistObject)
    ['{58690C03-8166-406A-920B-A3BE8A726585}']
    function Get_FactoryBaremeCommission: IBOBaremeCommissionFactory; safecall;
    function Get_FactoryBaremeCommissionQte: IBITypeObjectFactory; safecall;
    function Get_Intitule: WideString; safecall;
    procedure Set_Intitule(const pVal: WideString); safecall;
    function Get_DateDebut: TDateTime; safecall;
    procedure Set_DateDebut(pVal: TDateTime); safecall;
    function Get_DateFin: TDateTime; safecall;
    procedure Set_DateFin(pVal: TDateTime); safecall;
    function Get_Interesse: BaremeCommissionInteresse; safecall;
    procedure Set_Interesse(pVal: BaremeCommissionInteresse); safecall;
    function Get_Objectif: BaremeCommissionObjectif; safecall;
    procedure Set_Objectif(pVal: BaremeCommissionObjectif); safecall;
    function Get_Base: BaremeCommissionBase; safecall;
    procedure Set_Base(pVal: BaremeCommissionBase); safecall;
    function Get_Domaine: BaremeCommissionDomaine; safecall;
    procedure Set_Domaine(pVal: BaremeCommissionDomaine); safecall;
    function Get_Calcul: BaremeCommissionCalcul; safecall;
    procedure Set_Calcul(pVal: BaremeCommissionCalcul); safecall;
    property FactoryBaremeCommission: IBOBaremeCommissionFactory read Get_FactoryBaremeCommission;
    property FactoryBaremeCommissionQte: IBITypeObjectFactory read Get_FactoryBaremeCommissionQte;
    property Intitule: WideString read Get_Intitule write Set_Intitule;
    property DateDebut: TDateTime read Get_DateDebut write Set_DateDebut;
    property DateFin: TDateTime read Get_DateFin write Set_DateFin;
    property Interesse: BaremeCommissionInteresse read Get_Interesse write Set_Interesse;
    property Objectif: BaremeCommissionObjectif read Get_Objectif write Set_Objectif;
    property Base: BaremeCommissionBase read Get_Base write Set_Base;
    property Domaine: BaremeCommissionDomaine read Get_Domaine write Set_Domaine;
    property Calcul: BaremeCommissionCalcul read Get_Calcul write Set_Calcul;
  end;

// *********************************************************************//
// DispIntf :    IBOBaremeCommissionDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {58690C03-8166-406A-920B-A3BE8A726585}
// *********************************************************************//
  IBOBaremeCommissionDisp = dispinterface
    ['{58690C03-8166-406A-920B-A3BE8A726585}']
    property FactoryBaremeCommission: IBOBaremeCommissionFactory readonly dispid 100;
    property FactoryBaremeCommissionQte: IBITypeObjectFactory readonly dispid 101;
    property Intitule: WideString dispid 102;
    property DateDebut: TDateTime dispid 103;
    property DateFin: TDateTime dispid 104;
    property Interesse: BaremeCommissionInteresse dispid 105;
    property Objectif: BaremeCommissionObjectif dispid 106;
    property Base: BaremeCommissionBase dispid 107;
    property Domaine: BaremeCommissionDomaine dispid 108;
    property Calcul: BaremeCommissionCalcul dispid 109;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IBOBaremeRabaisFactory
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {F54C7FDE-C060-4583-BACC-5590E613993C}
// *********************************************************************//
  IBOBaremeRabaisFactory = interface(IBITypeObjectFactory)
    ['{F54C7FDE-C060-4583-BACC-5590E613993C}']
    function ExistIntitule(const sIntitule: WideString): WordBool; safecall;
    function ReadIntitule(const sIntitule: WideString): IBOBaremeRabais; safecall;
    function QueryApplicableDate(dVal: TDateTime): IBICollection; safecall;
    function QueryApplicableArticleDate(const pArticle: IBOArticle3; dVal: TDateTime): IBICollection; safecall;
  end;

// *********************************************************************//
// DispIntf :    IBOBaremeRabaisFactoryDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {F54C7FDE-C060-4583-BACC-5590E613993C}
// *********************************************************************//
  IBOBaremeRabaisFactoryDisp = dispinterface
    ['{F54C7FDE-C060-4583-BACC-5590E613993C}']
    function ExistIntitule(const sIntitule: WideString): WordBool; dispid 10;
    function ReadIntitule(const sIntitule: WideString): IBOBaremeRabais; dispid 11;
    function QueryApplicableDate(dVal: TDateTime): IBICollection; dispid 12;
    function QueryApplicableArticleDate(const pArticle: IBOArticle3; dVal: TDateTime): IBICollection; dispid 13;
    property List: IBICollection readonly dispid 1;
    function Create: IBIPersistObject; dispid 2;
    function Read(const pOID: IBIObjectID): IBIPersistObject; dispid 3;
    function _QuerySynchro(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                           TypeExtraction: SynchroExtractType): IBICollection; dispid 4;
    function _QuerySynchroRemoved(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                                  TypeExtraction: SynchroExtractType): IBICollectionDispatch; dispid 5;
    function ReadFrom(const pStream: IStream): IBIPersistObject; dispid 6;
    property ListForward: IBICollection readonly dispid 7;
    function QueryPredicate(const pPredicate: IDispatch; const sSortDescriptors: WideString): IBICollection; dispid 8;
  end;

// *********************************************************************//
// Interface :   IBOBaremeRabais
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {61F8D58F-51E5-4B50-8D34-542D2FD72883}
// *********************************************************************//
  IBOBaremeRabais = interface(IBIPersistObject)
    ['{61F8D58F-51E5-4B50-8D34-542D2FD72883}']
    function Get_FactoryBaremeRabais: IBOBaremeRabaisFactory; safecall;
    function Get_FactoryBaremeRabaisQte: IBITypeObjectFactory; safecall;
    function Get_Intitule: WideString; safecall;
    procedure Set_Intitule(const pVal: WideString); safecall;
    function Get_DateDebut: TDateTime; safecall;
    procedure Set_DateDebut(pVal: TDateTime); safecall;
    function Get_DateFin: TDateTime; safecall;
    procedure Set_DateFin(pVal: TDateTime); safecall;
    function Get_Objectif: BaremeRabaisObjectif; safecall;
    procedure Set_Objectif(pVal: BaremeRabaisObjectif); safecall;
    function Get_Calcul: BaremeRabaisCalcul; safecall;
    procedure Set_Calcul(pVal: BaremeRabaisCalcul); safecall;
    function Get_ArticleRemise: IBOArticle3; safecall;
    procedure Set_ArticleRemise(const pObj: IBOArticle3); safecall;
    function Get_type_: BaremeRabaisType; safecall;
    function Get_Fournisseur: IBOFournisseur3; safecall;
    procedure Set_Fournisseur(const pObject: IBOFournisseur3); safecall;
    property FactoryBaremeRabais: IBOBaremeRabaisFactory read Get_FactoryBaremeRabais;
    property FactoryBaremeRabaisQte: IBITypeObjectFactory read Get_FactoryBaremeRabaisQte;
    property Intitule: WideString read Get_Intitule write Set_Intitule;
    property DateDebut: TDateTime read Get_DateDebut write Set_DateDebut;
    property DateFin: TDateTime read Get_DateFin write Set_DateFin;
    property Objectif: BaremeRabaisObjectif read Get_Objectif write Set_Objectif;
    property Calcul: BaremeRabaisCalcul read Get_Calcul write Set_Calcul;
    property ArticleRemise: IBOArticle3 read Get_ArticleRemise write Set_ArticleRemise;
    property type_: BaremeRabaisType read Get_type_;
    property Fournisseur: IBOFournisseur3 read Get_Fournisseur write Set_Fournisseur;
  end;

// *********************************************************************//
// DispIntf :    IBOBaremeRabaisDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {61F8D58F-51E5-4B50-8D34-542D2FD72883}
// *********************************************************************//
  IBOBaremeRabaisDisp = dispinterface
    ['{61F8D58F-51E5-4B50-8D34-542D2FD72883}']
    property FactoryBaremeRabais: IBOBaremeRabaisFactory readonly dispid 100;
    property FactoryBaremeRabaisQte: IBITypeObjectFactory readonly dispid 101;
    property Intitule: WideString dispid 102;
    property DateDebut: TDateTime dispid 103;
    property DateFin: TDateTime dispid 104;
    property Objectif: BaremeRabaisObjectif dispid 105;
    property Calcul: BaremeRabaisCalcul dispid 106;
    property ArticleRemise: IBOArticle3 dispid 107;
    property type_: BaremeRabaisType readonly dispid 108;
    property Fournisseur: IBOFournisseur3 dispid 109;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IBPArticleStatFactory
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {E8A78219-AC9D-4DDD-9E6D-D7C930F51A8D}
// *********************************************************************//
  IBPArticleStatFactory = interface(IBITypeObjectFactory)
    ['{E8A78219-AC9D-4DDD-9E6D-D7C930F51A8D}']
    function ExistIntitule(const sIntitule: WideString): WordBool; safecall;
    function ReadIntitule(const sIntitule: WideString): IBPArticleStat; safecall;
  end;

// *********************************************************************//
// DispIntf :    IBPArticleStatFactoryDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {E8A78219-AC9D-4DDD-9E6D-D7C930F51A8D}
// *********************************************************************//
  IBPArticleStatFactoryDisp = dispinterface
    ['{E8A78219-AC9D-4DDD-9E6D-D7C930F51A8D}']
    function ExistIntitule(const sIntitule: WideString): WordBool; dispid 10;
    function ReadIntitule(const sIntitule: WideString): IBPArticleStat; dispid 11;
    property List: IBICollection readonly dispid 1;
    function Create: IBIPersistObject; dispid 2;
    function Read(const pOID: IBIObjectID): IBIPersistObject; dispid 3;
    function _QuerySynchro(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                           TypeExtraction: SynchroExtractType): IBICollection; dispid 4;
    function _QuerySynchroRemoved(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                                  TypeExtraction: SynchroExtractType): IBICollectionDispatch; dispid 5;
    function ReadFrom(const pStream: IStream): IBIPersistObject; dispid 6;
    property ListForward: IBICollection readonly dispid 7;
    function QueryPredicate(const pPredicate: IDispatch; const sSortDescriptors: WideString): IBICollection; dispid 8;
  end;

// *********************************************************************//
// Interface :   IBPArticleStat
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {24ADFA38-BC1F-4932-9565-470BA40243AF}
// *********************************************************************//
  IBPArticleStat = interface(IBIPersistObject)
    ['{24ADFA38-BC1F-4932-9565-470BA40243AF}']
    function Get_FactoryArticleStat: IBPArticleStatFactory; safecall;
    function Get_Intitule: WideString; safecall;
    procedure Set_Intitule(const pVal: WideString); safecall;
    function Get_Enums: IBIValuesInsertable; safecall;
    property FactoryArticleStat: IBPArticleStatFactory read Get_FactoryArticleStat;
    property Intitule: WideString read Get_Intitule write Set_Intitule;
    property Enums: IBIValuesInsertable read Get_Enums;
  end;

// *********************************************************************//
// DispIntf :    IBPArticleStatDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {24ADFA38-BC1F-4932-9565-470BA40243AF}
// *********************************************************************//
  IBPArticleStatDisp = dispinterface
    ['{24ADFA38-BC1F-4932-9565-470BA40243AF}']
    property FactoryArticleStat: IBPArticleStatFactory readonly dispid 100;
    property Intitule: WideString dispid 101;
    property Enums: IBIValuesInsertable readonly dispid 102;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IBPAgendaFactory
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {C2534118-2BAB-47FA-8CF1-A40A9D587D33}
// *********************************************************************//
  IBPAgendaFactory = interface(IBITypeObjectFactory)
    ['{C2534118-2BAB-47FA-8CF1-A40A9D587D33}']
    function ExistIntitule(const sIntitule: WideString): WordBool; safecall;
    function ReadIntitule(const sIntitule: WideString): IBPAgenda; safecall;
  end;

// *********************************************************************//
// DispIntf :    IBPAgendaFactoryDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {C2534118-2BAB-47FA-8CF1-A40A9D587D33}
// *********************************************************************//
  IBPAgendaFactoryDisp = dispinterface
    ['{C2534118-2BAB-47FA-8CF1-A40A9D587D33}']
    function ExistIntitule(const sIntitule: WideString): WordBool; dispid 10;
    function ReadIntitule(const sIntitule: WideString): IBPAgenda; dispid 11;
    property List: IBICollection readonly dispid 1;
    function Create: IBIPersistObject; dispid 2;
    function Read(const pOID: IBIObjectID): IBIPersistObject; dispid 3;
    function _QuerySynchro(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                           TypeExtraction: SynchroExtractType): IBICollection; dispid 4;
    function _QuerySynchroRemoved(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                                  TypeExtraction: SynchroExtractType): IBICollectionDispatch; dispid 5;
    function ReadFrom(const pStream: IStream): IBIPersistObject; dispid 6;
    property ListForward: IBICollection readonly dispid 7;
    function QueryPredicate(const pPredicate: IDispatch; const sSortDescriptors: WideString): IBICollection; dispid 8;
  end;

// *********************************************************************//
// Interface :   IBPAgenda
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {9DD61766-76EA-4C2D-8137-FAA080DB0F8A}
// *********************************************************************//
  IBPAgenda = interface(IBIPersistObject)
    ['{9DD61766-76EA-4C2D-8137-FAA080DB0F8A}']
    function Get_FactoryAgenda: IBPAgendaFactory; safecall;
    function Get_Intitule: WideString; safecall;
    procedure Set_Intitule(const pVal: WideString); safecall;
    function Get_type_: AgendaTypeInteresse; safecall;
    procedure Set_type_(pVal: AgendaTypeInteresse); safecall;
    function Get_Indisponible: WordBool; safecall;
    procedure Set_Indisponible(pVal: WordBool); safecall;
    function Get_Enums: IBIValuesInsertable; safecall;
    property FactoryAgenda: IBPAgendaFactory read Get_FactoryAgenda;
    property Intitule: WideString read Get_Intitule write Set_Intitule;
    property type_: AgendaTypeInteresse read Get_type_ write Set_type_;
    property Indisponible: WordBool read Get_Indisponible write Set_Indisponible;
    property Enums: IBIValuesInsertable read Get_Enums;
  end;

// *********************************************************************//
// DispIntf :    IBPAgendaDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {9DD61766-76EA-4C2D-8137-FAA080DB0F8A}
// *********************************************************************//
  IBPAgendaDisp = dispinterface
    ['{9DD61766-76EA-4C2D-8137-FAA080DB0F8A}']
    property FactoryAgenda: IBPAgendaFactory readonly dispid 100;
    property Intitule: WideString dispid 101;
    property type_: AgendaTypeInteresse dispid 102;
    property Indisponible: WordBool dispid 103;
    property Enums: IBIValuesInsertable readonly dispid 104;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IPMDocument
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {4B1DFF26-1018-4458-9499-C4B84FC548B2}
// *********************************************************************//
  IPMDocument = interface(IPMProcess)
    ['{4B1DFF26-1018-4458-9499-C4B84FC548B2}']
    function Get_Document: IBODocument3; safecall;
    function Get_DocumentResult: IBODocument3; safecall;
    function AddArticle(const pArt: IBOArticle3; DL_Qte: Double): IBODocumentLigne3; safecall;
    function AddArticleReference(const sRef: WideString; Qte: Double): IBODocumentLigne3; safecall;
    function AddArticleMonoGamme(const pEnum: IBOArticleGammeEnum3; Qte: Double): IBODocumentLigne3; safecall;
    function AddArticleDoubleGamme(const pEnum1: IBOArticleGammeEnum3; 
                                   const pEnum2: IBOArticleGammeEnum3; Qte: Double): IBODocumentLigne3; safecall;
    function AddArticleConditionnement(const pArtCond: IBOArticleCond3; Qte: Double): IBODocumentLigne3; safecall;
    property Document: IBODocument3 read Get_Document;
    property DocumentResult: IBODocument3 read Get_DocumentResult;
  end;

// *********************************************************************//
// DispIntf :    IPMDocumentDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {4B1DFF26-1018-4458-9499-C4B84FC548B2}
// *********************************************************************//
  IPMDocumentDisp = dispinterface
    ['{4B1DFF26-1018-4458-9499-C4B84FC548B2}']
    property Document: IBODocument3 readonly dispid 100;
    property DocumentResult: IBODocument3 readonly dispid 101;
    function AddArticle(const pArt: IBOArticle3; DL_Qte: Double): IBODocumentLigne3; dispid 112;
    function AddArticleReference(const sRef: WideString; Qte: Double): IBODocumentLigne3; dispid 113;
    function AddArticleMonoGamme(const pEnum: IBOArticleGammeEnum3; Qte: Double): IBODocumentLigne3; dispid 114;
    function AddArticleDoubleGamme(const pEnum1: IBOArticleGammeEnum3; 
                                   const pEnum2: IBOArticleGammeEnum3; Qte: Double): IBODocumentLigne3; dispid 115;
    function AddArticleConditionnement(const pArtCond: IBOArticleCond3; Qte: Double): IBODocumentLigne3; dispid 116;
    procedure Process; dispid 10;
    property CanProcess: WordBool readonly dispid 11;
    property Errors: IFailInfoCol readonly dispid 12;
    property Transactional: WordBool dispid 13;
  end;

// *********************************************************************//
// Interface :   IPMAppliquerBareme
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {791D12AB-8EAA-4BDA-971C-A04BC9326C48}
// *********************************************************************//
  IPMAppliquerBareme = interface(IPMProcess)
    ['{791D12AB-8EAA-4BDA-971C-A04BC9326C48}']
    function Get_Document: IBODocumentPart3; safecall;
    procedure Set_Document(const pDocument: IBODocumentPart3); safecall;
    property Document: IBODocumentPart3 read Get_Document write Set_Document;
  end;

// *********************************************************************//
// DispIntf :    IPMAppliquerBaremeDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {791D12AB-8EAA-4BDA-971C-A04BC9326C48}
// *********************************************************************//
  IPMAppliquerBaremeDisp = dispinterface
    ['{791D12AB-8EAA-4BDA-971C-A04BC9326C48}']
    property Document: IBODocumentPart3 dispid 100;
    procedure Process; dispid 10;
    property CanProcess: WordBool readonly dispid 11;
    property Errors: IFailInfoCol readonly dispid 12;
    property Transactional: WordBool dispid 13;
  end;

// *********************************************************************//
// Interface :   IPMControlerQualite
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {42F7A6E0-7123-434D-B9B8-28F081E90D04}
// *********************************************************************//
  IPMControlerQualite = interface(IPMProcess)
    ['{42F7A6E0-7123-434D-B9B8-28F081E90D04}']
    function Get_Domaine: DomaineType; safecall;
    procedure Set_Domaine(pVal: DomaineType); safecall;
    function Get_Depot: IBODepot3; safecall;
    procedure Set_Depot(const pDepot: IBODepot3); safecall;
    function Get_DateValidation: TDateTime; safecall;
    procedure Set_DateValidation(pVal: TDateTime); safecall;
    function Get_PeriodDO_Date: IDateTimePeriod; safecall;
    procedure Set_PeriodDO_Date(const pTimePeriod: IDateTimePeriod); safecall;
    function Get_PeriodDO_DateLivraison: IDateTimePeriod; safecall;
    procedure Set_PeriodDO_DateLivraison(const pTimePeriod: IDateTimePeriod); safecall;
    function Get_TypeDocumentRetour: DocumentType; safecall;
    procedure Set_TypeDocumentRetour(pVal: DocumentType); safecall;
    function Get_DO_RefOut: WideString; safecall;
    procedure Set_DO_RefOut(const pVal: WideString); safecall;
    function Get_Controleur: IBOCollaborateur; safecall;
    procedure Set_Controleur(const pCollaborateur: IBOCollaborateur); safecall;
    function QueryLigneEmplacement: IBICollection; safecall;
    function Valider(const LigneEmpl: IBODocumentLigneEmplacement; Qte: Double): IPMControlerQualiteInfo; safecall;
    function Retourner(const LigneEmpl: IBODocumentLigneEmplacement; Qte: Double; 
                       const sMotifRetour: WideString): IPMControlerQualiteInfo; safecall;
    function MettreRebut(const LigneEmpl: IBODocumentLigneEmplacement; Qte: Double; 
                         const sMotifRebut: WideString): IPMControlerQualiteInfo; safecall;
    procedure RemoveControl(const LigneEmpl: IBODocumentLigneEmplacement); safecall;
    function Get_Control(const LigneEmpl: IBODocumentLigneEmplacement): IPMControlerQualiteInfo; safecall;
    function Get_ListMouvementTransfertOut: IBICollection; safecall;
    function Get_ListMouvementSortieOut: IBICollection; safecall;
    function Get_ListRetourOut: IBICollection; safecall;
    property Domaine: DomaineType read Get_Domaine write Set_Domaine;
    property Depot: IBODepot3 read Get_Depot write Set_Depot;
    property DateValidation: TDateTime read Get_DateValidation write Set_DateValidation;
    property PeriodDO_Date: IDateTimePeriod read Get_PeriodDO_Date write Set_PeriodDO_Date;
    property PeriodDO_DateLivraison: IDateTimePeriod read Get_PeriodDO_DateLivraison write Set_PeriodDO_DateLivraison;
    property TypeDocumentRetour: DocumentType read Get_TypeDocumentRetour write Set_TypeDocumentRetour;
    property DO_RefOut: WideString read Get_DO_RefOut write Set_DO_RefOut;
    property Controleur: IBOCollaborateur read Get_Controleur write Set_Controleur;
    property Control[const LigneEmpl: IBODocumentLigneEmplacement]: IPMControlerQualiteInfo read Get_Control;
    property ListMouvementTransfertOut: IBICollection read Get_ListMouvementTransfertOut;
    property ListMouvementSortieOut: IBICollection read Get_ListMouvementSortieOut;
    property ListRetourOut: IBICollection read Get_ListRetourOut;
  end;

// *********************************************************************//
// DispIntf :    IPMControlerQualiteDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {42F7A6E0-7123-434D-B9B8-28F081E90D04}
// *********************************************************************//
  IPMControlerQualiteDisp = dispinterface
    ['{42F7A6E0-7123-434D-B9B8-28F081E90D04}']
    property Domaine: DomaineType dispid 101;
    property Depot: IBODepot3 dispid 102;
    property DateValidation: TDateTime dispid 103;
    property PeriodDO_Date: IDateTimePeriod dispid 104;
    property PeriodDO_DateLivraison: IDateTimePeriod dispid 105;
    property TypeDocumentRetour: DocumentType dispid 106;
    property DO_RefOut: WideString dispid 107;
    property Controleur: IBOCollaborateur dispid 108;
    function QueryLigneEmplacement: IBICollection; dispid 109;
    function Valider(const LigneEmpl: IBODocumentLigneEmplacement; Qte: Double): IPMControlerQualiteInfo; dispid 110;
    function Retourner(const LigneEmpl: IBODocumentLigneEmplacement; Qte: Double; 
                       const sMotifRetour: WideString): IPMControlerQualiteInfo; dispid 111;
    function MettreRebut(const LigneEmpl: IBODocumentLigneEmplacement; Qte: Double; 
                         const sMotifRebut: WideString): IPMControlerQualiteInfo; dispid 112;
    procedure RemoveControl(const LigneEmpl: IBODocumentLigneEmplacement); dispid 113;
    property Control[const LigneEmpl: IBODocumentLigneEmplacement]: IPMControlerQualiteInfo readonly dispid 114;
    property ListMouvementTransfertOut: IBICollection readonly dispid 115;
    property ListMouvementSortieOut: IBICollection readonly dispid 116;
    property ListRetourOut: IBICollection readonly dispid 117;
    procedure Process; dispid 10;
    property CanProcess: WordBool readonly dispid 11;
    property Errors: IFailInfoCol readonly dispid 12;
    property Transactional: WordBool dispid 13;
  end;

// *********************************************************************//
// Interface :   IBODocumentLigneEmplacement
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {668D2238-E763-4F38-8FD3-8B88C136B993}
// *********************************************************************//
  IBODocumentLigneEmplacement = interface(IBIPersistObject)
    ['{668D2238-E763-4F38-8FD3-8B88C136B993}']
    function Get_FactoryDocumentLigneEmplacement: IBITypeObjectFactory; safecall;
    function Get_DocumentLigne: IBODocumentLigne3; safecall;
    function Get_Emplacement: IBODepotEmplacement; safecall;
    procedure Set_Emplacement(const pObj: IBODepotEmplacement); safecall;
    function Get_DL_Qte: Double; safecall;
    procedure Set_DL_Qte(pVal: Double); safecall;
    function Get_DL_QteAControler: Double; safecall;
    property FactoryDocumentLigneEmplacement: IBITypeObjectFactory read Get_FactoryDocumentLigneEmplacement;
    property DocumentLigne: IBODocumentLigne3 read Get_DocumentLigne;
    property Emplacement: IBODepotEmplacement read Get_Emplacement write Set_Emplacement;
    property DL_Qte: Double read Get_DL_Qte write Set_DL_Qte;
    property DL_QteAControler: Double read Get_DL_QteAControler;
  end;

// *********************************************************************//
// DispIntf :    IBODocumentLigneEmplacementDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {668D2238-E763-4F38-8FD3-8B88C136B993}
// *********************************************************************//
  IBODocumentLigneEmplacementDisp = dispinterface
    ['{668D2238-E763-4F38-8FD3-8B88C136B993}']
    property FactoryDocumentLigneEmplacement: IBITypeObjectFactory readonly dispid 150;
    property DocumentLigne: IBODocumentLigne3 readonly dispid 151;
    property Emplacement: IBODepotEmplacement dispid 152;
    property DL_Qte: Double dispid 153;
    property DL_QteAControler: Double readonly dispid 154;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IPMControlerQualiteInfo
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {0D937022-1A73-4627-B25C-B3BEC99804BF}
// *********************************************************************//
  IPMControlerQualiteInfo = interface(IDispatch)
    ['{0D937022-1A73-4627-B25C-B3BEC99804BF}']
    function Get_DocLigneEmpl: IBODocumentLigneEmplacement; safecall;
    function Get_DL_QteValidee: Double; safecall;
    procedure Set_DL_QteValidee(pVal: Double); safecall;
    function Get_EU_QteValidee: Double; safecall;
    procedure Set_EU_QteValidee(pVal: Double); safecall;
    function Get_DL_QteRetour: Double; safecall;
    procedure Set_DL_QteRetour(pVal: Double); safecall;
    function Get_EU_QteRetour: Double; safecall;
    procedure Set_EU_QteRetour(pVal: Double); safecall;
    function Get_MotifRetour: WideString; safecall;
    procedure Set_MotifRetour(const pVal: WideString); safecall;
    function Get_DL_QteRebut: Double; safecall;
    procedure Set_DL_QteRebut(pVal: Double); safecall;
    function Get_EU_QteRebut: Double; safecall;
    procedure Set_EU_QteRebut(pVal: Double); safecall;
    function Get_MotifRebut: WideString; safecall;
    procedure Set_MotifRebut(const pVal: WideString); safecall;
    function Get_DepotEmplDest: IBODepotEmplacement; safecall;
    procedure Set_DepotEmplDest(const DepotEmpl: IBODepotEmplacement); safecall;
    property DocLigneEmpl: IBODocumentLigneEmplacement read Get_DocLigneEmpl;
    property DL_QteValidee: Double read Get_DL_QteValidee write Set_DL_QteValidee;
    property EU_QteValidee: Double read Get_EU_QteValidee write Set_EU_QteValidee;
    property DL_QteRetour: Double read Get_DL_QteRetour write Set_DL_QteRetour;
    property EU_QteRetour: Double read Get_EU_QteRetour write Set_EU_QteRetour;
    property MotifRetour: WideString read Get_MotifRetour write Set_MotifRetour;
    property DL_QteRebut: Double read Get_DL_QteRebut write Set_DL_QteRebut;
    property EU_QteRebut: Double read Get_EU_QteRebut write Set_EU_QteRebut;
    property MotifRebut: WideString read Get_MotifRebut write Set_MotifRebut;
    property DepotEmplDest: IBODepotEmplacement read Get_DepotEmplDest write Set_DepotEmplDest;
  end;

// *********************************************************************//
// DispIntf :    IPMControlerQualiteInfoDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {0D937022-1A73-4627-B25C-B3BEC99804BF}
// *********************************************************************//
  IPMControlerQualiteInfoDisp = dispinterface
    ['{0D937022-1A73-4627-B25C-B3BEC99804BF}']
    property DocLigneEmpl: IBODocumentLigneEmplacement readonly dispid 1;
    property DL_QteValidee: Double dispid 2;
    property EU_QteValidee: Double dispid 3;
    property DL_QteRetour: Double dispid 4;
    property EU_QteRetour: Double dispid 5;
    property MotifRetour: WideString dispid 6;
    property DL_QteRebut: Double dispid 7;
    property EU_QteRebut: Double dispid 8;
    property MotifRebut: WideString dispid 9;
    property DepotEmplDest: IBODepotEmplacement dispid 10;
  end;

// *********************************************************************//
// Interface :   IBODocumentLigneAllFactory
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {06FEC9B3-6529-44C5-9EFA-23D1A8B9E85D}
// *********************************************************************//
  IBODocumentLigneAllFactory = interface(IBITypeObjectFactory)
    ['{06FEC9B3-6529-44C5-9EFA-23D1A8B9E85D}']
    function Get_InfoLibreFields: IBIFields; safecall;
    function QueryMouvementStockArticle(const pArticle: IBOArticle3; const pDepot: IBODepot3; 
                                        dValDe: TDateTime; dValA: TDateTime): IBICollection; safecall;
    function QueryMouvementStockArticleMonoGamme(const pArtGamEnum: IBOArticleGammeEnum3; 
                                                 const pDepot: IBODepot3; dValDe: TDateTime; 
                                                 dValA: TDateTime): IBICollection; safecall;
    function QueryMouvementStockArticleDoubleGamme(const pArtGamEnum1: IBOArticleGammeEnum3; 
                                                   const pArtGamEnum2: IBOArticleGammeEnum3; 
                                                   const pDepot: IBODepot3; dValDe: TDateTime; 
                                                   dValA: TDateTime): IBICollection; safecall;
    function QueryMouvementStockPreviArticle(const pArticle: IBOArticle3; const pDepot: IBODepot3; 
                                             dValDe: TDateTime; dValA: TDateTime; 
                                             bLigneWithoutDateLivraison: WordBool; 
                                             bIncludePL: WordBool): IBICollection; safecall;
    function QueryMouvementStockPreviArticleMonoGamme(const pArtGamEnum: IBOArticleGammeEnum3; 
                                                      const pDepot: IBODepot3; dValDe: TDateTime; 
                                                      dValA: TDateTime; 
                                                      bLigneWithoutDateLivraison: WordBool; 
                                                      bIncludePL: WordBool): IBICollection; safecall;
    function QueryMouvementStockPreviArticleDoubleGamme(const pArtGamEnum1: IBOArticleGammeEnum3; 
                                                        const pArtGamEnum2: IBOArticleGammeEnum3; 
                                                        const pDepot: IBODepot3; dValDe: TDateTime; 
                                                        dValA: TDateTime; 
                                                        bLigneWithoutDateLivraison: WordBool; 
                                                        bIncludePL: WordBool): IBICollection; safecall;
    function QueryTiers(const pTiers: IBOTiers3; dValDe: TDateTime; dValA: TDateTime; 
                        TypeDe: DocumentType; TypeA: DocumentType): IBICollection; safecall;
    function QueryTiersArticle(const pTiers: IBOTiers3; const pArticle: IBOArticle3; 
                               dValDe: TDateTime; dValA: TDateTime; TypeDe: DocumentType; 
                               TypeA: DocumentType): IBICollection; safecall;
    function QueryLot(const pLot: IBOArticleDepotLot): IBICollection; safecall;
    function QueryArticle(const pArticle: IBOArticle3; dValDe: TDateTime; dValA: TDateTime; 
                          TypeDe: DocumentType; TypeA: DocumentType): IBICollection; safecall;
    function QueryArticleMonoGamme(const pArtGamEnum: IBOArticleGammeEnum3; dValDe: TDateTime; 
                                   dValA: TDateTime; TypeDe: DocumentType; TypeA: DocumentType): IBICollection; safecall;
    function QueryArticleDoubleGamme(const pArtGamEnum1: IBOArticleGammeEnum3; 
                                     const pArtGamEnum2: IBOArticleGammeEnum3; dValDe: TDateTime; 
                                     dValA: TDateTime; TypeDe: DocumentType; TypeA: DocumentType): IBICollection; safecall;
    function Get_AutoSet_PrixLigne: WordBool; safecall;
    procedure Set_AutoSet_PrixLigne(pVal: WordBool); safecall;
    function QueryType(TypeDe: DocumentType; TypeA: DocumentType): IBICollection; safecall;
    function _QuerySynchroType(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                               TypeExtraction: SynchroExtractType; TypeDe: DocumentType; 
                               TypeA: DocumentType): IBICollection; safecall;
    function _QuerySynchroOID(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                              TypeExtraction: SynchroExtractType): IBICollectionDispatch; safecall;
    function _QuerySynchroOIDType(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                                  TypeExtraction: SynchroExtractType; TypeDe: DocumentType; 
                                  TypeA: DocumentType): IBICollectionDispatch; safecall;
    function Get_AutoSet_FraisLigne: WordBool; safecall;
    procedure Set_AutoSet_FraisLigne(pVal: WordBool); safecall;
    procedure CreateInfoLibre(const sName: WideString; sType: eTypeInfoLibre; ilength: Smallint); safecall;
    property InfoLibreFields: IBIFields read Get_InfoLibreFields;
    property AutoSet_PrixLigne: WordBool read Get_AutoSet_PrixLigne write Set_AutoSet_PrixLigne;
    property AutoSet_FraisLigne: WordBool read Get_AutoSet_FraisLigne write Set_AutoSet_FraisLigne;
  end;

// *********************************************************************//
// DispIntf :    IBODocumentLigneAllFactoryDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {06FEC9B3-6529-44C5-9EFA-23D1A8B9E85D}
// *********************************************************************//
  IBODocumentLigneAllFactoryDisp = dispinterface
    ['{06FEC9B3-6529-44C5-9EFA-23D1A8B9E85D}']
    property InfoLibreFields: IBIFields readonly dispid 10;
    function QueryMouvementStockArticle(const pArticle: IBOArticle3; const pDepot: IBODepot3; 
                                        dValDe: TDateTime; dValA: TDateTime): IBICollection; dispid 11;
    function QueryMouvementStockArticleMonoGamme(const pArtGamEnum: IBOArticleGammeEnum3; 
                                                 const pDepot: IBODepot3; dValDe: TDateTime; 
                                                 dValA: TDateTime): IBICollection; dispid 12;
    function QueryMouvementStockArticleDoubleGamme(const pArtGamEnum1: IBOArticleGammeEnum3; 
                                                   const pArtGamEnum2: IBOArticleGammeEnum3; 
                                                   const pDepot: IBODepot3; dValDe: TDateTime; 
                                                   dValA: TDateTime): IBICollection; dispid 13;
    function QueryMouvementStockPreviArticle(const pArticle: IBOArticle3; const pDepot: IBODepot3; 
                                             dValDe: TDateTime; dValA: TDateTime; 
                                             bLigneWithoutDateLivraison: WordBool; 
                                             bIncludePL: WordBool): IBICollection; dispid 14;
    function QueryMouvementStockPreviArticleMonoGamme(const pArtGamEnum: IBOArticleGammeEnum3; 
                                                      const pDepot: IBODepot3; dValDe: TDateTime; 
                                                      dValA: TDateTime; 
                                                      bLigneWithoutDateLivraison: WordBool; 
                                                      bIncludePL: WordBool): IBICollection; dispid 15;
    function QueryMouvementStockPreviArticleDoubleGamme(const pArtGamEnum1: IBOArticleGammeEnum3; 
                                                        const pArtGamEnum2: IBOArticleGammeEnum3; 
                                                        const pDepot: IBODepot3; dValDe: TDateTime; 
                                                        dValA: TDateTime; 
                                                        bLigneWithoutDateLivraison: WordBool; 
                                                        bIncludePL: WordBool): IBICollection; dispid 16;
    function QueryTiers(const pTiers: IBOTiers3; dValDe: TDateTime; dValA: TDateTime; 
                        TypeDe: DocumentType; TypeA: DocumentType): IBICollection; dispid 17;
    function QueryTiersArticle(const pTiers: IBOTiers3; const pArticle: IBOArticle3; 
                               dValDe: TDateTime; dValA: TDateTime; TypeDe: DocumentType; 
                               TypeA: DocumentType): IBICollection; dispid 18;
    function QueryLot(const pLot: IBOArticleDepotLot): IBICollection; dispid 19;
    function QueryArticle(const pArticle: IBOArticle3; dValDe: TDateTime; dValA: TDateTime; 
                          TypeDe: DocumentType; TypeA: DocumentType): IBICollection; dispid 20;
    function QueryArticleMonoGamme(const pArtGamEnum: IBOArticleGammeEnum3; dValDe: TDateTime; 
                                   dValA: TDateTime; TypeDe: DocumentType; TypeA: DocumentType): IBICollection; dispid 21;
    function QueryArticleDoubleGamme(const pArtGamEnum1: IBOArticleGammeEnum3; 
                                     const pArtGamEnum2: IBOArticleGammeEnum3; dValDe: TDateTime; 
                                     dValA: TDateTime; TypeDe: DocumentType; TypeA: DocumentType): IBICollection; dispid 22;
    property AutoSet_PrixLigne: WordBool dispid 23;
    function QueryType(TypeDe: DocumentType; TypeA: DocumentType): IBICollection; dispid 24;
    function _QuerySynchroType(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                               TypeExtraction: SynchroExtractType; TypeDe: DocumentType; 
                               TypeA: DocumentType): IBICollection; dispid 25;
    function _QuerySynchroOID(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                              TypeExtraction: SynchroExtractType): IBICollectionDispatch; dispid 26;
    function _QuerySynchroOIDType(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                                  TypeExtraction: SynchroExtractType; TypeDe: DocumentType; 
                                  TypeA: DocumentType): IBICollectionDispatch; dispid 27;
    property AutoSet_FraisLigne: WordBool dispid 28;
    procedure CreateInfoLibre(const sName: WideString; sType: eTypeInfoLibre; ilength: Smallint); dispid 29;
    property List: IBICollection readonly dispid 1;
    function Create: IBIPersistObject; dispid 2;
    function Read(const pOID: IBIObjectID): IBIPersistObject; dispid 3;
    function _QuerySynchro(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                           TypeExtraction: SynchroExtractType): IBICollection; dispid 4;
    function _QuerySynchroRemoved(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                                  TypeExtraction: SynchroExtractType): IBICollectionDispatch; dispid 5;
    function ReadFrom(const pStream: IStream): IBIPersistObject; dispid 6;
    property ListForward: IBICollection readonly dispid 7;
    function QueryPredicate(const pPredicate: IDispatch; const sSortDescriptors: WideString): IBICollection; dispid 8;
  end;

// *********************************************************************//
// Interface :   IBOAgendaFactory
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {A9348A89-02D7-49DB-A006-61906BB23186}
// *********************************************************************//
  IBOAgendaFactory = interface(IBITypeObjectFactory)
    ['{A9348A89-02D7-49DB-A006-61906BB23186}']
    function QueryType(sType: AgendaTypeInteresse): IBICollection; safecall;
    function QueryNonEchu: IBICollection; safecall;
    function QueryNonEchuType(sType: AgendaTypeInteresse): IBICollection; safecall;
  end;

// *********************************************************************//
// DispIntf :    IBOAgendaFactoryDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {A9348A89-02D7-49DB-A006-61906BB23186}
// *********************************************************************//
  IBOAgendaFactoryDisp = dispinterface
    ['{A9348A89-02D7-49DB-A006-61906BB23186}']
    function QueryType(sType: AgendaTypeInteresse): IBICollection; dispid 10;
    function QueryNonEchu: IBICollection; dispid 11;
    function QueryNonEchuType(sType: AgendaTypeInteresse): IBICollection; dispid 12;
    property List: IBICollection readonly dispid 1;
    function Create: IBIPersistObject; dispid 2;
    function Read(const pOID: IBIObjectID): IBIPersistObject; dispid 3;
    function _QuerySynchro(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                           TypeExtraction: SynchroExtractType): IBICollection; dispid 4;
    function _QuerySynchroRemoved(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                                  TypeExtraction: SynchroExtractType): IBICollectionDispatch; dispid 5;
    function ReadFrom(const pStream: IStream): IBIPersistObject; dispid 6;
    property ListForward: IBICollection readonly dispid 7;
    function QueryPredicate(const pPredicate: IDispatch; const sSortDescriptors: WideString): IBICollection; dispid 8;
  end;

// *********************************************************************//
// Interface :   IBORessourceFactory
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {CBFCC45C-78A9-4F00-AADD-AA7E7FF7DF57}
// *********************************************************************//
  IBORessourceFactory = interface(IBITypeObjectFactory)
    ['{CBFCC45C-78A9-4F00-AADD-AA7E7FF7DF57}']
    function Get_ListOrderIntitule: IBICollection; safecall;
    function Get_ListOrderType: IBICollection; safecall;
    function Get_ListOrderDepot: IBICollection; safecall;
    function ExistNumero(const sNum: WideString): WordBool; safecall;
    function ReadNumero(const sNum: WideString): IBORessource; safecall;
    property ListOrderIntitule: IBICollection read Get_ListOrderIntitule;
    property ListOrderType: IBICollection read Get_ListOrderType;
    property ListOrderDepot: IBICollection read Get_ListOrderDepot;
  end;

// *********************************************************************//
// DispIntf :    IBORessourceFactoryDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {CBFCC45C-78A9-4F00-AADD-AA7E7FF7DF57}
// *********************************************************************//
  IBORessourceFactoryDisp = dispinterface
    ['{CBFCC45C-78A9-4F00-AADD-AA7E7FF7DF57}']
    property ListOrderIntitule: IBICollection readonly dispid 10;
    property ListOrderType: IBICollection readonly dispid 11;
    property ListOrderDepot: IBICollection readonly dispid 12;
    function ExistNumero(const sNum: WideString): WordBool; dispid 13;
    function ReadNumero(const sNum: WideString): IBORessource; dispid 14;
    property List: IBICollection readonly dispid 1;
    function Create: IBIPersistObject; dispid 2;
    function Read(const pOID: IBIObjectID): IBIPersistObject; dispid 3;
    function _QuerySynchro(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                           TypeExtraction: SynchroExtractType): IBICollection; dispid 4;
    function _QuerySynchroRemoved(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                                  TypeExtraction: SynchroExtractType): IBICollectionDispatch; dispid 5;
    function ReadFrom(const pStream: IStream): IBIPersistObject; dispid 6;
    property ListForward: IBICollection readonly dispid 7;
    function QueryPredicate(const pPredicate: IDispatch; const sSortDescriptors: WideString): IBICollection; dispid 8;
  end;

// *********************************************************************//
// Interface :   IBORessource
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {677C7E65-047F-4147-A575-9950816E45C2}
// *********************************************************************//
  IBORessource = interface(IBIRessource)
    ['{677C7E65-047F-4147-A575-9950816E45C2}']
    function Get_FactoryRessource: IBORessourceFactory; safecall;
    function Get_Adresse: IAdresse; safecall;
    procedure Set_Adresse(const pAdresse: IAdresse); safecall;
    function Get_Telecom: ITelecom; safecall;
    procedure Set_Telecom(const pTelecom: ITelecom); safecall;
    function Get_RP_CodeExterne: WideString; safecall;
    procedure Set_RP_CodeExterne(const pVal: WideString); safecall;
    property FactoryRessource: IBORessourceFactory read Get_FactoryRessource;
    property Adresse: IAdresse read Get_Adresse write Set_Adresse;
    property Telecom: ITelecom read Get_Telecom write Set_Telecom;
    property RP_CodeExterne: WideString read Get_RP_CodeExterne write Set_RP_CodeExterne;
  end;

// *********************************************************************//
// DispIntf :    IBORessourceDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {677C7E65-047F-4147-A575-9950816E45C2}
// *********************************************************************//
  IBORessourceDisp = dispinterface
    ['{677C7E65-047F-4147-A575-9950816E45C2}']
    property FactoryRessource: IBORessourceFactory readonly dispid 299;
    property Adresse: IAdresse dispid 300;
    property Telecom: ITelecom dispid 301;
    property RP_CodeExterne: WideString dispid 305;
    property FactoryRessourceBase: IBIRessourceFactory readonly dispid 100;
    property FactoryRessourceArticle: IBIRessourceArticleFactory readonly dispid 101;
    property FactoryRessourceRessource: IBIRessourceRessourceFactory readonly dispid 102;
    property RP_TypeRess: RessourceType readonly dispid 103;
    property RP_Code: WideString dispid 104;
    property RP_Type: RessourceProdType dispid 105;
    property RP_Intitule: WideString dispid 106;
    property RP_Complement: WideString dispid 107;
    property RP_Commentaire: WideString dispid 108;
    property RessourceCentrale: IBIRessource dispid 109;
    property RP_Visite: TDateTime dispid 110;
    property RP_Sommeil: WordBool dispid 111;
    property RP_CoutStd: Double dispid 112;
    property RP_DateCreation: TDateTime readonly dispid 113;
    property RP_Capacite: Integer dispid 114;
    property RP_Temps: Integer dispid 115;
    property ArticleDefault: IBOArticle3 dispid 116;
    property Unite: IBPUnite dispid 117;
    property RP_Continue: WordBool dispid 118;
    property Horaire1[iDayOfWeek: Smallint]: IDateTimePeriod dispid 119;
    property Horaire2[iDayOfWeek: Smallint]: IDateTimePeriod dispid 120;
    property Depot: IBODepot3 dispid 121;
    property RP_Facebook: WideString dispid 122;
    property RP_LinkedIn: WideString dispid 123;
    property RP_Skype: WideString dispid 124;
    property InfoLibre: IBIValues readonly dispid 125;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IBORessourceCentreFactory
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {C4F1A288-C230-49E7-AD37-298A071E7636}
// *********************************************************************//
  IBORessourceCentreFactory = interface(IBITypeObjectFactory)
    ['{C4F1A288-C230-49E7-AD37-298A071E7636}']
    function Get_ListOrderIntitule: IBICollection; safecall;
    function Get_ListOrderType: IBICollection; safecall;
    function Get_ListOrderDepot: IBICollection; safecall;
    function ExistNumero(const sNum: WideString): WordBool; safecall;
    function ReadNumero(const sNum: WideString): IBORessourceCentre; safecall;
    property ListOrderIntitule: IBICollection read Get_ListOrderIntitule;
    property ListOrderType: IBICollection read Get_ListOrderType;
    property ListOrderDepot: IBICollection read Get_ListOrderDepot;
  end;

// *********************************************************************//
// DispIntf :    IBORessourceCentreFactoryDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {C4F1A288-C230-49E7-AD37-298A071E7636}
// *********************************************************************//
  IBORessourceCentreFactoryDisp = dispinterface
    ['{C4F1A288-C230-49E7-AD37-298A071E7636}']
    property ListOrderIntitule: IBICollection readonly dispid 10;
    property ListOrderType: IBICollection readonly dispid 11;
    property ListOrderDepot: IBICollection readonly dispid 12;
    function ExistNumero(const sNum: WideString): WordBool; dispid 13;
    function ReadNumero(const sNum: WideString): IBORessourceCentre; dispid 14;
    property List: IBICollection readonly dispid 1;
    function Create: IBIPersistObject; dispid 2;
    function Read(const pOID: IBIObjectID): IBIPersistObject; dispid 3;
    function _QuerySynchro(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                           TypeExtraction: SynchroExtractType): IBICollection; dispid 4;
    function _QuerySynchroRemoved(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                                  TypeExtraction: SynchroExtractType): IBICollectionDispatch; dispid 5;
    function ReadFrom(const pStream: IStream): IBIPersistObject; dispid 6;
    property ListForward: IBICollection readonly dispid 7;
    function QueryPredicate(const pPredicate: IDispatch; const sSortDescriptors: WideString): IBICollection; dispid 8;
  end;

// *********************************************************************//
// Interface :   IBORessourceCentre
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {F5D3BB4D-6691-4F6F-AF87-949A9EEEADDE}
// *********************************************************************//
  IBORessourceCentre = interface(IBIRessource)
    ['{F5D3BB4D-6691-4F6F-AF87-949A9EEEADDE}']
    function Get_FactoryRessourceCentre: IBORessourceCentreFactory; safecall;
    property FactoryRessourceCentre: IBORessourceCentreFactory read Get_FactoryRessourceCentre;
  end;

// *********************************************************************//
// DispIntf :    IBORessourceCentreDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {F5D3BB4D-6691-4F6F-AF87-949A9EEEADDE}
// *********************************************************************//
  IBORessourceCentreDisp = dispinterface
    ['{F5D3BB4D-6691-4F6F-AF87-949A9EEEADDE}']
    property FactoryRessourceCentre: IBORessourceCentreFactory readonly dispid 299;
    property FactoryRessourceBase: IBIRessourceFactory readonly dispid 100;
    property FactoryRessourceArticle: IBIRessourceArticleFactory readonly dispid 101;
    property FactoryRessourceRessource: IBIRessourceRessourceFactory readonly dispid 102;
    property RP_TypeRess: RessourceType readonly dispid 103;
    property RP_Code: WideString dispid 104;
    property RP_Type: RessourceProdType dispid 105;
    property RP_Intitule: WideString dispid 106;
    property RP_Complement: WideString dispid 107;
    property RP_Commentaire: WideString dispid 108;
    property RessourceCentrale: IBIRessource dispid 109;
    property RP_Visite: TDateTime dispid 110;
    property RP_Sommeil: WordBool dispid 111;
    property RP_CoutStd: Double dispid 112;
    property RP_DateCreation: TDateTime readonly dispid 113;
    property RP_Capacite: Integer dispid 114;
    property RP_Temps: Integer dispid 115;
    property ArticleDefault: IBOArticle3 dispid 116;
    property Unite: IBPUnite dispid 117;
    property RP_Continue: WordBool dispid 118;
    property Horaire1[iDayOfWeek: Smallint]: IDateTimePeriod dispid 119;
    property Horaire2[iDayOfWeek: Smallint]: IDateTimePeriod dispid 120;
    property Depot: IBODepot3 dispid 121;
    property RP_Facebook: WideString dispid 122;
    property RP_LinkedIn: WideString dispid 123;
    property RP_Skype: WideString dispid 124;
    property InfoLibre: IBIValues readonly dispid 125;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IControleQualiteStat
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {14E6E6E2-D4D5-44B4-A841-87AD58F62118}
// *********************************************************************//
  IControleQualiteStat = interface(IDispatch)
    ['{14E6E6E2-D4D5-44B4-A841-87AD58F62118}']
    function Get_QteAControler: Double; safecall;
    function Get_QteControlee: Double; safecall;
    function Get_QteValidee: Double; safecall;
    function Get_QteRetour: Double; safecall;
    function Get_QteRebut: Double; safecall;
    property QteAControler: Double read Get_QteAControler;
    property QteControlee: Double read Get_QteControlee;
    property QteValidee: Double read Get_QteValidee;
    property QteRetour: Double read Get_QteRetour;
    property QteRebut: Double read Get_QteRebut;
  end;

// *********************************************************************//
// DispIntf :    IControleQualiteStatDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {14E6E6E2-D4D5-44B4-A841-87AD58F62118}
// *********************************************************************//
  IControleQualiteStatDisp = dispinterface
    ['{14E6E6E2-D4D5-44B4-A841-87AD58F62118}']
    property QteAControler: Double readonly dispid 7;
    property QteControlee: Double readonly dispid 8;
    property QteValidee: Double readonly dispid 9;
    property QteRetour: Double readonly dispid 10;
    property QteRebut: Double readonly dispid 11;
  end;

// *********************************************************************//
// Interface :   IPMColiser
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {A2D16FA5-8783-4397-9E8B-0736A97CA36F}
// *********************************************************************//
  IPMColiser = interface(IPMProcess)
    ['{A2D16FA5-8783-4397-9E8B-0736A97CA36F}']
    function Get_LigneOrigine: IBODocumentVenteLigne3; safecall;
    procedure Set_LigneOrigine(const pLigne: IBODocumentVenteLigne3); safecall;
    function Get_UserColis: IBICollectionDispatch; safecall;
    function Get_QteAColiser: Double; safecall;
    function Get_QteRestantAColiser: Double; safecall;
    function Get_ListLignesResult: IBICollection; safecall;
    property LigneOrigine: IBODocumentVenteLigne3 read Get_LigneOrigine write Set_LigneOrigine;
    property UserColis: IBICollectionDispatch read Get_UserColis;
    property QteAColiser: Double read Get_QteAColiser;
    property QteRestantAColiser: Double read Get_QteRestantAColiser;
    property ListLignesResult: IBICollection read Get_ListLignesResult;
  end;

// *********************************************************************//
// DispIntf :    IPMColiserDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {A2D16FA5-8783-4397-9E8B-0736A97CA36F}
// *********************************************************************//
  IPMColiserDisp = dispinterface
    ['{A2D16FA5-8783-4397-9E8B-0736A97CA36F}']
    property LigneOrigine: IBODocumentVenteLigne3 dispid 100;
    property UserColis: IBICollectionDispatch readonly dispid 110;
    property QteAColiser: Double readonly dispid 105;
    property QteRestantAColiser: Double readonly dispid 106;
    property ListLignesResult: IBICollection readonly dispid 107;
    procedure Process; dispid 10;
    property CanProcess: WordBool readonly dispid 11;
    property Errors: IFailInfoCol readonly dispid 12;
    property Transactional: WordBool dispid 13;
  end;

// *********************************************************************//
// Interface :   IBODocumentPartLigne3
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {96BCA363-6B12-4DB8-A50D-8692B6F66BBC}
// *********************************************************************//
  IBODocumentPartLigne3 = interface(IBODocumentLigne3)
    ['{96BCA363-6B12-4DB8-A50D-8692B6F66BBC}']
    function Get_DocumentPart: IBODocumentPart3; safecall;
    function Get_Tiers: IBOTiersPart3; safecall;
    function Get_DL_DateBC: TDateTime; safecall;
    function Get_DL_DateBL: TDateTime; safecall;
    function Get_DL_PieceBC: WideString; safecall;
    function Get_DL_PieceBL: WideString; safecall;
    function Get_IsRemisePied: WordBool; safecall;
    procedure Set_IsRemisePied(pVal: WordBool); safecall;
    function Get_IsRemiseExceptionnelle: WordBool; safecall;
    procedure Set_IsRemiseExceptionnelle(pVal: WordBool); safecall;
    function Get_IsTotalisatrice: WordBool; safecall;
    procedure Set_IsTotalisatrice(pVal: WordBool); safecall;
    function Get_DL_QteBC: Double; safecall;
    procedure Set_DL_QteBC(pVal: Double); safecall;
    function Get_DL_QteBL: Double; safecall;
    procedure Set_DL_QteBL(pVal: Double); safecall;
    function Get_Remise: IRemise2; safecall;
    procedure Set_Remise(const pObject: IRemise2); safecall;
    function Get_DL_PUBC: Double; safecall;
    function Get_AF_RefFourniss: WideString; safecall;
    procedure Set_AF_RefFourniss(const pVal: WideString); safecall;
    function Get_DL_TypePL: DocumentLigneProvenanceType; safecall;
    function Get_DL_Escompte: WordBool; safecall;
    function Get_DL_PUDevise: Double; safecall;
    procedure Set_DL_PUDevise(pVal: Double); safecall;
    function Get_DL_PUTTC: Double; safecall;
    procedure Set_DL_PUTTC(pVal: Double); safecall;
    function Get_DO_DateLivr: TDateTime; safecall;
    procedure Set_DO_DateLivr(pVal: TDateTime); safecall;
    function Get_DL_NonLivre: WordBool; safecall;
    function Get_DL_MontantTTC: Double; safecall;
    procedure SetDefaultArticleReferenceFournisseur(const sRef: WideString; Qte: Double); safecall;
    function Get_Taxe(sElt: Smallint): IBOTaxe3; safecall;
    procedure Set_Taxe(sElt: Smallint; const pObject: IBOTaxe3); safecall;
    property DocumentPart: IBODocumentPart3 read Get_DocumentPart;
    property Tiers: IBOTiersPart3 read Get_Tiers;
    property DL_DateBC: TDateTime read Get_DL_DateBC;
    property DL_DateBL: TDateTime read Get_DL_DateBL;
    property DL_PieceBC: WideString read Get_DL_PieceBC;
    property DL_PieceBL: WideString read Get_DL_PieceBL;
    property IsRemisePied: WordBool read Get_IsRemisePied write Set_IsRemisePied;
    property IsRemiseExceptionnelle: WordBool read Get_IsRemiseExceptionnelle write Set_IsRemiseExceptionnelle;
    property IsTotalisatrice: WordBool read Get_IsTotalisatrice write Set_IsTotalisatrice;
    property DL_QteBC: Double read Get_DL_QteBC write Set_DL_QteBC;
    property DL_QteBL: Double read Get_DL_QteBL write Set_DL_QteBL;
    property Remise: IRemise2 read Get_Remise write Set_Remise;
    property DL_PUBC: Double read Get_DL_PUBC;
    property AF_RefFourniss: WideString read Get_AF_RefFourniss write Set_AF_RefFourniss;
    property DL_TypePL: DocumentLigneProvenanceType read Get_DL_TypePL;
    property DL_Escompte: WordBool read Get_DL_Escompte;
    property DL_PUDevise: Double read Get_DL_PUDevise write Set_DL_PUDevise;
    property DL_PUTTC: Double read Get_DL_PUTTC write Set_DL_PUTTC;
    property DO_DateLivr: TDateTime read Get_DO_DateLivr write Set_DO_DateLivr;
    property DL_NonLivre: WordBool read Get_DL_NonLivre;
    property DL_MontantTTC: Double read Get_DL_MontantTTC;
    property Taxe[sElt: Smallint]: IBOTaxe3 read Get_Taxe write Set_Taxe;
  end;

// *********************************************************************//
// DispIntf :    IBODocumentPartLigne3Disp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {96BCA363-6B12-4DB8-A50D-8692B6F66BBC}
// *********************************************************************//
  IBODocumentPartLigne3Disp = dispinterface
    ['{96BCA363-6B12-4DB8-A50D-8692B6F66BBC}']
    property DocumentPart: IBODocumentPart3 readonly dispid 200;
    property Tiers: IBOTiersPart3 readonly dispid 201;
    property DL_DateBC: TDateTime readonly dispid 203;
    property DL_DateBL: TDateTime readonly dispid 204;
    property DL_PieceBC: WideString readonly dispid 205;
    property DL_PieceBL: WideString readonly dispid 206;
    property IsRemisePied: WordBool dispid 207;
    property IsRemiseExceptionnelle: WordBool dispid 208;
    property IsTotalisatrice: WordBool dispid 209;
    property DL_QteBC: Double dispid 210;
    property DL_QteBL: Double dispid 211;
    property Remise: IRemise2 dispid 212;
    property DL_PUBC: Double readonly dispid 213;
    property AF_RefFourniss: WideString dispid 214;
    property DL_TypePL: DocumentLigneProvenanceType readonly dispid 215;
    property DL_Escompte: WordBool readonly dispid 217;
    property DL_PUDevise: Double dispid 218;
    property DL_PUTTC: Double dispid 219;
    property DO_DateLivr: TDateTime dispid 220;
    property DL_NonLivre: WordBool readonly dispid 221;
    property DL_MontantTTC: Double readonly dispid 223;
    procedure SetDefaultArticleReferenceFournisseur(const sRef: WideString; Qte: Double); dispid 224;
    property Taxe[sElt: Smallint]: IBOTaxe3 dispid 225;
    property Document: IBODocument3 readonly dispid 101;
    property FactoryDocumentLigne: IBODocumentLigneFactory readonly dispid 131;
    property DO_Domaine: DomaineType readonly dispid 102;
    property DO_Type: DocumentType readonly dispid 103;
    property DO_Ref: WideString dispid 104;
    property Article: IBOArticle3 readonly dispid 105;
    property DL_Design: WideString dispid 106;
    property DL_Qte: Double dispid 107;
    property DL_PoidsNet: Double dispid 108;
    property DL_PoidsBrut: Double dispid 109;
    property DL_PrixUnitaire: Double dispid 110;
    property ArticleGammeEnum1: IBOArticleGammeEnum3 readonly dispid 111;
    property ArticleGammeEnum2: IBOArticleGammeEnum3 readonly dispid 112;
    property DL_PrixRU: Double dispid 113;
    property DL_CMUP: Double dispid 114;
    property DL_MvtStock: DocumentLigneMvtStockType readonly dispid 115;
    property EU_Enumere: WideString dispid 116;
    property EU_Qte: Double dispid 117;
    property Depot: IBODepot3 dispid 118;
    property DL_MontantHT: Double readonly dispid 119;
    property LS_NoSerie: WideString dispid 120;
    property LS_Peremption: TDateTime dispid 121;
    property LS_Fabrication: TDateTime dispid 122;
    property Valorisee: WordBool dispid 123;
    property DL_FactPoids: WordBool readonly dispid 124;
    property InfoLibre: IBIValues readonly dispid 125;
    procedure SetDefaultArticleReference(const sRef: WideString; Qte: Double); dispid 126;
    procedure SetDefaultArticle(const pArticle: IBOArticle3; Qte: Double); dispid 127;
    procedure SetDefaultArticleMonoGamme(const pEnum: IBOArticleGammeEnum3; Qte: Double); dispid 128;
    procedure SetDefaultArticleDoubleGamme(const pEnum1: IBOArticleGammeEnum3; 
                                           const pEnum2: IBOArticleGammeEnum3; Qte: Double); dispid 129;
    procedure SetDefaultArticleConditionnement(const pArtCond: IBOArticleCond3; Qte: Double); dispid 130;
    property FactoryDocumentLigneEmplacement: IBITypeObjectFactory readonly dispid 132;
    property Lot: IBOArticleDepotLot dispid 133;
    procedure SetDefaultLot(const pLot: IBOArticleDepotLot; Qte: Double); dispid 134;
    property Collaborateur: IBOCollaborateur dispid 135;
    property TxtComplementaire: WideString dispid 136;
    property Ressource: IBIRessource dispid 137;
    property CompteA: IBOCompteA3 dispid 216;
    property FactoryDocumentLigneLienCM: IBITypeObjectFactory readonly dispid 138;
    property DO_Date: TDateTime dispid 139;
    property LS_ComplementOut: WideString readonly dispid 140;
    function MoveUp: WordBool; dispid 141;
    function MoveDown: WordBool; dispid 142;
    procedure WriteBefore(const pNextLigne: IBODocumentLigne3); dispid 143;
    procedure WriteDefaultBefore(const pNextLigne: IBODocumentLigne3); dispid 144;
    procedure SetRessourceDefault(const pRessource: IBIRessource); dispid 145;
    property DL_PieceOFProd: Integer dispid 146;
    property DL_Operation: WideString dispid 147;
    property DefaultCMUP: Double readonly dispid 148;
    procedure WriteTransact; dispid 149;
    procedure WriteDefaultTransact; dispid 150;
    procedure WriteCumulLot; dispid 151;
    procedure SetEmplacementEntree(const pDepotEmpl: IBODepotEmplacement); dispid 152;
    function HasEmplacementEntree: WordBool; dispid 153;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IBODocumentVenteLigne3
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {5BA16B17-24FF-4FAA-BD06-D014D625E0C6}
// *********************************************************************//
  IBODocumentVenteLigne3 = interface(IBODocumentPartLigne3)
    ['{5BA16B17-24FF-4FAA-BD06-D014D625E0C6}']
    function Get_DocumentVente: IBODocumentVente3; safecall;
    function Get_Client: IBOClient3; safecall;
    function Get_AC_RefClient: WideString; safecall;
    procedure Set_AC_RefClient(const pVal: WideString); safecall;
    function Get_TTC: WordBool; safecall;
    procedure Set_TTC(pVal: WordBool); safecall;
    function Get_ArticleCompose: IBOArticle3; safecall;
    procedure Set_ArticleCompose(const pArticle: IBOArticle3); safecall;
    function Get_IsComposeDeCompose: WordBool; safecall;
    function Get_IsComposeDeComposant: WordBool; safecall;
    function Get_LignesComposants: IBICollection; safecall;
    function Get_DL_PiecePL: WideString; safecall;
    function Get_DL_DatePL: TDateTime; safecall;
    function Get_DL_QtePL: Double; safecall;
    procedure Set_DL_QtePL(pVal: Double); safecall;
    procedure SetDefaultArticleReferenceClient(const sRef: WideString; Qte: Double); safecall;
    procedure SetDefaultRemise; safecall;
    function Get_Valorisation: IDocLigneValorisation; safecall;
    function Get_DL_QteRessource: Integer; safecall;
    procedure Set_DL_QteRessource(pVal: Integer); safecall;
    function Get_DL_NoColis: WideString; safecall;
    procedure Set_DL_NoColis(const pVal: WideString); safecall;
    function Get_DL_PieceDE: WideString; safecall;
    function Get_DL_DateDE: TDateTime; safecall;
    function Get_DL_QteDE: Double; safecall;
    function Get_FactoryInfoComplement: IBOInfoComplementDocligneFactory; safecall;
    property DocumentVente: IBODocumentVente3 read Get_DocumentVente;
    property Client: IBOClient3 read Get_Client;
    property AC_RefClient: WideString read Get_AC_RefClient write Set_AC_RefClient;
    property TTC: WordBool read Get_TTC write Set_TTC;
    property ArticleCompose: IBOArticle3 read Get_ArticleCompose write Set_ArticleCompose;
    property IsComposeDeCompose: WordBool read Get_IsComposeDeCompose;
    property IsComposeDeComposant: WordBool read Get_IsComposeDeComposant;
    property LignesComposants: IBICollection read Get_LignesComposants;
    property DL_PiecePL: WideString read Get_DL_PiecePL;
    property DL_DatePL: TDateTime read Get_DL_DatePL;
    property DL_QtePL: Double read Get_DL_QtePL write Set_DL_QtePL;
    property Valorisation: IDocLigneValorisation read Get_Valorisation;
    property DL_QteRessource: Integer read Get_DL_QteRessource write Set_DL_QteRessource;
    property DL_NoColis: WideString read Get_DL_NoColis write Set_DL_NoColis;
    property DL_PieceDE: WideString read Get_DL_PieceDE;
    property DL_DateDE: TDateTime read Get_DL_DateDE;
    property DL_QteDE: Double read Get_DL_QteDE;
    property FactoryInfoComplement: IBOInfoComplementDocligneFactory read Get_FactoryInfoComplement;
  end;

// *********************************************************************//
// DispIntf :    IBODocumentVenteLigne3Disp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {5BA16B17-24FF-4FAA-BD06-D014D625E0C6}
// *********************************************************************//
  IBODocumentVenteLigne3Disp = dispinterface
    ['{5BA16B17-24FF-4FAA-BD06-D014D625E0C6}']
    property DocumentVente: IBODocumentVente3 readonly dispid 300;
    property Client: IBOClient3 readonly dispid 301;
    property AC_RefClient: WideString dispid 302;
    property TTC: WordBool dispid 304;
    property ArticleCompose: IBOArticle3 dispid 305;
    property IsComposeDeCompose: WordBool readonly dispid 306;
    property IsComposeDeComposant: WordBool readonly dispid 307;
    property LignesComposants: IBICollection readonly dispid 308;
    property DL_PiecePL: WideString readonly dispid 310;
    property DL_DatePL: TDateTime readonly dispid 311;
    property DL_QtePL: Double dispid 312;
    procedure SetDefaultArticleReferenceClient(const sRef: WideString; Qte: Double); dispid 309;
    procedure SetDefaultRemise; dispid 313;
    property Valorisation: IDocLigneValorisation readonly dispid 314;
    property DL_QteRessource: Integer dispid 315;
    property DL_NoColis: WideString dispid 316;
    property DL_PieceDE: WideString readonly dispid 317;
    property DL_DateDE: TDateTime readonly dispid 318;
    property DL_QteDE: Double readonly dispid 319;
    property FactoryInfoComplement: IBOInfoComplementDocligneFactory readonly dispid 320;
    property DocumentPart: IBODocumentPart3 readonly dispid 200;
    property Tiers: IBOTiersPart3 readonly dispid 201;
    property DL_DateBC: TDateTime readonly dispid 203;
    property DL_DateBL: TDateTime readonly dispid 204;
    property DL_PieceBC: WideString readonly dispid 205;
    property DL_PieceBL: WideString readonly dispid 206;
    property IsRemisePied: WordBool dispid 207;
    property IsRemiseExceptionnelle: WordBool dispid 208;
    property IsTotalisatrice: WordBool dispid 209;
    property DL_QteBC: Double dispid 210;
    property DL_QteBL: Double dispid 211;
    property Remise: IRemise2 dispid 212;
    property DL_PUBC: Double readonly dispid 213;
    property AF_RefFourniss: WideString dispid 214;
    property DL_TypePL: DocumentLigneProvenanceType readonly dispid 215;
    property DL_Escompte: WordBool readonly dispid 217;
    property DL_PUDevise: Double dispid 218;
    property DL_PUTTC: Double dispid 219;
    property DO_DateLivr: TDateTime dispid 220;
    property DL_NonLivre: WordBool readonly dispid 221;
    property DL_MontantTTC: Double readonly dispid 223;
    procedure SetDefaultArticleReferenceFournisseur(const sRef: WideString; Qte: Double); dispid 224;
    property Taxe[sElt: Smallint]: IBOTaxe3 dispid 225;
    property Document: IBODocument3 readonly dispid 101;
    property FactoryDocumentLigne: IBODocumentLigneFactory readonly dispid 131;
    property DO_Domaine: DomaineType readonly dispid 102;
    property DO_Type: DocumentType readonly dispid 103;
    property DO_Ref: WideString dispid 104;
    property Article: IBOArticle3 readonly dispid 105;
    property DL_Design: WideString dispid 106;
    property DL_Qte: Double dispid 107;
    property DL_PoidsNet: Double dispid 108;
    property DL_PoidsBrut: Double dispid 109;
    property DL_PrixUnitaire: Double dispid 110;
    property ArticleGammeEnum1: IBOArticleGammeEnum3 readonly dispid 111;
    property ArticleGammeEnum2: IBOArticleGammeEnum3 readonly dispid 112;
    property DL_PrixRU: Double dispid 113;
    property DL_CMUP: Double dispid 114;
    property DL_MvtStock: DocumentLigneMvtStockType readonly dispid 115;
    property EU_Enumere: WideString dispid 116;
    property EU_Qte: Double dispid 117;
    property Depot: IBODepot3 dispid 118;
    property DL_MontantHT: Double readonly dispid 119;
    property LS_NoSerie: WideString dispid 120;
    property LS_Peremption: TDateTime dispid 121;
    property LS_Fabrication: TDateTime dispid 122;
    property Valorisee: WordBool dispid 123;
    property DL_FactPoids: WordBool readonly dispid 124;
    property InfoLibre: IBIValues readonly dispid 125;
    procedure SetDefaultArticleReference(const sRef: WideString; Qte: Double); dispid 126;
    procedure SetDefaultArticle(const pArticle: IBOArticle3; Qte: Double); dispid 127;
    procedure SetDefaultArticleMonoGamme(const pEnum: IBOArticleGammeEnum3; Qte: Double); dispid 128;
    procedure SetDefaultArticleDoubleGamme(const pEnum1: IBOArticleGammeEnum3; 
                                           const pEnum2: IBOArticleGammeEnum3; Qte: Double); dispid 129;
    procedure SetDefaultArticleConditionnement(const pArtCond: IBOArticleCond3; Qte: Double); dispid 130;
    property FactoryDocumentLigneEmplacement: IBITypeObjectFactory readonly dispid 132;
    property Lot: IBOArticleDepotLot dispid 133;
    procedure SetDefaultLot(const pLot: IBOArticleDepotLot; Qte: Double); dispid 134;
    property Collaborateur: IBOCollaborateur dispid 135;
    property TxtComplementaire: WideString dispid 136;
    property Ressource: IBIRessource dispid 137;
    property CompteA: IBOCompteA3 dispid 216;
    property FactoryDocumentLigneLienCM: IBITypeObjectFactory readonly dispid 138;
    property DO_Date: TDateTime dispid 139;
    property LS_ComplementOut: WideString readonly dispid 140;
    function MoveUp: WordBool; dispid 141;
    function MoveDown: WordBool; dispid 142;
    procedure WriteBefore(const pNextLigne: IBODocumentLigne3); dispid 143;
    procedure WriteDefaultBefore(const pNextLigne: IBODocumentLigne3); dispid 144;
    procedure SetRessourceDefault(const pRessource: IBIRessource); dispid 145;
    property DL_PieceOFProd: Integer dispid 146;
    property DL_Operation: WideString dispid 147;
    property DefaultCMUP: Double readonly dispid 148;
    procedure WriteTransact; dispid 149;
    procedure WriteDefaultTransact; dispid 150;
    procedure WriteCumulLot; dispid 151;
    procedure SetEmplacementEntree(const pDepotEmpl: IBODepotEmplacement); dispid 152;
    function HasEmplacementEntree: WordBool; dispid 153;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IBOInfoComplementDocligneFactory
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {16A87393-CBB3-48B9-8D49-6F6FD93A4EFA}
// *********************************************************************//
  IBOInfoComplementDocligneFactory = interface(IBITypeObjectFactory)
    ['{16A87393-CBB3-48B9-8D49-6F6FD93A4EFA}']
    function ExistCode(const sCode: WideString): WordBool; safecall;
    function ReadCode(const sCode: WideString): IBOInfoComplementDocligne; safecall;
  end;

// *********************************************************************//
// DispIntf :    IBOInfoComplementDocligneFactoryDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {16A87393-CBB3-48B9-8D49-6F6FD93A4EFA}
// *********************************************************************//
  IBOInfoComplementDocligneFactoryDisp = dispinterface
    ['{16A87393-CBB3-48B9-8D49-6F6FD93A4EFA}']
    function ExistCode(const sCode: WideString): WordBool; dispid 11;
    function ReadCode(const sCode: WideString): IBOInfoComplementDocligne; dispid 12;
    property List: IBICollection readonly dispid 1;
    function Create: IBIPersistObject; dispid 2;
    function Read(const pOID: IBIObjectID): IBIPersistObject; dispid 3;
    function _QuerySynchro(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                           TypeExtraction: SynchroExtractType): IBICollection; dispid 4;
    function _QuerySynchroRemoved(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                                  TypeExtraction: SynchroExtractType): IBICollectionDispatch; dispid 5;
    function ReadFrom(const pStream: IStream): IBIPersistObject; dispid 6;
    property ListForward: IBICollection readonly dispid 7;
    function QueryPredicate(const pPredicate: IDispatch; const sSortDescriptors: WideString): IBICollection; dispid 8;
  end;

// *********************************************************************//
// Interface :   IBOInfoComplementDocligne
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {D1E80162-AFAF-4F0A-9386-AE7B2EE3AA29}
// *********************************************************************//
  IBOInfoComplementDocligne = interface(IBIPersistObject)
    ['{D1E80162-AFAF-4F0A-9386-AE7B2EE3AA29}']
    function Get_FactoryInfoComplement: IBOInfoComplementDocligneFactory; safecall;
    function Get_DC_Code: WideString; safecall;
    function Get_DC_Intitule: WideString; safecall;
    function Get_DC_Type: InfoType; safecall;
    function Get_DC_Valeur: WideString; safecall;
    procedure Set_DC_Valeur(const pValeur: WideString); safecall;
    property FactoryInfoComplement: IBOInfoComplementDocligneFactory read Get_FactoryInfoComplement;
    property DC_Code: WideString read Get_DC_Code;
    property DC_Intitule: WideString read Get_DC_Intitule;
    property DC_Type: InfoType read Get_DC_Type;
    property DC_Valeur: WideString read Get_DC_Valeur write Set_DC_Valeur;
  end;

// *********************************************************************//
// DispIntf :    IBOInfoComplementDocligneDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {D1E80162-AFAF-4F0A-9386-AE7B2EE3AA29}
// *********************************************************************//
  IBOInfoComplementDocligneDisp = dispinterface
    ['{D1E80162-AFAF-4F0A-9386-AE7B2EE3AA29}']
    property FactoryInfoComplement: IBOInfoComplementDocligneFactory readonly dispid 100;
    property DC_Code: WideString readonly dispid 102;
    property DC_Intitule: WideString readonly dispid 103;
    property DC_Type: InfoType readonly dispid 105;
    property DC_Valeur: WideString dispid 106;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IPMPreleverLot
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {8A2F1F8F-5A2F-4C8F-A683-7759D2E4C2A8}
// *********************************************************************//
  IPMPreleverLot = interface(IPMProcess)
    ['{8A2F1F8F-5A2F-4C8F-A683-7759D2E4C2A8}']
    function Get_LigneOrigine: IBODocumentVenteLigne3; safecall;
    procedure Set_LigneOrigine(const pLigne: IBODocumentVenteLigne3); safecall;
    function Get_UserLots: IBICollectionDispatch; safecall;
    function Get_QteARepartir: Double; safecall;
    function Get_QteRestantARepartir: Double; safecall;
    function Get_ListLignesResult: IBICollection; safecall;
    property LigneOrigine: IBODocumentVenteLigne3 read Get_LigneOrigine write Set_LigneOrigine;
    property UserLots: IBICollectionDispatch read Get_UserLots;
    property QteARepartir: Double read Get_QteARepartir;
    property QteRestantARepartir: Double read Get_QteRestantARepartir;
    property ListLignesResult: IBICollection read Get_ListLignesResult;
  end;

// *********************************************************************//
// DispIntf :    IPMPreleverLotDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {8A2F1F8F-5A2F-4C8F-A683-7759D2E4C2A8}
// *********************************************************************//
  IPMPreleverLotDisp = dispinterface
    ['{8A2F1F8F-5A2F-4C8F-A683-7759D2E4C2A8}']
    property LigneOrigine: IBODocumentVenteLigne3 dispid 100;
    property UserLots: IBICollectionDispatch readonly dispid 110;
    property QteARepartir: Double readonly dispid 105;
    property QteRestantARepartir: Double readonly dispid 106;
    property ListLignesResult: IBICollection readonly dispid 107;
    procedure Process; dispid 10;
    property CanProcess: WordBool readonly dispid 11;
    property Errors: IFailInfoCol readonly dispid 12;
    property Transactional: WordBool dispid 13;
  end;

// *********************************************************************//
// Interface :   IPMDocTransferer
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {986E664D-F4E2-4FFC-BC6A-C0747BA72BF0}
// *********************************************************************//
  IPMDocTransferer = interface(IPMProcess)
    ['{986E664D-F4E2-4FFC-BC6A-C0747BA72BF0}']
    function Get_Document: IBODocumentStock3; safecall;
    procedure Set_Document(const pDocument: IBODocumentStock3); safecall;
    procedure SetDefaultArticle(const pArticle: IBOArticle3; QteTransfert: Double); safecall;
    procedure SetDefaultArticleMonoGamme(const pEnum: IBOArticleGammeEnum3; QteTransfert: Double); safecall;
    procedure SetDefaultArticleDoubleGamme(const pEnum1: IBOArticleGammeEnum3; 
                                           const pEnum2: IBOArticleGammeEnum3; QteTransfert: Double); safecall;
    function Get_UserLotsQteRestantAFournir: Double; safecall;
    function Get_UserLotsToUse: IBICollectionDispatch; safecall;
    function Get_DepotEmplOrigine: IBODepotEmplacement; safecall;
    procedure Set_DepotEmplOrigine(const DepotEmpl: IBODepotEmplacement); safecall;
    function Get_DepotEmplDest: IBODepotEmplacement; safecall;
    procedure Set_DepotEmplDest(const DepotEmpl: IBODepotEmplacement); safecall;
    function Get_ListLignesResult: IBICollection; safecall;
    function Get_UserEmplacementsOrigineToUse: IBICollectionDispatch; safecall;
    function Get_NoSerie: WideString; safecall;
    procedure SetDefaultArticleNumeroSerie(const pArticle: IBOArticle3; QteTransfert: Double; 
                                           const sNumSerie: WideString; 
                                           const pDepotEmpl: IBODepotEmplacement); safecall;
    function Get_ComplementSerie: WideString; safecall;
    procedure Set_ComplementSerie(const pName: WideString); safecall;
    property Document: IBODocumentStock3 read Get_Document write Set_Document;
    property UserLotsQteRestantAFournir: Double read Get_UserLotsQteRestantAFournir;
    property UserLotsToUse: IBICollectionDispatch read Get_UserLotsToUse;
    property DepotEmplOrigine: IBODepotEmplacement read Get_DepotEmplOrigine write Set_DepotEmplOrigine;
    property DepotEmplDest: IBODepotEmplacement read Get_DepotEmplDest write Set_DepotEmplDest;
    property ListLignesResult: IBICollection read Get_ListLignesResult;
    property UserEmplacementsOrigineToUse: IBICollectionDispatch read Get_UserEmplacementsOrigineToUse;
    property NoSerie: WideString read Get_NoSerie;
    property ComplementSerie: WideString read Get_ComplementSerie write Set_ComplementSerie;
  end;

// *********************************************************************//
// DispIntf :    IPMDocTransfererDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {986E664D-F4E2-4FFC-BC6A-C0747BA72BF0}
// *********************************************************************//
  IPMDocTransfererDisp = dispinterface
    ['{986E664D-F4E2-4FFC-BC6A-C0747BA72BF0}']
    property Document: IBODocumentStock3 dispid 100;
    procedure SetDefaultArticle(const pArticle: IBOArticle3; QteTransfert: Double); dispid 101;
    procedure SetDefaultArticleMonoGamme(const pEnum: IBOArticleGammeEnum3; QteTransfert: Double); dispid 102;
    procedure SetDefaultArticleDoubleGamme(const pEnum1: IBOArticleGammeEnum3; 
                                           const pEnum2: IBOArticleGammeEnum3; QteTransfert: Double); dispid 103;
    property UserLotsQteRestantAFournir: Double readonly dispid 104;
    property UserLotsToUse: IBICollectionDispatch readonly dispid 105;
    property DepotEmplOrigine: IBODepotEmplacement dispid 106;
    property DepotEmplDest: IBODepotEmplacement dispid 107;
    property ListLignesResult: IBICollection readonly dispid 108;
    property UserEmplacementsOrigineToUse: IBICollectionDispatch readonly dispid 109;
    property NoSerie: WideString readonly dispid 110;
    procedure SetDefaultArticleNumeroSerie(const pArticle: IBOArticle3; QteTransfert: Double; 
                                           const sNumSerie: WideString; 
                                           const pDepotEmpl: IBODepotEmplacement); dispid 111;
    property ComplementSerie: WideString dispid 114;
    procedure Process; dispid 10;
    property CanProcess: WordBool readonly dispid 11;
    property Errors: IFailInfoCol readonly dispid 12;
    property Transactional: WordBool dispid 13;
  end;

// *********************************************************************//
// Interface :   IBOArticleDepotLotAllFactory
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {CD93656D-E510-48EA-ABBD-0C5E39D72F8D}
// *********************************************************************//
  IBOArticleDepotLotAllFactory = interface(IBITypeObjectFactory)
    ['{CD93656D-E510-48EA-ABBD-0C5E39D72F8D}']
    function Get_InfoLibreFields: IBIFields; safecall;
    function _QuerySynchroOID(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                              TypeExtraction: SynchroExtractType): IBICollectionDispatch; safecall;
    procedure CreateInfoLibre(const sName: WideString; sType: eTypeInfoLibre; ilength: Smallint); safecall;
    property InfoLibreFields: IBIFields read Get_InfoLibreFields;
  end;

// *********************************************************************//
// DispIntf :    IBOArticleDepotLotAllFactoryDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {CD93656D-E510-48EA-ABBD-0C5E39D72F8D}
// *********************************************************************//
  IBOArticleDepotLotAllFactoryDisp = dispinterface
    ['{CD93656D-E510-48EA-ABBD-0C5E39D72F8D}']
    property InfoLibreFields: IBIFields readonly dispid 13;
    function _QuerySynchroOID(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                              TypeExtraction: SynchroExtractType): IBICollectionDispatch; dispid 14;
    procedure CreateInfoLibre(const sName: WideString; sType: eTypeInfoLibre; ilength: Smallint); dispid 15;
    property List: IBICollection readonly dispid 1;
    function Create: IBIPersistObject; dispid 2;
    function Read(const pOID: IBIObjectID): IBIPersistObject; dispid 3;
    function _QuerySynchro(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                           TypeExtraction: SynchroExtractType): IBICollection; dispid 4;
    function _QuerySynchroRemoved(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                                  TypeExtraction: SynchroExtractType): IBICollectionDispatch; dispid 5;
    function ReadFrom(const pStream: IStream): IBIPersistObject; dispid 6;
    property ListForward: IBICollection readonly dispid 7;
    function QueryPredicate(const pPredicate: IDispatch; const sSortDescriptors: WideString): IBICollection; dispid 8;
  end;

// *********************************************************************//
// Interface :   IPMDocInsererSousTotal
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {41D5325D-174A-400E-A51A-A35E1A753086}
// *********************************************************************//
  IPMDocInsererSousTotal = interface(IPMProcess)
    ['{41D5325D-174A-400E-A51A-A35E1A753086}']
    procedure AddDocumentLigne(const pLigne: IBODocumentPartLigne3); safecall;
    procedure RmvDocumentLigne(const pLigne: IBODocumentPartLigne3); safecall;
    function Get_Commentaire: WideString; safecall;
    procedure Set_Commentaire(const pName: WideString); safecall;
    function Get_LigneTotal: IBODocumentPartLigne3; safecall;
    property Commentaire: WideString read Get_Commentaire write Set_Commentaire;
    property LigneTotal: IBODocumentPartLigne3 read Get_LigneTotal;
  end;

// *********************************************************************//
// DispIntf :    IPMDocInsererSousTotalDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {41D5325D-174A-400E-A51A-A35E1A753086}
// *********************************************************************//
  IPMDocInsererSousTotalDisp = dispinterface
    ['{41D5325D-174A-400E-A51A-A35E1A753086}']
    procedure AddDocumentLigne(const pLigne: IBODocumentPartLigne3); dispid 100;
    procedure RmvDocumentLigne(const pLigne: IBODocumentPartLigne3); dispid 101;
    property Commentaire: WideString dispid 102;
    property LigneTotal: IBODocumentPartLigne3 readonly dispid 103;
    procedure Process; dispid 10;
    property CanProcess: WordBool readonly dispid 11;
    property Errors: IFailInfoCol readonly dispid 12;
    property Transactional: WordBool dispid 13;
  end;

// *********************************************************************//
// Interface :   IPMDocRecalculPrixCompose
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {EBE47850-78B8-47EF-91BC-57E8CE1865BD}
// *********************************************************************//
  IPMDocRecalculPrixCompose = interface(IPMProcess)
    ['{EBE47850-78B8-47EF-91BC-57E8CE1865BD}']
    procedure AddDocumentLigne(const pLigne: IBODocumentLigne3); safecall;
    procedure RmvDocumentLigne(const pLigne: IBODocumentLigne3); safecall;
  end;

// *********************************************************************//
// DispIntf :    IPMDocRecalculPrixComposeDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {EBE47850-78B8-47EF-91BC-57E8CE1865BD}
// *********************************************************************//
  IPMDocRecalculPrixComposeDisp = dispinterface
    ['{EBE47850-78B8-47EF-91BC-57E8CE1865BD}']
    procedure AddDocumentLigne(const pLigne: IBODocumentLigne3); dispid 100;
    procedure RmvDocumentLigne(const pLigne: IBODocumentLigne3); dispid 101;
    procedure Process; dispid 10;
    property CanProcess: WordBool readonly dispid 11;
    property Errors: IFailInfoCol readonly dispid 12;
    property Transactional: WordBool dispid 13;
  end;

// *********************************************************************//
// Interface :   IPMSortirLots
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {405385B1-E81A-4AAA-A887-6D4A5C37959B}
// *********************************************************************//
  IPMSortirLots = interface(IPMProcess)
    ['{405385B1-E81A-4AAA-A887-6D4A5C37959B}']
    function Get_LigneOrigine: IBODocumentLigne3; safecall;
    procedure SetLigneDefaultLot(const pLigne: IBODocumentLigne3; const sNumSerie: WideString; 
                                 const pDepotEmpl: IBODepotEmplacement); safecall;
    function Get_UserLots: IBICollectionDispatch; safecall;
    function Get_QteARepartir: Double; safecall;
    function Get_QteRestantARepartir: Double; safecall;
    function Get_ListLignesResult: IBICollection; safecall;
    function Get_NoSerie: WideString; safecall;
    function Get_DepotEmpl: IBODepotEmplacement; safecall;
    function Get_UserEmplacementsOrigineToUse: IBICollectionDispatch; safecall;
    function Get_ComplementSerie: WideString; safecall;
    procedure Set_ComplementSerie(const pName: WideString); safecall;
    property LigneOrigine: IBODocumentLigne3 read Get_LigneOrigine;
    property UserLots: IBICollectionDispatch read Get_UserLots;
    property QteARepartir: Double read Get_QteARepartir;
    property QteRestantARepartir: Double read Get_QteRestantARepartir;
    property ListLignesResult: IBICollection read Get_ListLignesResult;
    property NoSerie: WideString read Get_NoSerie;
    property DepotEmpl: IBODepotEmplacement read Get_DepotEmpl;
    property UserEmplacementsOrigineToUse: IBICollectionDispatch read Get_UserEmplacementsOrigineToUse;
    property ComplementSerie: WideString read Get_ComplementSerie write Set_ComplementSerie;
  end;

// *********************************************************************//
// DispIntf :    IPMSortirLotsDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {405385B1-E81A-4AAA-A887-6D4A5C37959B}
// *********************************************************************//
  IPMSortirLotsDisp = dispinterface
    ['{405385B1-E81A-4AAA-A887-6D4A5C37959B}']
    property LigneOrigine: IBODocumentLigne3 readonly dispid 100;
    procedure SetLigneDefaultLot(const pLigne: IBODocumentLigne3; const sNumSerie: WideString; 
                                 const pDepotEmpl: IBODepotEmplacement); dispid 103;
    property UserLots: IBICollectionDispatch readonly dispid 110;
    property QteARepartir: Double readonly dispid 105;
    property QteRestantARepartir: Double readonly dispid 106;
    property ListLignesResult: IBICollection readonly dispid 107;
    property NoSerie: WideString readonly dispid 111;
    property DepotEmpl: IBODepotEmplacement readonly dispid 112;
    property UserEmplacementsOrigineToUse: IBICollectionDispatch readonly dispid 113;
    property ComplementSerie: WideString dispid 114;
    procedure Process; dispid 10;
    property CanProcess: WordBool readonly dispid 11;
    property Errors: IFailInfoCol readonly dispid 12;
    property Transactional: WordBool dispid 13;
  end;

// *********************************************************************//
// Interface :   IPMConversionClient
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {C12C4498-BB23-4378-A10D-7D4A8CE9DDEC}
// *********************************************************************//
  IPMConversionClient = interface(IPMProcess)
    ['{C12C4498-BB23-4378-A10D-7D4A8CE9DDEC}']
    function Get_Prospect: IBOClient3; safecall;
    procedure Set_Prospect(const pClient: IBOClient3); safecall;
    function Get_Client: IBOClient3; safecall;
    function Get_Intitule: WideString; safecall;
    procedure Set_Intitule(const pName: WideString); safecall;
    function Get_Classement: WideString; safecall;
    procedure Set_Classement(const pName: WideString); safecall;
    function Get_NumPrinc: IBOCompteG3; safecall;
    procedure Set_NumPrinc(const pNumPrinc: IBOCompteG3); safecall;
    function Get_NumPayeur: IBOClient3; safecall;
    procedure Set_NumPayeur(const pNumPayeur: IBOClient3); safecall;
    property Prospect: IBOClient3 read Get_Prospect write Set_Prospect;
    property Client: IBOClient3 read Get_Client;
    property Intitule: WideString read Get_Intitule write Set_Intitule;
    property Classement: WideString read Get_Classement write Set_Classement;
    property NumPrinc: IBOCompteG3 read Get_NumPrinc write Set_NumPrinc;
    property NumPayeur: IBOClient3 read Get_NumPayeur write Set_NumPayeur;
  end;

// *********************************************************************//
// DispIntf :    IPMConversionClientDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {C12C4498-BB23-4378-A10D-7D4A8CE9DDEC}
// *********************************************************************//
  IPMConversionClientDisp = dispinterface
    ['{C12C4498-BB23-4378-A10D-7D4A8CE9DDEC}']
    property Prospect: IBOClient3 dispid 100;
    property Client: IBOClient3 readonly dispid 101;
    property Intitule: WideString dispid 102;
    property Classement: WideString dispid 103;
    property NumPrinc: IBOCompteG3 dispid 104;
    property NumPayeur: IBOClient3 dispid 105;
    procedure Process; dispid 10;
    property CanProcess: WordBool readonly dispid 11;
    property Errors: IFailInfoCol readonly dispid 12;
    property Transactional: WordBool dispid 13;
  end;

// *********************************************************************//
// Interface :   IBODocumentReglementFactory
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {EB19CC7E-33BD-475F-8956-4499A8465451}
// *********************************************************************//
  IBODocumentReglementFactory = interface(IBITypeObjectFactory)
    ['{EB19CC7E-33BD-475F-8956-4499A8465451}']
    function QueryTiersOrderDate(const pTiers: IBOTiersPart3): IBICollection; safecall;
    function QueryTiersNonImputeOrderDate(const pTiers: IBOTiersPart3): IBICollection; safecall;
    function QueryClientOrderDate: IBICollection; safecall;
    function QueryFournisseurOrderDate: IBICollection; safecall;
  end;

// *********************************************************************//
// DispIntf :    IBODocumentReglementFactoryDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {EB19CC7E-33BD-475F-8956-4499A8465451}
// *********************************************************************//
  IBODocumentReglementFactoryDisp = dispinterface
    ['{EB19CC7E-33BD-475F-8956-4499A8465451}']
    function QueryTiersOrderDate(const pTiers: IBOTiersPart3): IBICollection; dispid 10;
    function QueryTiersNonImputeOrderDate(const pTiers: IBOTiersPart3): IBICollection; dispid 11;
    function QueryClientOrderDate: IBICollection; dispid 12;
    function QueryFournisseurOrderDate: IBICollection; dispid 13;
    property List: IBICollection readonly dispid 1;
    function Create: IBIPersistObject; dispid 2;
    function Read(const pOID: IBIObjectID): IBIPersistObject; dispid 3;
    function _QuerySynchro(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                           TypeExtraction: SynchroExtractType): IBICollection; dispid 4;
    function _QuerySynchroRemoved(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                                  TypeExtraction: SynchroExtractType): IBICollectionDispatch; dispid 5;
    function ReadFrom(const pStream: IStream): IBIPersistObject; dispid 6;
    property ListForward: IBICollection readonly dispid 7;
    function QueryPredicate(const pPredicate: IDispatch; const sSortDescriptors: WideString): IBICollection; dispid 8;
  end;

// *********************************************************************//
// Interface :   IPMReglerEcheances
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {5859AE07-B026-4F02-8B59-05B0335D85D8}
// *********************************************************************//
  IPMReglerEcheances = interface(IPMProcess)
    ['{5859AE07-B026-4F02-8B59-05B0335D85D8}']
    function Get_Reglement: IBODocumentReglement; safecall;
    procedure Set_Reglement(const pDocumentReglement: IBODocumentReglement); safecall;
    procedure AddDocumentEcheance(const pEcheance: IBODocumentEcheance3); safecall;
    procedure AddDocumentEcheanceMontant(const pEcheance: IBODocumentEcheance3; dMontant: Double); safecall;
    procedure RmvDocumentEcheance(const pEcheance: IBODocumentEcheance3); safecall;
    function Get_ListLignesResult: IBICollection; safecall;
    property Reglement: IBODocumentReglement read Get_Reglement write Set_Reglement;
    property ListLignesResult: IBICollection read Get_ListLignesResult;
  end;

// *********************************************************************//
// DispIntf :    IPMReglerEcheancesDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {5859AE07-B026-4F02-8B59-05B0335D85D8}
// *********************************************************************//
  IPMReglerEcheancesDisp = dispinterface
    ['{5859AE07-B026-4F02-8B59-05B0335D85D8}']
    property Reglement: IBODocumentReglement dispid 101;
    procedure AddDocumentEcheance(const pEcheance: IBODocumentEcheance3); dispid 102;
    procedure AddDocumentEcheanceMontant(const pEcheance: IBODocumentEcheance3; dMontant: Double); dispid 103;
    procedure RmvDocumentEcheance(const pEcheance: IBODocumentEcheance3); dispid 104;
    property ListLignesResult: IBICollection readonly dispid 105;
    procedure Process; dispid 10;
    property CanProcess: WordBool readonly dispid 11;
    property Errors: IFailInfoCol readonly dispid 12;
    property Transactional: WordBool dispid 13;
  end;

// *********************************************************************//
// Interface :   IBODocumentReglement
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {592FBBA8-94E5-4388-B973-4F1FA16FC3B0}
// *********************************************************************//
  IBODocumentReglement = interface(IBIPersistObject)
    ['{592FBBA8-94E5-4388-B973-4F1FA16FC3B0}']
    function Get_FactoryDocumentReglement: IBODocumentReglementFactory; safecall;
    function Get_FactoryDocumentReglementEcheance: IBODocumentReglementEcheanceEcheanceFactory; safecall;
    function Get_TiersPayeur: IBOTiersPart3; safecall;
    procedure Set_TiersPayeur(const pTiers: IBOTiersPart3); safecall;
    function Get_RG_Date: TDateTime; safecall;
    procedure Set_RG_Date(pVal: TDateTime); safecall;
    function Get_RG_Reference: WideString; safecall;
    procedure Set_RG_Reference(const pVal: WideString); safecall;
    function Get_RG_Libelle: WideString; safecall;
    procedure Set_RG_Libelle(const pVal: WideString); safecall;
    function Get_RG_Montant: Double; safecall;
    procedure Set_RG_Montant(pVal: Double); safecall;
    function Get_RG_MontantDev: Double; safecall;
    procedure Set_RG_MontantDev(pVal: Double); safecall;
    function Get_Reglement: IBPReglement3; safecall;
    procedure Set_Reglement(const pReglement: IBPReglement3); safecall;
    function Get_RG_Impute: WordBool; safecall;
    function Get_RG_Compta: WordBool; safecall;
    procedure Set_RG_Compta(pVal: WordBool); safecall;
    function Get_RG_Cours: Double; safecall;
    procedure Set_RG_Cours(pVal: Double); safecall;
    function Get_Devise: IBPDevise2; safecall;
    procedure Set_Devise(const pDevise: IBPDevise2); safecall;
    function Get_Journal: IBOJournal3; safecall;
    procedure Set_Journal(const pJournal: IBOJournal3); safecall;
    function Get_CompteGContrepartie: IBOCompteG3; safecall;
    procedure Set_CompteGContrepartie(const pCompteG: IBOCompteG3); safecall;
    function Get_RG_Impaye: TDateTime; safecall;
    procedure Set_RG_Impaye(pVal: TDateTime); safecall;
    function Get_CompteG: IBOCompteG3; safecall;
    procedure Set_CompteG(const pCompteG: IBOCompteG3); safecall;
    function Get_RG_Piece: WideString; safecall;
    procedure Set_RG_Piece(const pVal: WideString); safecall;
    function Get_HasCaisse: WordBool; safecall;
    function Get_RG_Banque: WordBool; safecall;
    function Get_RG_Cloture: WordBool; safecall;
    function Get_RG_Ticket: WordBool; safecall;
    function Get_TiersPayeurOrigine: IBOTiersPart3; safecall;
    function Get_RG_DateEchCont: TDateTime; safecall;
    procedure Set_RG_DateEchCont(pVal: TDateTime); safecall;
    function Get_CompteGEcart: IBOCompteG3; safecall;
    procedure Set_CompteGEcart(const pCompteG: IBOCompteG3); safecall;
    function Get_JournalEcart: IBOJournal3; safecall;
    procedure Set_JournalEcart(const pJournal: IBOJournal3); safecall;
    function Get_RG_MontantEcart: Double; safecall;
    procedure Set_RG_MontantEcart(pVal: Double); safecall;
    function Get_RG_Valide: WordBool; safecall;
    function Get_RG_MontantCommission: Double; safecall;
    function Get_RG_MontantNet: Double; safecall;
    property FactoryDocumentReglement: IBODocumentReglementFactory read Get_FactoryDocumentReglement;
    property FactoryDocumentReglementEcheance: IBODocumentReglementEcheanceEcheanceFactory read Get_FactoryDocumentReglementEcheance;
    property TiersPayeur: IBOTiersPart3 read Get_TiersPayeur write Set_TiersPayeur;
    property RG_Date: TDateTime read Get_RG_Date write Set_RG_Date;
    property RG_Reference: WideString read Get_RG_Reference write Set_RG_Reference;
    property RG_Libelle: WideString read Get_RG_Libelle write Set_RG_Libelle;
    property RG_Montant: Double read Get_RG_Montant write Set_RG_Montant;
    property RG_MontantDev: Double read Get_RG_MontantDev write Set_RG_MontantDev;
    property Reglement: IBPReglement3 read Get_Reglement write Set_Reglement;
    property RG_Impute: WordBool read Get_RG_Impute;
    property RG_Compta: WordBool read Get_RG_Compta write Set_RG_Compta;
    property RG_Cours: Double read Get_RG_Cours write Set_RG_Cours;
    property Devise: IBPDevise2 read Get_Devise write Set_Devise;
    property Journal: IBOJournal3 read Get_Journal write Set_Journal;
    property CompteGContrepartie: IBOCompteG3 read Get_CompteGContrepartie write Set_CompteGContrepartie;
    property RG_Impaye: TDateTime read Get_RG_Impaye write Set_RG_Impaye;
    property CompteG: IBOCompteG3 read Get_CompteG write Set_CompteG;
    property RG_Piece: WideString read Get_RG_Piece write Set_RG_Piece;
    property HasCaisse: WordBool read Get_HasCaisse;
    property RG_Banque: WordBool read Get_RG_Banque;
    property RG_Cloture: WordBool read Get_RG_Cloture;
    property RG_Ticket: WordBool read Get_RG_Ticket;
    property TiersPayeurOrigine: IBOTiersPart3 read Get_TiersPayeurOrigine;
    property RG_DateEchCont: TDateTime read Get_RG_DateEchCont write Set_RG_DateEchCont;
    property CompteGEcart: IBOCompteG3 read Get_CompteGEcart write Set_CompteGEcart;
    property JournalEcart: IBOJournal3 read Get_JournalEcart write Set_JournalEcart;
    property RG_MontantEcart: Double read Get_RG_MontantEcart write Set_RG_MontantEcart;
    property RG_Valide: WordBool read Get_RG_Valide;
    property RG_MontantCommission: Double read Get_RG_MontantCommission;
    property RG_MontantNet: Double read Get_RG_MontantNet;
  end;

// *********************************************************************//
// DispIntf :    IBODocumentReglementDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {592FBBA8-94E5-4388-B973-4F1FA16FC3B0}
// *********************************************************************//
  IBODocumentReglementDisp = dispinterface
    ['{592FBBA8-94E5-4388-B973-4F1FA16FC3B0}']
    property FactoryDocumentReglement: IBODocumentReglementFactory readonly dispid 100;
    property FactoryDocumentReglementEcheance: IBODocumentReglementEcheanceEcheanceFactory readonly dispid 101;
    property TiersPayeur: IBOTiersPart3 dispid 102;
    property RG_Date: TDateTime dispid 103;
    property RG_Reference: WideString dispid 104;
    property RG_Libelle: WideString dispid 105;
    property RG_Montant: Double dispid 106;
    property RG_MontantDev: Double dispid 107;
    property Reglement: IBPReglement3 dispid 108;
    property RG_Impute: WordBool readonly dispid 109;
    property RG_Compta: WordBool dispid 110;
    property RG_Cours: Double dispid 111;
    property Devise: IBPDevise2 dispid 112;
    property Journal: IBOJournal3 dispid 113;
    property CompteGContrepartie: IBOCompteG3 dispid 114;
    property RG_Impaye: TDateTime dispid 115;
    property CompteG: IBOCompteG3 dispid 116;
    property RG_Piece: WideString dispid 117;
    property HasCaisse: WordBool readonly dispid 118;
    property RG_Banque: WordBool readonly dispid 119;
    property RG_Cloture: WordBool readonly dispid 120;
    property RG_Ticket: WordBool readonly dispid 121;
    property TiersPayeurOrigine: IBOTiersPart3 readonly dispid 122;
    property RG_DateEchCont: TDateTime dispid 123;
    property CompteGEcart: IBOCompteG3 dispid 124;
    property JournalEcart: IBOJournal3 dispid 125;
    property RG_MontantEcart: Double dispid 126;
    property RG_Valide: WordBool readonly dispid 127;
    property RG_MontantCommission: Double readonly dispid 128;
    property RG_MontantNet: Double readonly dispid 129;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IBODocumentReglementEcheanceEcheanceFactory
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {CD205E19-8AFE-4463-BBE3-612352A0B748}
// *********************************************************************//
  IBODocumentReglementEcheanceEcheanceFactory = interface(IBITypeObjectFactory)
    ['{CD205E19-8AFE-4463-BBE3-612352A0B748}']
    function ExistEcheance(const pEcheance: IBODocumentEcheance3): WordBool; safecall;
    function ReadEcheance(const pEcheance: IBODocumentEcheance3): IBODocumentReglementEcheance; safecall;
  end;

// *********************************************************************//
// DispIntf :    IBODocumentReglementEcheanceEcheanceFactoryDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {CD205E19-8AFE-4463-BBE3-612352A0B748}
// *********************************************************************//
  IBODocumentReglementEcheanceEcheanceFactoryDisp = dispinterface
    ['{CD205E19-8AFE-4463-BBE3-612352A0B748}']
    function ExistEcheance(const pEcheance: IBODocumentEcheance3): WordBool; dispid 10;
    function ReadEcheance(const pEcheance: IBODocumentEcheance3): IBODocumentReglementEcheance; dispid 11;
    property List: IBICollection readonly dispid 1;
    function Create: IBIPersistObject; dispid 2;
    function Read(const pOID: IBIObjectID): IBIPersistObject; dispid 3;
    function _QuerySynchro(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                           TypeExtraction: SynchroExtractType): IBICollection; dispid 4;
    function _QuerySynchroRemoved(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                                  TypeExtraction: SynchroExtractType): IBICollectionDispatch; dispid 5;
    function ReadFrom(const pStream: IStream): IBIPersistObject; dispid 6;
    property ListForward: IBICollection readonly dispid 7;
    function QueryPredicate(const pPredicate: IDispatch; const sSortDescriptors: WideString): IBICollection; dispid 8;
  end;

// *********************************************************************//
// Interface :   IBODocumentEcheance3
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {CEA4D379-037A-4085-8DA9-B53C1B7FB30E}
// *********************************************************************//
  IBODocumentEcheance3 = interface(IBIPersistObject)
    ['{CEA4D379-037A-4085-8DA9-B53C1B7FB30E}']
    function Get_FactoryDocumentEcheance: IBITypeObjectFactory; safecall;
    function Get_DocumentPart: IBODocumentPart3; safecall;
    function Get_DR_Date: TDateTime; safecall;
    procedure Set_DR_Date(pVal: TDateTime); safecall;
    function Get_DR_Pourcent: Double; safecall;
    procedure Set_DR_Pourcent(pVal: Double); safecall;
    function Get_DR_Montant: Double; safecall;
    procedure Set_DR_Montant(pVal: Double); safecall;
    function Get_DR_MontantDev: Double; safecall;
    procedure Set_DR_MontantDev(pVal: Double); safecall;
    function Get_Reglement: IBPReglement3; safecall;
    procedure Set_Reglement(const pReglement: IBPReglement3); safecall;
    function Get_DR_Equil: WordBool; safecall;
    function Get_DR_MontantCalcule: Double; safecall;
    function Get_DR_MontantCalculeDev: Double; safecall;
    function Get_FactoryDocumentReglementEcheance: IBODocumentReglementEcheanceReglementFactory; safecall;
    property FactoryDocumentEcheance: IBITypeObjectFactory read Get_FactoryDocumentEcheance;
    property DocumentPart: IBODocumentPart3 read Get_DocumentPart;
    property DR_Date: TDateTime read Get_DR_Date write Set_DR_Date;
    property DR_Pourcent: Double read Get_DR_Pourcent write Set_DR_Pourcent;
    property DR_Montant: Double read Get_DR_Montant write Set_DR_Montant;
    property DR_MontantDev: Double read Get_DR_MontantDev write Set_DR_MontantDev;
    property Reglement: IBPReglement3 read Get_Reglement write Set_Reglement;
    property DR_Equil: WordBool read Get_DR_Equil;
    property DR_MontantCalcule: Double read Get_DR_MontantCalcule;
    property DR_MontantCalculeDev: Double read Get_DR_MontantCalculeDev;
    property FactoryDocumentReglementEcheance: IBODocumentReglementEcheanceReglementFactory read Get_FactoryDocumentReglementEcheance;
  end;

// *********************************************************************//
// DispIntf :    IBODocumentEcheance3Disp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {CEA4D379-037A-4085-8DA9-B53C1B7FB30E}
// *********************************************************************//
  IBODocumentEcheance3Disp = dispinterface
    ['{CEA4D379-037A-4085-8DA9-B53C1B7FB30E}']
    property FactoryDocumentEcheance: IBITypeObjectFactory readonly dispid 100;
    property DocumentPart: IBODocumentPart3 readonly dispid 102;
    property DR_Date: TDateTime dispid 103;
    property DR_Pourcent: Double dispid 104;
    property DR_Montant: Double dispid 105;
    property DR_MontantDev: Double dispid 106;
    property Reglement: IBPReglement3 dispid 107;
    property DR_Equil: WordBool readonly dispid 108;
    property DR_MontantCalcule: Double readonly dispid 109;
    property DR_MontantCalculeDev: Double readonly dispid 110;
    property FactoryDocumentReglementEcheance: IBODocumentReglementEcheanceReglementFactory readonly dispid 111;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IBODocumentReglementEcheanceReglementFactory
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {532E9BB3-8DB6-41F4-8347-15E50D9F15FF}
// *********************************************************************//
  IBODocumentReglementEcheanceReglementFactory = interface(IBITypeObjectFactory)
    ['{532E9BB3-8DB6-41F4-8347-15E50D9F15FF}']
    function ExistReglement(const pReglement: IBODocumentReglement): WordBool; safecall;
    function ReadReglement(const pReglement: IBODocumentReglement): IBODocumentReglementEcheance; safecall;
  end;

// *********************************************************************//
// DispIntf :    IBODocumentReglementEcheanceReglementFactoryDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {532E9BB3-8DB6-41F4-8347-15E50D9F15FF}
// *********************************************************************//
  IBODocumentReglementEcheanceReglementFactoryDisp = dispinterface
    ['{532E9BB3-8DB6-41F4-8347-15E50D9F15FF}']
    function ExistReglement(const pReglement: IBODocumentReglement): WordBool; dispid 10;
    function ReadReglement(const pReglement: IBODocumentReglement): IBODocumentReglementEcheance; dispid 11;
    property List: IBICollection readonly dispid 1;
    function Create: IBIPersistObject; dispid 2;
    function Read(const pOID: IBIObjectID): IBIPersistObject; dispid 3;
    function _QuerySynchro(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                           TypeExtraction: SynchroExtractType): IBICollection; dispid 4;
    function _QuerySynchroRemoved(const UIDSideDistant: WideString; TypeAbonnement: Word; 
                                  TypeExtraction: SynchroExtractType): IBICollectionDispatch; dispid 5;
    function ReadFrom(const pStream: IStream): IBIPersistObject; dispid 6;
    property ListForward: IBICollection readonly dispid 7;
    function QueryPredicate(const pPredicate: IDispatch; const sSortDescriptors: WideString): IBICollection; dispid 8;
  end;

// *********************************************************************//
// Interface :   IBODocumentReglementEcheance
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {DBE7E4FD-EA13-467B-B253-A5416401A37B}
// *********************************************************************//
  IBODocumentReglementEcheance = interface(IBIPersistObject)
    ['{DBE7E4FD-EA13-467B-B253-A5416401A37B}']
    function Get_Reglement: IBODocumentReglement; safecall;
    function Get_Echeance: IBODocumentEcheance3; safecall;
    function Get_RC_Montant: Double; safecall;
    procedure Set_RC_Montant(pVal: Double); safecall;
    property Reglement: IBODocumentReglement read Get_Reglement;
    property Echeance: IBODocumentEcheance3 read Get_Echeance;
    property RC_Montant: Double read Get_RC_Montant write Set_RC_Montant;
  end;

// *********************************************************************//
// DispIntf :    IBODocumentReglementEcheanceDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {DBE7E4FD-EA13-467B-B253-A5416401A37B}
// *********************************************************************//
  IBODocumentReglementEcheanceDisp = dispinterface
    ['{DBE7E4FD-EA13-467B-B253-A5416401A37B}']
    property Reglement: IBODocumentReglement readonly dispid 101;
    property Echeance: IBODocumentEcheance3 readonly dispid 102;
    property RC_Montant: Double dispid 103;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IBPConditionnementEnum
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {19135D34-742C-4715-9200-2B7F5CF89770}
// *********************************************************************//
  IBPConditionnementEnum = interface(IBIPersistObject)
    ['{19135D34-742C-4715-9200-2B7F5CF89770}']
    function Get_Conditionnement: IBPConditionnement; safecall;
    function Get_Intitule: WideString; safecall;
    procedure Set_Intitule(const pVal: WideString); safecall;
    function Get_Quantite: Double; safecall;
    procedure Set_Quantite(pVal: Double); safecall;
    function Get_EC_EDICode: WideString; safecall;
    procedure Set_EC_EDICode(const pVal: WideString); safecall;
    property Conditionnement: IBPConditionnement read Get_Conditionnement;
    property Intitule: WideString read Get_Intitule write Set_Intitule;
    property Quantite: Double read Get_Quantite write Set_Quantite;
    property EC_EDICode: WideString read Get_EC_EDICode write Set_EC_EDICode;
  end;

// *********************************************************************//
// DispIntf :    IBPConditionnementEnumDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {19135D34-742C-4715-9200-2B7F5CF89770}
// *********************************************************************//
  IBPConditionnementEnumDisp = dispinterface
    ['{19135D34-742C-4715-9200-2B7F5CF89770}']
    property Conditionnement: IBPConditionnement readonly dispid 100;
    property Intitule: WideString dispid 101;
    property Quantite: Double dispid 102;
    property EC_EDICode: WideString dispid 103;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IBPDossier2
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {A5202655-3815-4EC7-BFD1-5D9F6C7DD656}
// *********************************************************************//
  IBPDossier2 = interface(IBIPersistObject)
    ['{A5202655-3815-4EC7-BFD1-5D9F6C7DD656}']
    function Get_FactoryDossier: IBITypeObjectFactory; safecall;
    function Get_D_RaisonSoc: WideString; safecall;
    procedure Set_D_RaisonSoc(const pVal: WideString); safecall;
    function Get_D_Profession: WideString; safecall;
    procedure Set_D_Profession(const pVal: WideString); safecall;
    function Get_Adresse: IAdresse; safecall;
    procedure Set_Adresse(const pAdresse: IAdresse); safecall;
    function Get_D_Commentaire: WideString; safecall;
    procedure Set_D_Commentaire(const pVal: WideString); safecall;
    function Get_D_Siret: WideString; safecall;
    procedure Set_D_Siret(const pVal: WideString); safecall;
    function Get_D_Ape: WideString; safecall;
    procedure Set_D_Ape(const pVal: WideString); safecall;
    function Get_D_Identifiant: WideString; safecall;
    procedure Set_D_Identifiant(const pVal: WideString); safecall;
    function Get_D_DebutExo(sElt: Smallint): TDateTime; safecall;
    procedure Set_D_DebutExo(sElt: Smallint; pVal: TDateTime); safecall;
    function Get_D_FinExo(sElt: Smallint): TDateTime; safecall;
    procedure Set_D_FinExo(sElt: Smallint; pVal: TDateTime); safecall;
    function Get_D_LgCg: Smallint; safecall;
    procedure Set_D_LgCg(pVal: Smallint); safecall;
    function Get_D_LgAn: Smallint; safecall;
    procedure Set_D_LgAn(pVal: Smallint); safecall;
    function Get_D_FormatQtes: WideString; safecall;
    procedure Set_D_FormatQtes(const pVal: WideString); safecall;
    function Get_DeviseCompte: IBPDevise2; safecall;
    procedure Set_DeviseCompte(const pDevise: IBPDevise2); safecall;
    function Get_DeviseEquivalence: IBPDevise2; safecall;
    procedure Set_DeviseEquivalence(const pDevise: IBPDevise2); safecall;
    function Get_D_NumDossier: WideString; safecall;
    procedure Set_D_NumDossier(const pVal: WideString); safecall;
    function Get_D_EMail: WideString; safecall;
    procedure Set_D_EMail(const pVal: WideString); safecall;
    function Get_D_EMailExpert: WideString; safecall;
    procedure Set_D_EMailExpert(const pVal: WideString); safecall;
    function Get_D_Expert: WideString; safecall;
    procedure Set_D_Expert(const pVal: WideString); safecall;
    function Get_Telecom: ITelecom; safecall;
    procedure Set_Telecom(const pTelecom: ITelecom); safecall;
    function Get_D_ArchivePeriod: TDateTime; safecall;
    function Get_D_CloturePeriod: TDateTime; safecall;
    function Get_D_ProtPiece: WordBool; safecall;
    procedure Set_D_ProtPiece(pVal: WordBool); safecall;
    function Get_IsExoCloture(sElt: Smallint): WordBool; safecall;
    function Get_IsInterditSommeil: WordBool; safecall;
    function Get_Exercice: IDossierExercice; safecall;
    function Get_Tiers: IDossierTiers; safecall;
    function Get_AnalytiqueIFRS: IBPAnalytique3; safecall;
    procedure Set_AnalytiqueIFRS(const pObj: IBPAnalytique3); safecall;
    function Get_D_Facebook: WideString; safecall;
    procedure Set_D_Facebook(const pVal: WideString); safecall;
    function Get_D_LinkedIn: WideString; safecall;
    procedure Set_D_LinkedIn(const pVal: WideString); safecall;
    property FactoryDossier: IBITypeObjectFactory read Get_FactoryDossier;
    property D_RaisonSoc: WideString read Get_D_RaisonSoc write Set_D_RaisonSoc;
    property D_Profession: WideString read Get_D_Profession write Set_D_Profession;
    property Adresse: IAdresse read Get_Adresse write Set_Adresse;
    property D_Commentaire: WideString read Get_D_Commentaire write Set_D_Commentaire;
    property D_Siret: WideString read Get_D_Siret write Set_D_Siret;
    property D_Ape: WideString read Get_D_Ape write Set_D_Ape;
    property D_Identifiant: WideString read Get_D_Identifiant write Set_D_Identifiant;
    property D_DebutExo[sElt: Smallint]: TDateTime read Get_D_DebutExo write Set_D_DebutExo;
    property D_FinExo[sElt: Smallint]: TDateTime read Get_D_FinExo write Set_D_FinExo;
    property D_LgCg: Smallint read Get_D_LgCg write Set_D_LgCg;
    property D_LgAn: Smallint read Get_D_LgAn write Set_D_LgAn;
    property D_FormatQtes: WideString read Get_D_FormatQtes write Set_D_FormatQtes;
    property DeviseCompte: IBPDevise2 read Get_DeviseCompte write Set_DeviseCompte;
    property DeviseEquivalence: IBPDevise2 read Get_DeviseEquivalence write Set_DeviseEquivalence;
    property D_NumDossier: WideString read Get_D_NumDossier write Set_D_NumDossier;
    property D_EMail: WideString read Get_D_EMail write Set_D_EMail;
    property D_EMailExpert: WideString read Get_D_EMailExpert write Set_D_EMailExpert;
    property D_Expert: WideString read Get_D_Expert write Set_D_Expert;
    property Telecom: ITelecom read Get_Telecom write Set_Telecom;
    property D_ArchivePeriod: TDateTime read Get_D_ArchivePeriod;
    property D_CloturePeriod: TDateTime read Get_D_CloturePeriod;
    property D_ProtPiece: WordBool read Get_D_ProtPiece write Set_D_ProtPiece;
    property IsExoCloture[sElt: Smallint]: WordBool read Get_IsExoCloture;
    property IsInterditSommeil: WordBool read Get_IsInterditSommeil;
    property Exercice: IDossierExercice read Get_Exercice;
    property Tiers: IDossierTiers read Get_Tiers;
    property AnalytiqueIFRS: IBPAnalytique3 read Get_AnalytiqueIFRS write Set_AnalytiqueIFRS;
    property D_Facebook: WideString read Get_D_Facebook write Set_D_Facebook;
    property D_LinkedIn: WideString read Get_D_LinkedIn write Set_D_LinkedIn;
  end;

// *********************************************************************//
// DispIntf :    IBPDossier2Disp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {A5202655-3815-4EC7-BFD1-5D9F6C7DD656}
// *********************************************************************//
  IBPDossier2Disp = dispinterface
    ['{A5202655-3815-4EC7-BFD1-5D9F6C7DD656}']
    property FactoryDossier: IBITypeObjectFactory readonly dispid 100;
    property D_RaisonSoc: WideString dispid 101;
    property D_Profession: WideString dispid 102;
    property Adresse: IAdresse dispid 103;
    property D_Commentaire: WideString dispid 109;
    property D_Siret: WideString dispid 110;
    property D_Ape: WideString dispid 111;
    property D_Identifiant: WideString dispid 112;
    property D_DebutExo[sElt: Smallint]: TDateTime dispid 113;
    property D_FinExo[sElt: Smallint]: TDateTime dispid 114;
    property D_LgCg: Smallint dispid 115;
    property D_LgAn: Smallint dispid 116;
    property D_FormatQtes: WideString dispid 117;
    property DeviseCompte: IBPDevise2 dispid 118;
    property DeviseEquivalence: IBPDevise2 dispid 119;
    property D_NumDossier: WideString dispid 120;
    property D_EMail: WideString dispid 121;
    property D_EMailExpert: WideString dispid 122;
    property D_Expert: WideString dispid 123;
    property Telecom: ITelecom dispid 124;
    property D_ArchivePeriod: TDateTime readonly dispid 128;
    property D_CloturePeriod: TDateTime readonly dispid 129;
    property D_ProtPiece: WordBool dispid 130;
    property IsExoCloture[sElt: Smallint]: WordBool readonly dispid 131;
    property IsInterditSommeil: WordBool readonly dispid 132;
    property Exercice: IDossierExercice readonly dispid 133;
    property Tiers: IDossierTiers readonly dispid 134;
    property AnalytiqueIFRS: IBPAnalytique3 dispid 135;
    property D_Facebook: WideString dispid 136;
    property D_LinkedIn: WideString dispid 137;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IBPSoucheVente
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {F421273D-939C-4E59-9585-0471D6814506}
// *********************************************************************//
  IBPSoucheVente = interface(IBISouche)
    ['{F421273D-939C-4E59-9585-0471D6814506}']
    function Get_Journal: IBOJournal3; safecall;
    procedure Set_Journal(const pJournal: IBOJournal3); safecall;
    function Get_JournalSituation: IBOJournal3; safecall;
    procedure Set_JournalSituation(const pJournal: IBOJournal3); safecall;
    property Journal: IBOJournal3 read Get_Journal write Set_Journal;
    property JournalSituation: IBOJournal3 read Get_JournalSituation write Set_JournalSituation;
  end;

// *********************************************************************//
// DispIntf :    IBPSoucheVenteDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {F421273D-939C-4E59-9585-0471D6814506}
// *********************************************************************//
  IBPSoucheVenteDisp = dispinterface
    ['{F421273D-939C-4E59-9585-0471D6814506}']
    property Journal: IBOJournal3 dispid 121;
    property JournalSituation: IBOJournal3 dispid 122;
    property Intitule: WideString dispid 100;
    property Domaine: DomaineType readonly dispid 101;
    property IsValide: WordBool dispid 102;
    function ReadCurrentPiece(DO_Type: DocumentType; DO_Provenance: DocumentProvenanceType): WideString; dispid 103;
    procedure WriteCurrentPiece(DO_Type: DocumentType; DO_Provenance: DocumentProvenanceType; 
                                const sVal: WideString); dispid 104;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IBPSoucheAchat
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {DD7ED7B5-8337-4443-A258-CD14BC624221}
// *********************************************************************//
  IBPSoucheAchat = interface(IBISouche)
    ['{DD7ED7B5-8337-4443-A258-CD14BC624221}']
    function Get_Journal: IBOJournal3; safecall;
    procedure Set_Journal(const pJournal: IBOJournal3); safecall;
    function Get_JournalSituation: IBOJournal3; safecall;
    procedure Set_JournalSituation(const pJournal: IBOJournal3); safecall;
    property Journal: IBOJournal3 read Get_Journal write Set_Journal;
    property JournalSituation: IBOJournal3 read Get_JournalSituation write Set_JournalSituation;
  end;

// *********************************************************************//
// DispIntf :    IBPSoucheAchatDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {DD7ED7B5-8337-4443-A258-CD14BC624221}
// *********************************************************************//
  IBPSoucheAchatDisp = dispinterface
    ['{DD7ED7B5-8337-4443-A258-CD14BC624221}']
    property Journal: IBOJournal3 dispid 121;
    property JournalSituation: IBOJournal3 dispid 122;
    property Intitule: WideString dispid 100;
    property Domaine: DomaineType readonly dispid 101;
    property IsValide: WordBool dispid 102;
    function ReadCurrentPiece(DO_Type: DocumentType; DO_Provenance: DocumentProvenanceType): WideString; dispid 103;
    procedure WriteCurrentPiece(DO_Type: DocumentType; DO_Provenance: DocumentProvenanceType; 
                                const sVal: WideString); dispid 104;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IBPParamDocInterne
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {D765AB8F-E436-47FA-84E8-C997DC6B671A}
// *********************************************************************//
  IBPParamDocInterne = interface(IBIParamDoc)
    ['{D765AB8F-E436-47FA-84E8-C997DC6B671A}']
    function Get_D_MvtStock: DocumentInterneMvtType; safecall;
    procedure Set_D_MvtStock(pVal: DocumentInterneMvtType); safecall;
    function Get_DefaultDepot: IBODepot3; safecall;
    procedure Set_DefaultDepot(const pObject: IBODepot3); safecall;
    property D_MvtStock: DocumentInterneMvtType read Get_D_MvtStock write Set_D_MvtStock;
    property DefaultDepot: IBODepot3 read Get_DefaultDepot write Set_DefaultDepot;
  end;

// *********************************************************************//
// DispIntf :    IBPParamDocInterneDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {D765AB8F-E436-47FA-84E8-C997DC6B671A}
// *********************************************************************//
  IBPParamDocInterneDisp = dispinterface
    ['{D765AB8F-E436-47FA-84E8-C997DC6B671A}']
    property D_MvtStock: DocumentInterneMvtType dispid 121;
    property DefaultDepot: IBODepot3 dispid 122;
    property Intitule: WideString dispid 100;
    property Domaine: DomaineType readonly dispid 101;
    property DO_Type: DocumentType readonly dispid 102;
    property DO_Provenance: DocumentProvenanceType readonly dispid 103;
    property Validation[sElt: Smallint]: WordBool dispid 104;
    property DefaultSouche: IBISouche dispid 105;
    function ReadCurrentPiece(const pSouche: IBISouche): WideString; dispid 106;
    property ValidationStr[sElt: Smallint]: WideString dispid 107;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IBPDossierCial
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {A89B56F5-26F8-4A6E-8A14-76AA6560F759}
// *********************************************************************//
  IBPDossierCial = interface(IBIPersistObject)
    ['{A89B56F5-26F8-4A6E-8A14-76AA6560F759}']
    function Get_FactoryDossier: IBITypeObjectFactory; safecall;
    function Get_D_RaisonS: WideString; safecall;
    procedure Set_D_RaisonS(const pVal: WideString); safecall;
    function Get_D_FormatQte: WideString; safecall;
    procedure Set_D_FormatQte(const pVal: WideString); safecall;
    function Get_D_FormatPrix: WideString; safecall;
    procedure Set_D_FormatPrix(const pVal: WideString); safecall;
    function Get_DeviseCompte: IBPDevise2; safecall;
    procedure Set_DeviseCompte(const pDevise: IBPDevise2); safecall;
    function Get_DeviseEquivalence: IBPDevise2; safecall;
    procedure Set_DeviseEquivalence(const pDevise: IBPDevise2); safecall;
    function Get_D_ArchivePeriod: TDateTime; safecall;
    function Get_D_ValiditePeriod: Smallint; safecall;
    procedure Set_D_ValiditePeriod(pVal: Smallint); safecall;
    function Get_D_DerniereCloture: TDateTime; safecall;
    property FactoryDossier: IBITypeObjectFactory read Get_FactoryDossier;
    property D_RaisonS: WideString read Get_D_RaisonS write Set_D_RaisonS;
    property D_FormatQte: WideString read Get_D_FormatQte write Set_D_FormatQte;
    property D_FormatPrix: WideString read Get_D_FormatPrix write Set_D_FormatPrix;
    property DeviseCompte: IBPDevise2 read Get_DeviseCompte write Set_DeviseCompte;
    property DeviseEquivalence: IBPDevise2 read Get_DeviseEquivalence write Set_DeviseEquivalence;
    property D_ArchivePeriod: TDateTime read Get_D_ArchivePeriod;
    property D_ValiditePeriod: Smallint read Get_D_ValiditePeriod write Set_D_ValiditePeriod;
    property D_DerniereCloture: TDateTime read Get_D_DerniereCloture;
  end;

// *********************************************************************//
// DispIntf :    IBPDossierCialDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {A89B56F5-26F8-4A6E-8A14-76AA6560F759}
// *********************************************************************//
  IBPDossierCialDisp = dispinterface
    ['{A89B56F5-26F8-4A6E-8A14-76AA6560F759}']
    property FactoryDossier: IBITypeObjectFactory readonly dispid 100;
    property D_RaisonS: WideString dispid 101;
    property D_FormatQte: WideString dispid 102;
    property D_FormatPrix: WideString dispid 103;
    property DeviseCompte: IBPDevise2 dispid 104;
    property DeviseEquivalence: IBPDevise2 dispid 105;
    property D_ArchivePeriod: TDateTime readonly dispid 106;
    property D_ValiditePeriod: Smallint dispid 107;
    property D_DerniereCloture: TDateTime readonly dispid 108;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IBPDossierParamCial
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {9AF841CA-59E6-4EAC-95B7-B9B8F48A3EE7}
// *********************************************************************//
  IBPDossierParamCial = interface(IBIPersistObject)
    ['{9AF841CA-59E6-4EAC-95B7-B9B8F48A3EE7}']
    function Get_FactoryDossierParam: IBITypeObjectFactory; safecall;
    function Get_AnalytiqueArticle: IBPAnalytique3; safecall;
    procedure Set_AnalytiqueArticle(const pAnalytique: IBPAnalytique3); safecall;
    function Get_AnalytiqueAffaire: IBPAnalytique3; safecall;
    procedure Set_AnalytiqueAffaire(const pAnalytique: IBPAnalytique3); safecall;
    function Get_Emplacement_IsMulti: WordBool; safecall;
    function Get_Emplacement_PrioriteDestockage: DossierParamEmplacementPriorite; safecall;
    procedure Set_Emplacement_PrioriteDestockage(pVal: DossierParamEmplacementPriorite); safecall;
    function Get_Emplacement_CanBeControle: WordBool; safecall;
    procedure Set_Emplacement_CanBeControle(pVal: WordBool); safecall;
    function Get_IsInterditSommeil: WordBool; safecall;
    function Get_DebutExercice: TDateTime; safecall;
    function Get_FinExercice: TDateTime; safecall;
    function Get_DebutExerciceFirst: TDateTime; safecall;
    function Get_FinExerciceFirst: TDateTime; safecall;
    function Get_TypeZoneSerie: DossierParamTypeZone; safecall;
    procedure Set_TypeZoneSerie(pVal: DossierParamTypeZone); safecall;
    function Get_TypeZoneComplement: DossierParamTypeZone; safecall;
    procedure Set_TypeZoneComplement(pVal: DossierParamTypeZone); safecall;
    property FactoryDossierParam: IBITypeObjectFactory read Get_FactoryDossierParam;
    property AnalytiqueArticle: IBPAnalytique3 read Get_AnalytiqueArticle write Set_AnalytiqueArticle;
    property AnalytiqueAffaire: IBPAnalytique3 read Get_AnalytiqueAffaire write Set_AnalytiqueAffaire;
    property Emplacement_IsMulti: WordBool read Get_Emplacement_IsMulti;
    property Emplacement_PrioriteDestockage: DossierParamEmplacementPriorite read Get_Emplacement_PrioriteDestockage write Set_Emplacement_PrioriteDestockage;
    property Emplacement_CanBeControle: WordBool read Get_Emplacement_CanBeControle write Set_Emplacement_CanBeControle;
    property IsInterditSommeil: WordBool read Get_IsInterditSommeil;
    property DebutExercice: TDateTime read Get_DebutExercice;
    property FinExercice: TDateTime read Get_FinExercice;
    property DebutExerciceFirst: TDateTime read Get_DebutExerciceFirst;
    property FinExerciceFirst: TDateTime read Get_FinExerciceFirst;
    property TypeZoneSerie: DossierParamTypeZone read Get_TypeZoneSerie write Set_TypeZoneSerie;
    property TypeZoneComplement: DossierParamTypeZone read Get_TypeZoneComplement write Set_TypeZoneComplement;
  end;

// *********************************************************************//
// DispIntf :    IBPDossierParamCialDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {9AF841CA-59E6-4EAC-95B7-B9B8F48A3EE7}
// *********************************************************************//
  IBPDossierParamCialDisp = dispinterface
    ['{9AF841CA-59E6-4EAC-95B7-B9B8F48A3EE7}']
    property FactoryDossierParam: IBITypeObjectFactory readonly dispid 100;
    property AnalytiqueArticle: IBPAnalytique3 dispid 101;
    property AnalytiqueAffaire: IBPAnalytique3 dispid 102;
    property Emplacement_IsMulti: WordBool readonly dispid 103;
    property Emplacement_PrioriteDestockage: DossierParamEmplacementPriorite dispid 104;
    property Emplacement_CanBeControle: WordBool dispid 105;
    property IsInterditSommeil: WordBool readonly dispid 106;
    property DebutExercice: TDateTime readonly dispid 107;
    property FinExercice: TDateTime readonly dispid 108;
    property DebutExerciceFirst: TDateTime readonly dispid 109;
    property FinExerciceFirst: TDateTime readonly dispid 110;
    property TypeZoneSerie: DossierParamTypeZone dispid 111;
    property TypeZoneComplement: DossierParamTypeZone dispid 112;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IBPLibelleCpta
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {041ADEC3-DB1F-4CCD-BB99-A4970EFC0DE9}
// *********************************************************************//
  IBPLibelleCpta = interface(IBIPersistObject)
    ['{041ADEC3-DB1F-4CCD-BB99-A4970EFC0DE9}']
    function Get_LangueStr(sLangueType: LangueType): WideString; safecall;
    procedure Set_LangueStr(sLangueType: LangueType; const pVal: WideString); safecall;
    property LangueStr[sLangueType: LangueType]: WideString read Get_LangueStr write Set_LangueStr;
  end;

// *********************************************************************//
// DispIntf :    IBPLibelleCptaDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {041ADEC3-DB1F-4CCD-BB99-A4970EFC0DE9}
// *********************************************************************//
  IBPLibelleCptaDisp = dispinterface
    ['{041ADEC3-DB1F-4CCD-BB99-A4970EFC0DE9}']
    property LangueStr[sLangueType: LangueType]: WideString dispid 101;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IBOTiersReglement3
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {DCE180EC-1F59-47C0-AAE7-56C2A1CEC8DE}
// *********************************************************************//
  IBOTiersReglement3 = interface(IBIReglement)
    ['{DCE180EC-1F59-47C0-AAE7-56C2A1CEC8DE}']
    function Get_FactoryTiersReglement: IBITypeObjectFactory; safecall;
    function Get_Tiers: IBOTiers3; safecall;
    property FactoryTiersReglement: IBITypeObjectFactory read Get_FactoryTiersReglement;
    property Tiers: IBOTiers3 read Get_Tiers;
  end;

// *********************************************************************//
// DispIntf :    IBOTiersReglement3Disp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {DCE180EC-1F59-47C0-AAE7-56C2A1CEC8DE}
// *********************************************************************//
  IBOTiersReglement3Disp = dispinterface
    ['{DCE180EC-1F59-47C0-AAE7-56C2A1CEC8DE}']
    property FactoryTiersReglement: IBITypeObjectFactory readonly dispid 200;
    property Tiers: IBOTiers3 readonly dispid 201;
    property Reglement: IBPReglement3 dispid 100;
    property Condition: ReglementConditionType dispid 101;
    property NbJour: Smallint dispid 102;
    property JourTb[sElt: Smallint]: Smallint dispid 103;
    property TRepart: ReglementRepartitionType dispid 104;
    property VRepart: Double dispid 105;
    function Echeance(dDate: TDateTime): TDateTime; dispid 106;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IBOTiersContact3
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {AA5F6996-2DAE-4E36-9A51-26BFD1457CB9}
// *********************************************************************//
  IBOTiersContact3 = interface(IBIContact2)
    ['{AA5F6996-2DAE-4E36-9A51-26BFD1457CB9}']
    function Get_FactoryTiersContact: IBITypeObjectFactory; safecall;
    function Get_Tiers: IBOTiers3; safecall;
    property FactoryTiersContact: IBITypeObjectFactory read Get_FactoryTiersContact;
    property Tiers: IBOTiers3 read Get_Tiers;
  end;

// *********************************************************************//
// DispIntf :    IBOTiersContact3Disp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {AA5F6996-2DAE-4E36-9A51-26BFD1457CB9}
// *********************************************************************//
  IBOTiersContact3Disp = dispinterface
    ['{AA5F6996-2DAE-4E36-9A51-26BFD1457CB9}']
    property FactoryTiersContact: IBITypeObjectFactory readonly dispid 110;
    property Tiers: IBOTiers3 readonly dispid 111;
    property Nom: WideString dispid 100;
    property Prenom: WideString dispid 101;
    property ServiceContact: IBPServiceContact dispid 102;
    property Fonction: WideString dispid 103;
    property Telecom: ITelecom dispid 104;
    property Civilite: ContactCivilite dispid 108;
    property TypeContact: IBPContact dispid 109;
    property Facebook: WideString dispid 122;
    property LinkedIn: WideString dispid 123;
    property Skype: WideString dispid 124;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IBOTiersMedia3
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {1A5D8A40-515B-47E1-A6BD-D7F5822484F5}
// *********************************************************************//
  IBOTiersMedia3 = interface(IBIMedia)
    ['{1A5D8A40-515B-47E1-A6BD-D7F5822484F5}']
    function Get_FactoryTiersMedia: IBITypeObjectFactory; safecall;
    function Get_Tiers: IBOTiers3; safecall;
    property FactoryTiersMedia: IBITypeObjectFactory read Get_FactoryTiersMedia;
    property Tiers: IBOTiers3 read Get_Tiers;
  end;

// *********************************************************************//
// DispIntf :    IBOTiersMedia3Disp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {1A5D8A40-515B-47E1-A6BD-D7F5822484F5}
// *********************************************************************//
  IBOTiersMedia3Disp = dispinterface
    ['{1A5D8A40-515B-47E1-A6BD-D7F5822484F5}']
    property FactoryTiersMedia: IBITypeObjectFactory readonly dispid 200;
    property Tiers: IBOTiers3 readonly dispid 201;
    property ME_Commentaire: WideString dispid 100;
    property ME_Fichier: WideString dispid 101;
    property ME_TypeMIME: WideString readonly dispid 102;
    property ME_Origine: WideString dispid 103;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IBOEcritureA3
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {070D4C75-2DD3-4D5D-A286-86093425C9CF}
// *********************************************************************//
  IBOEcritureA3 = interface(IBIPersistObject)
    ['{070D4C75-2DD3-4D5D-A286-86093425C9CF}']
    function Get_FactoryEcritureA: IBOEcritureAFactory2; safecall;
    function Get_Ecriture: IBOEcriture3; safecall;
    function Get_CompteA: IBOCompteA3; safecall;
    procedure Set_CompteA(const pCompteA: IBOCompteA3); safecall;
    function Get_EA_Montant: Double; safecall;
    procedure Set_EA_Montant(pVal: Double); safecall;
    function Get_EA_Quantite: Double; safecall;
    procedure Set_EA_Quantite(pVal: Double); safecall;
    property FactoryEcritureA: IBOEcritureAFactory2 read Get_FactoryEcritureA;
    property Ecriture: IBOEcriture3 read Get_Ecriture;
    property CompteA: IBOCompteA3 read Get_CompteA write Set_CompteA;
    property EA_Montant: Double read Get_EA_Montant write Set_EA_Montant;
    property EA_Quantite: Double read Get_EA_Quantite write Set_EA_Quantite;
  end;

// *********************************************************************//
// DispIntf :    IBOEcritureA3Disp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {070D4C75-2DD3-4D5D-A286-86093425C9CF}
// *********************************************************************//
  IBOEcritureA3Disp = dispinterface
    ['{070D4C75-2DD3-4D5D-A286-86093425C9CF}']
    property FactoryEcritureA: IBOEcritureAFactory2 readonly dispid 100;
    property Ecriture: IBOEcriture3 readonly dispid 101;
    property CompteA: IBOCompteA3 dispid 102;
    property EA_Montant: Double dispid 103;
    property EA_Quantite: Double dispid 104;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IBOArticleTarifQteFournisseur3
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {3B9E7020-62B3-4A9E-9B17-F646A2B2588B}
// *********************************************************************//
  IBOArticleTarifQteFournisseur3 = interface(IBIArticleTarifQte3)
    ['{3B9E7020-62B3-4A9E-9B17-F646A2B2588B}']
    function Get_FactoryArticleTarifQteFournisseur: IBITypeObjectFactory; safecall;
    function Get_Fournisseur: IBOFournisseur3; safecall;
    property FactoryArticleTarifQteFournisseur: IBITypeObjectFactory read Get_FactoryArticleTarifQteFournisseur;
    property Fournisseur: IBOFournisseur3 read Get_Fournisseur;
  end;

// *********************************************************************//
// DispIntf :    IBOArticleTarifQteFournisseur3Disp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {3B9E7020-62B3-4A9E-9B17-F646A2B2588B}
// *********************************************************************//
  IBOArticleTarifQteFournisseur3Disp = dispinterface
    ['{3B9E7020-62B3-4A9E-9B17-F646A2B2588B}']
    property FactoryArticleTarifQteFournisseur: IBITypeObjectFactory readonly dispid 120;
    property Fournisseur: IBOFournisseur3 readonly dispid 121;
    property Article: IBOArticle3 readonly dispid 100;
    property ArticleTarif: IBIArticleTarif3 readonly dispid 101;
    property BorneSup: Double dispid 102;
    property Remise: IRemise2 dispid 103;
    property PrixNet: Double dispid 104;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IBOArticleTarifGammeFournisseur3
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {ADD705FD-9C81-492E-BD20-A38B5B05101E}
// *********************************************************************//
  IBOArticleTarifGammeFournisseur3 = interface(IBIArticleTarifGamme3)
    ['{ADD705FD-9C81-492E-BD20-A38B5B05101E}']
    function Get_FactoryArticleTarifGammeFournisseur: IBITypeObjectFactory; safecall;
    function Get_Fournisseur: IBOFournisseur3; safecall;
    function Get_TG_Ref: WideString; safecall;
    procedure Set_TG_Ref(const pVal: WideString); safecall;
    function Get_TG_CodeBarre: WideString; safecall;
    procedure Set_TG_CodeBarre(const pVal: WideString); safecall;
    property FactoryArticleTarifGammeFournisseur: IBITypeObjectFactory read Get_FactoryArticleTarifGammeFournisseur;
    property Fournisseur: IBOFournisseur3 read Get_Fournisseur;
    property TG_Ref: WideString read Get_TG_Ref write Set_TG_Ref;
    property TG_CodeBarre: WideString read Get_TG_CodeBarre write Set_TG_CodeBarre;
  end;

// *********************************************************************//
// DispIntf :    IBOArticleTarifGammeFournisseur3Disp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {ADD705FD-9C81-492E-BD20-A38B5B05101E}
// *********************************************************************//
  IBOArticleTarifGammeFournisseur3Disp = dispinterface
    ['{ADD705FD-9C81-492E-BD20-A38B5B05101E}']
    property FactoryArticleTarifGammeFournisseur: IBITypeObjectFactory readonly dispid 120;
    property Fournisseur: IBOFournisseur3 readonly dispid 121;
    property TG_Ref: WideString dispid 122;
    property TG_CodeBarre: WideString dispid 123;
    property Article: IBOArticle3 readonly dispid 100;
    property ArticleTarif: IBIArticleTarif3 readonly dispid 101;
    property ArticleGammeEnum1: IBOArticleGammeEnum3 dispid 102;
    property ArticleGammeEnum2: IBOArticleGammeEnum3 dispid 103;
    property Prix: Double dispid 104;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IBOArticleMedia3
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {D930E138-156E-4DFA-92F8-42A986242C6D}
// *********************************************************************//
  IBOArticleMedia3 = interface(IBIMedia)
    ['{D930E138-156E-4DFA-92F8-42A986242C6D}']
    function Get_FactoryArticleMedia: IBITypeObjectFactory; safecall;
    function Get_Article: IBOArticle3; safecall;
    property FactoryArticleMedia: IBITypeObjectFactory read Get_FactoryArticleMedia;
    property Article: IBOArticle3 read Get_Article;
  end;

// *********************************************************************//
// DispIntf :    IBOArticleMedia3Disp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {D930E138-156E-4DFA-92F8-42A986242C6D}
// *********************************************************************//
  IBOArticleMedia3Disp = dispinterface
    ['{D930E138-156E-4DFA-92F8-42A986242C6D}']
    property FactoryArticleMedia: IBITypeObjectFactory readonly dispid 200;
    property Article: IBOArticle3 readonly dispid 201;
    property ME_Commentaire: WideString dispid 100;
    property ME_Fichier: WideString dispid 101;
    property ME_TypeMIME: WideString readonly dispid 102;
    property ME_Origine: WideString dispid 103;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IBOArticleGammeEnumRef3
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {9295FEC0-B808-492D-A768-0207A1364732}
// *********************************************************************//
  IBOArticleGammeEnumRef3 = interface(IBIPersistObject)
    ['{9295FEC0-B808-492D-A768-0207A1364732}']
    function Get_FactoryArticleGammeEnumRef: IBITypeObjectFactory; safecall;
    function Get_ArticleGammeEnum1: IBOArticleGammeEnum3; safecall;
    function Get_ArticleGammeEnum2: IBOArticleGammeEnum3; safecall;
    function Get_Article: IBOArticle3; safecall;
    function Get_AE_Ref: WideString; safecall;
    procedure Set_AE_Ref(const pVal: WideString); safecall;
    function Get_AE_PrixAch: Double; safecall;
    procedure Set_AE_PrixAch(pVal: Double); safecall;
    function Get_AE_CodeBarre: WideString; safecall;
    procedure Set_AE_CodeBarre(const pVal: WideString); safecall;
    function Get_AR_PUNet: Double; safecall;
    procedure Set_AR_PUNet(pVal: Double); safecall;
    function Get_AR_CoutStd: Double; safecall;
    procedure Set_AR_CoutStd(pVal: Double); safecall;
    function Get_AE_Sommeil: WordBool; safecall;
    procedure Set_AE_Sommeil(pVal: WordBool); safecall;
    property FactoryArticleGammeEnumRef: IBITypeObjectFactory read Get_FactoryArticleGammeEnumRef;
    property ArticleGammeEnum1: IBOArticleGammeEnum3 read Get_ArticleGammeEnum1;
    property ArticleGammeEnum2: IBOArticleGammeEnum3 read Get_ArticleGammeEnum2;
    property Article: IBOArticle3 read Get_Article;
    property AE_Ref: WideString read Get_AE_Ref write Set_AE_Ref;
    property AE_PrixAch: Double read Get_AE_PrixAch write Set_AE_PrixAch;
    property AE_CodeBarre: WideString read Get_AE_CodeBarre write Set_AE_CodeBarre;
    property AR_PUNet: Double read Get_AR_PUNet write Set_AR_PUNet;
    property AR_CoutStd: Double read Get_AR_CoutStd write Set_AR_CoutStd;
    property AE_Sommeil: WordBool read Get_AE_Sommeil write Set_AE_Sommeil;
  end;

// *********************************************************************//
// DispIntf :    IBOArticleGammeEnumRef3Disp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {9295FEC0-B808-492D-A768-0207A1364732}
// *********************************************************************//
  IBOArticleGammeEnumRef3Disp = dispinterface
    ['{9295FEC0-B808-492D-A768-0207A1364732}']
    property FactoryArticleGammeEnumRef: IBITypeObjectFactory readonly dispid 100;
    property ArticleGammeEnum1: IBOArticleGammeEnum3 readonly dispid 101;
    property ArticleGammeEnum2: IBOArticleGammeEnum3 readonly dispid 102;
    property Article: IBOArticle3 readonly dispid 103;
    property AE_Ref: WideString dispid 104;
    property AE_PrixAch: Double dispid 105;
    property AE_CodeBarre: WideString dispid 106;
    property AR_PUNet: Double dispid 107;
    property AR_CoutStd: Double dispid 108;
    property AE_Sommeil: WordBool dispid 109;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IBOArticleNomenclature3
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {2D056C64-66BA-453E-A0ED-EC5DB6FFC189}
// *********************************************************************//
  IBOArticleNomenclature3 = interface(IBIPersistObject)
    ['{2D056C64-66BA-453E-A0ED-EC5DB6FFC189}']
    function Get_FactoryArticleNomenclature: IBITypeObjectFactory; safecall;
    function Get_Article: IBOArticle3; safecall;
    function Get_ArticleComposant: IBOArticle3; safecall;
    procedure Set_ArticleComposant(const pArticle: IBOArticle3); safecall;
    function Get_ArticleGammeEnum1: IBOArticleGammeEnum3; safecall;
    procedure Set_ArticleGammeEnum1(const pArticleGammeEnum: IBOArticleGammeEnum3); safecall;
    function Get_ArticleGammeEnum2: IBOArticleGammeEnum3; safecall;
    procedure Set_ArticleGammeEnum2(const pArticleGammeEnum: IBOArticleGammeEnum3); safecall;
    function Get_NO_Qte: Double; safecall;
    procedure Set_NO_Qte(pVal: Double); safecall;
    function Get_NO_Type: ComposantType; safecall;
    procedure Set_NO_Type(pVal: ComposantType); safecall;
    function Get_NO_Repartition: Double; safecall;
    procedure Set_NO_Repartition(pVal: Double); safecall;
    function Get_NO_Operation: WideString; safecall;
    procedure Set_NO_Operation(const pVal: WideString); safecall;
    function Get_NO_Commentaire: WideString; safecall;
    procedure Set_NO_Commentaire(const pVal: WideString); safecall;
    function Get_Depot: IBODepot3; safecall;
    procedure Set_Depot(const pObject: IBODepot3); safecall;
    function Get_ArticleComposeGammeEnum1: IBOArticleGammeEnum3; safecall;
    procedure Set_ArticleComposeGammeEnum1(const pArticleGammeEnum: IBOArticleGammeEnum3); safecall;
    function Get_ArticleComposeGammeEnum2: IBOArticleGammeEnum3; safecall;
    procedure Set_ArticleComposeGammeEnum2(const pArticleGammeEnum: IBOArticleGammeEnum3); safecall;
    function Get_SousTraitance: WordBool; safecall;
    procedure Set_SousTraitance(pVal: WordBool); safecall;
    function Get_ArticleCompose: IBOArticle3; safecall;
    function Get_ArticleComposantGammeEnum1: IBOArticleGammeEnum3; safecall;
    procedure Set_ArticleComposantGammeEnum1(const pArticleGammeEnum: IBOArticleGammeEnum3); safecall;
    function Get_ArticleComposantGammeEnum2: IBOArticleGammeEnum3; safecall;
    procedure Set_ArticleComposantGammeEnum2(const pArticleGammeEnum: IBOArticleGammeEnum3); safecall;
    property FactoryArticleNomenclature: IBITypeObjectFactory read Get_FactoryArticleNomenclature;
    property Article: IBOArticle3 read Get_Article;
    property ArticleComposant: IBOArticle3 read Get_ArticleComposant write Set_ArticleComposant;
    property ArticleGammeEnum1: IBOArticleGammeEnum3 read Get_ArticleGammeEnum1 write Set_ArticleGammeEnum1;
    property ArticleGammeEnum2: IBOArticleGammeEnum3 read Get_ArticleGammeEnum2 write Set_ArticleGammeEnum2;
    property NO_Qte: Double read Get_NO_Qte write Set_NO_Qte;
    property NO_Type: ComposantType read Get_NO_Type write Set_NO_Type;
    property NO_Repartition: Double read Get_NO_Repartition write Set_NO_Repartition;
    property NO_Operation: WideString read Get_NO_Operation write Set_NO_Operation;
    property NO_Commentaire: WideString read Get_NO_Commentaire write Set_NO_Commentaire;
    property Depot: IBODepot3 read Get_Depot write Set_Depot;
    property ArticleComposeGammeEnum1: IBOArticleGammeEnum3 read Get_ArticleComposeGammeEnum1 write Set_ArticleComposeGammeEnum1;
    property ArticleComposeGammeEnum2: IBOArticleGammeEnum3 read Get_ArticleComposeGammeEnum2 write Set_ArticleComposeGammeEnum2;
    property SousTraitance: WordBool read Get_SousTraitance write Set_SousTraitance;
    property ArticleCompose: IBOArticle3 read Get_ArticleCompose;
    property ArticleComposantGammeEnum1: IBOArticleGammeEnum3 read Get_ArticleComposantGammeEnum1 write Set_ArticleComposantGammeEnum1;
    property ArticleComposantGammeEnum2: IBOArticleGammeEnum3 read Get_ArticleComposantGammeEnum2 write Set_ArticleComposantGammeEnum2;
  end;

// *********************************************************************//
// DispIntf :    IBOArticleNomenclature3Disp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {2D056C64-66BA-453E-A0ED-EC5DB6FFC189}
// *********************************************************************//
  IBOArticleNomenclature3Disp = dispinterface
    ['{2D056C64-66BA-453E-A0ED-EC5DB6FFC189}']
    property FactoryArticleNomenclature: IBITypeObjectFactory readonly dispid 100;
    property Article: IBOArticle3 readonly dispid 101;
    property ArticleComposant: IBOArticle3 dispid 102;
    property ArticleGammeEnum1: IBOArticleGammeEnum3 dispid 103;
    property ArticleGammeEnum2: IBOArticleGammeEnum3 dispid 104;
    property NO_Qte: Double dispid 105;
    property NO_Type: ComposantType dispid 106;
    property NO_Repartition: Double dispid 107;
    property NO_Operation: WideString dispid 108;
    property NO_Commentaire: WideString dispid 109;
    property Depot: IBODepot3 dispid 110;
    property ArticleComposeGammeEnum1: IBOArticleGammeEnum3 dispid 111;
    property ArticleComposeGammeEnum2: IBOArticleGammeEnum3 dispid 112;
    property SousTraitance: WordBool dispid 113;
    property ArticleCompose: IBOArticle3 readonly dispid 114;
    property ArticleComposantGammeEnum1: IBOArticleGammeEnum3 dispid 115;
    property ArticleComposantGammeEnum2: IBOArticleGammeEnum3 dispid 116;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IBOArticleTarifQteClient3
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {91F61DDA-99C3-4DAD-86BE-4F630F9FCB3B}
// *********************************************************************//
  IBOArticleTarifQteClient3 = interface(IBIArticleTarifQte3)
    ['{91F61DDA-99C3-4DAD-86BE-4F630F9FCB3B}']
    function Get_FactoryArticleTarifQteClient: IBITypeObjectFactory; safecall;
    function Get_Client: IBOClient3; safecall;
    property FactoryArticleTarifQteClient: IBITypeObjectFactory read Get_FactoryArticleTarifQteClient;
    property Client: IBOClient3 read Get_Client;
  end;

// *********************************************************************//
// DispIntf :    IBOArticleTarifQteClient3Disp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {91F61DDA-99C3-4DAD-86BE-4F630F9FCB3B}
// *********************************************************************//
  IBOArticleTarifQteClient3Disp = dispinterface
    ['{91F61DDA-99C3-4DAD-86BE-4F630F9FCB3B}']
    property FactoryArticleTarifQteClient: IBITypeObjectFactory readonly dispid 120;
    property Client: IBOClient3 readonly dispid 121;
    property Article: IBOArticle3 readonly dispid 100;
    property ArticleTarif: IBIArticleTarif3 readonly dispid 101;
    property BorneSup: Double dispid 102;
    property Remise: IRemise2 dispid 103;
    property PrixNet: Double dispid 104;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IBOArticleTarifCondClient3
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {7C538B42-6E4C-4021-AE5B-25D4BD133FE5}
// *********************************************************************//
  IBOArticleTarifCondClient3 = interface(IBIArticleTarifCond3)
    ['{7C538B42-6E4C-4021-AE5B-25D4BD133FE5}']
    function Get_FactoryArticleTarifCondClient: IBITypeObjectFactory; safecall;
    function Get_Client: IBOClient3; safecall;
    property FactoryArticleTarifCondClient: IBITypeObjectFactory read Get_FactoryArticleTarifCondClient;
    property Client: IBOClient3 read Get_Client;
  end;

// *********************************************************************//
// DispIntf :    IBOArticleTarifCondClient3Disp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {7C538B42-6E4C-4021-AE5B-25D4BD133FE5}
// *********************************************************************//
  IBOArticleTarifCondClient3Disp = dispinterface
    ['{7C538B42-6E4C-4021-AE5B-25D4BD133FE5}']
    property FactoryArticleTarifCondClient: IBITypeObjectFactory readonly dispid 120;
    property Client: IBOClient3 readonly dispid 121;
    property Article: IBOArticle3 readonly dispid 100;
    property ArticleTarif: IBIArticleTarif3 readonly dispid 101;
    property ArticleCond: IBOArticleCond3 dispid 102;
    property Prix: Double dispid 103;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IBOArticleTarifGammeClient3
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {1F28C5A0-214C-4D9D-A889-28D13271889E}
// *********************************************************************//
  IBOArticleTarifGammeClient3 = interface(IBIArticleTarifGamme3)
    ['{1F28C5A0-214C-4D9D-A889-28D13271889E}']
    function Get_FactoryArticleTarifGammeClient: IBITypeObjectFactory; safecall;
    function Get_Client: IBOClient3; safecall;
    function Get_TG_Ref: WideString; safecall;
    procedure Set_TG_Ref(const pVal: WideString); safecall;
    property FactoryArticleTarifGammeClient: IBITypeObjectFactory read Get_FactoryArticleTarifGammeClient;
    property Client: IBOClient3 read Get_Client;
    property TG_Ref: WideString read Get_TG_Ref write Set_TG_Ref;
  end;

// *********************************************************************//
// DispIntf :    IBOArticleTarifGammeClient3Disp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {1F28C5A0-214C-4D9D-A889-28D13271889E}
// *********************************************************************//
  IBOArticleTarifGammeClient3Disp = dispinterface
    ['{1F28C5A0-214C-4D9D-A889-28D13271889E}']
    property FactoryArticleTarifGammeClient: IBITypeObjectFactory readonly dispid 120;
    property Client: IBOClient3 readonly dispid 121;
    property TG_Ref: WideString dispid 122;
    property Article: IBOArticle3 readonly dispid 100;
    property ArticleTarif: IBIArticleTarif3 readonly dispid 101;
    property ArticleGammeEnum1: IBOArticleGammeEnum3 dispid 102;
    property ArticleGammeEnum2: IBOArticleGammeEnum3 dispid 103;
    property Prix: Double dispid 104;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IBOArticleTarifCategorie3
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {CD62459C-9BBB-4CC1-8E15-5124022916B9}
// *********************************************************************//
  IBOArticleTarifCategorie3 = interface(IBIArticleTarifVente3)
    ['{CD62459C-9BBB-4CC1-8E15-5124022916B9}']
    function Get_FactoryArticleTarifCategorie: IBITypeObjectFactory; safecall;
    function Get_CategorieTarif: IBPCategorieTarif; safecall;
    procedure Set_CategorieTarif(const pCategorieTarif: IBPCategorieTarif); safecall;
    property FactoryArticleTarifCategorie: IBITypeObjectFactory read Get_FactoryArticleTarifCategorie;
    property CategorieTarif: IBPCategorieTarif read Get_CategorieTarif write Set_CategorieTarif;
  end;

// *********************************************************************//
// DispIntf :    IBOArticleTarifCategorie3Disp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {CD62459C-9BBB-4CC1-8E15-5124022916B9}
// *********************************************************************//
  IBOArticleTarifCategorie3Disp = dispinterface
    ['{CD62459C-9BBB-4CC1-8E15-5124022916B9}']
    property FactoryArticleTarifCategorie: IBITypeObjectFactory readonly dispid 130;
    property CategorieTarif: IBPCategorieTarif dispid 131;
    property FactoryArticleTarifCond: IBITypeObjectFactory readonly dispid 120;
    property Coefficient: Double dispid 121;
    property PrixTTC: WordBool dispid 122;
    property Arrondi: IBPArrondi dispid 123;
    property Calcul: WordBool dispid 124;
    property FactoryArticleTarifGamme: IBITypeObjectFactory readonly dispid 100;
    property FactoryArticleTarifQte: IBITypeObjectFactory readonly dispid 101;
    property Article: IBOArticle3 dispid 102;
    property Prix: Double dispid 103;
    property GammeRemise: IBPGamme dispid 104;
    property PrixDevise: Double dispid 105;
    property Devise: IBPDevise2 dispid 106;
    property Remise: IRemise2 dispid 107;
    property IsHorsRemise: WordBool dispid 108;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IBOArticleTarifQteCategorie3
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {15AAEFA4-1358-4005-8CBB-4E2386E1801E}
// *********************************************************************//
  IBOArticleTarifQteCategorie3 = interface(IBIArticleTarifQte3)
    ['{15AAEFA4-1358-4005-8CBB-4E2386E1801E}']
    function Get_FactoryArticleTarifQteCategorie: IBITypeObjectFactory; safecall;
    function Get_CategorieTarif: IBPCategorieTarif; safecall;
    property FactoryArticleTarifQteCategorie: IBITypeObjectFactory read Get_FactoryArticleTarifQteCategorie;
    property CategorieTarif: IBPCategorieTarif read Get_CategorieTarif;
  end;

// *********************************************************************//
// DispIntf :    IBOArticleTarifQteCategorie3Disp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {15AAEFA4-1358-4005-8CBB-4E2386E1801E}
// *********************************************************************//
  IBOArticleTarifQteCategorie3Disp = dispinterface
    ['{15AAEFA4-1358-4005-8CBB-4E2386E1801E}']
    property FactoryArticleTarifQteCategorie: IBITypeObjectFactory readonly dispid 130;
    property CategorieTarif: IBPCategorieTarif readonly dispid 131;
    property Article: IBOArticle3 readonly dispid 100;
    property ArticleTarif: IBIArticleTarif3 readonly dispid 101;
    property BorneSup: Double dispid 102;
    property Remise: IRemise2 dispid 103;
    property PrixNet: Double dispid 104;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IBOArticleTarifCondCategorie3
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {3A3278F2-42EC-4601-9DD1-02C93112E872}
// *********************************************************************//
  IBOArticleTarifCondCategorie3 = interface(IBIArticleTarifCond3)
    ['{3A3278F2-42EC-4601-9DD1-02C93112E872}']
    function Get_FactoryArticleTarifCondCategorie: IBITypeObjectFactory; safecall;
    function Get_CategorieTarif: IBPCategorieTarif; safecall;
    property FactoryArticleTarifCondCategorie: IBITypeObjectFactory read Get_FactoryArticleTarifCondCategorie;
    property CategorieTarif: IBPCategorieTarif read Get_CategorieTarif;
  end;

// *********************************************************************//
// DispIntf :    IBOArticleTarifCondCategorie3Disp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {3A3278F2-42EC-4601-9DD1-02C93112E872}
// *********************************************************************//
  IBOArticleTarifCondCategorie3Disp = dispinterface
    ['{3A3278F2-42EC-4601-9DD1-02C93112E872}']
    property FactoryArticleTarifCondCategorie: IBITypeObjectFactory readonly dispid 120;
    property CategorieTarif: IBPCategorieTarif readonly dispid 121;
    property Article: IBOArticle3 readonly dispid 100;
    property ArticleTarif: IBIArticleTarif3 readonly dispid 101;
    property ArticleCond: IBOArticleCond3 dispid 102;
    property Prix: Double dispid 103;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IBOArticleTarifGammeCategorie3
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {425F2822-D9A5-4E58-97B4-81495E9744A4}
// *********************************************************************//
  IBOArticleTarifGammeCategorie3 = interface(IBIArticleTarifGamme3)
    ['{425F2822-D9A5-4E58-97B4-81495E9744A4}']
    function Get_FactoryArticleTarifGammeCategorie: IBITypeObjectFactory; safecall;
    function Get_CategorieTarif: IBPCategorieTarif; safecall;
    property FactoryArticleTarifGammeCategorie: IBITypeObjectFactory read Get_FactoryArticleTarifGammeCategorie;
    property CategorieTarif: IBPCategorieTarif read Get_CategorieTarif;
  end;

// *********************************************************************//
// DispIntf :    IBOArticleTarifGammeCategorie3Disp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {425F2822-D9A5-4E58-97B4-81495E9744A4}
// *********************************************************************//
  IBOArticleTarifGammeCategorie3Disp = dispinterface
    ['{425F2822-D9A5-4E58-97B4-81495E9744A4}']
    property FactoryArticleTarifGammeCategorie: IBITypeObjectFactory readonly dispid 120;
    property CategorieTarif: IBPCategorieTarif readonly dispid 121;
    property Article: IBOArticle3 readonly dispid 100;
    property ArticleTarif: IBIArticleTarif3 readonly dispid 101;
    property ArticleGammeEnum1: IBOArticleGammeEnum3 dispid 102;
    property ArticleGammeEnum2: IBOArticleGammeEnum3 dispid 103;
    property Prix: Double dispid 104;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IBOFamilleParamCompta3
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {296446E4-C983-4082-B6E3-E9AF2555F92A}
// *********************************************************************//
  IBOFamilleParamCompta3 = interface(IBIParamCompta3)
    ['{296446E4-C983-4082-B6E3-E9AF2555F92A}']
    function Get_FactoryFamilleParamCompta: IBITypeObjectFactory; safecall;
    function Get_Famille: IBOFamille3; safecall;
    property FactoryFamilleParamCompta: IBITypeObjectFactory read Get_FactoryFamilleParamCompta;
    property Famille: IBOFamille3 read Get_Famille;
  end;

// *********************************************************************//
// DispIntf :    IBOFamilleParamCompta3Disp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {296446E4-C983-4082-B6E3-E9AF2555F92A}
// *********************************************************************//
  IBOFamilleParamCompta3Disp = dispinterface
    ['{296446E4-C983-4082-B6E3-E9AF2555F92A}']
    property FactoryFamilleParamCompta: IBITypeObjectFactory readonly dispid 120;
    property Famille: IBOFamille3 readonly dispid 121;
    property CategorieCompta: IBICategorieCompta dispid 100;
    property CompteG: IBOCompteG3 dispid 101;
    property CompteA: IBOCompteA3 dispid 102;
    property Taxe[sElt: Smallint]: IBOTaxe3 dispid 103;
    property OldTaxe[sElt: Smallint]: IBOTaxe3 dispid 104;
    property DateApplication[sElt: Smallint]: TDateTime dispid 105;
    property TaxeDateApplication[sElt: Smallint; dVal: TDateTime]: IBOTaxe3 readonly dispid 106;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IBODepotContact3
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {2ED3CFC4-616F-44C2-829F-5DE7BDD3A040}
// *********************************************************************//
  IBODepotContact3 = interface(IBIContact2)
    ['{2ED3CFC4-616F-44C2-829F-5DE7BDD3A040}']
    function Get_FactoryDepotContact: IBITypeObjectFactory; safecall;
    function Get_Depot: IBODepot3; safecall;
    property FactoryDepotContact: IBITypeObjectFactory read Get_FactoryDepotContact;
    property Depot: IBODepot3 read Get_Depot;
  end;

// *********************************************************************//
// DispIntf :    IBODepotContact3Disp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {2ED3CFC4-616F-44C2-829F-5DE7BDD3A040}
// *********************************************************************//
  IBODepotContact3Disp = dispinterface
    ['{2ED3CFC4-616F-44C2-829F-5DE7BDD3A040}']
    property FactoryDepotContact: IBITypeObjectFactory readonly dispid 120;
    property Depot: IBODepot3 readonly dispid 121;
    property Nom: WideString dispid 100;
    property Prenom: WideString dispid 101;
    property ServiceContact: IBPServiceContact dispid 102;
    property Fonction: WideString dispid 103;
    property Telecom: ITelecom dispid 104;
    property Civilite: ContactCivilite dispid 108;
    property TypeContact: IBPContact dispid 109;
    property Facebook: WideString dispid 122;
    property LinkedIn: WideString dispid 123;
    property Skype: WideString dispid 124;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IBODocumentLigneLienCM
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {5801365B-8A41-40CE-A251-1DC6A24346BE}
// *********************************************************************//
  IBODocumentLigneLienCM = interface(IBIPersistObject)
    ['{5801365B-8A41-40CE-A251-1DC6A24346BE}']
    function Get_DocumentLigneIn: IBODocumentLigne3; safecall;
    function Get_DocumentLigneOut: IBODocumentLigne3; safecall;
    function Get_Qte: Double; safecall;
    property DocumentLigneIn: IBODocumentLigne3 read Get_DocumentLigneIn;
    property DocumentLigneOut: IBODocumentLigne3 read Get_DocumentLigneOut;
    property Qte: Double read Get_Qte;
  end;

// *********************************************************************//
// DispIntf :    IBODocumentLigneLienCMDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {5801365B-8A41-40CE-A251-1DC6A24346BE}
// *********************************************************************//
  IBODocumentLigneLienCMDisp = dispinterface
    ['{5801365B-8A41-40CE-A251-1DC6A24346BE}']
    property DocumentLigneIn: IBODocumentLigne3 readonly dispid 151;
    property DocumentLigneOut: IBODocumentLigne3 readonly dispid 152;
    property Qte: Double readonly dispid 153;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IBODocumentStockLigne3
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {91CC00D3-8F8A-41ED-8F98-1B5AFB96CD7F}
// *********************************************************************//
  IBODocumentStockLigne3 = interface(IBODocumentLigne3)
    ['{91CC00D3-8F8A-41ED-8F98-1B5AFB96CD7F}']
    function Get_DocumentStock: IBODocumentStock3; safecall;
    function Get_DL_NoColis: WideString; safecall;
    procedure Set_DL_NoColis(const pVal: WideString); safecall;
    function Get_DL_TNomencl: WordBool; safecall;
    function Get_ArticleCompose: IBOArticle3; safecall;
    procedure Set_ArticleCompose(const pArticle: IBOArticle3); safecall;
    function Get_DL_DateAvancement: TDateTime; safecall;
    procedure Set_DL_DateAvancement(pVal: TDateTime); safecall;
    function Get_DO_DateFabrication: TDateTime; safecall;
    procedure Set_DO_DateFabrication(pVal: TDateTime); safecall;
    property DocumentStock: IBODocumentStock3 read Get_DocumentStock;
    property DL_NoColis: WideString read Get_DL_NoColis write Set_DL_NoColis;
    property DL_TNomencl: WordBool read Get_DL_TNomencl;
    property ArticleCompose: IBOArticle3 read Get_ArticleCompose write Set_ArticleCompose;
    property DL_DateAvancement: TDateTime read Get_DL_DateAvancement write Set_DL_DateAvancement;
    property DO_DateFabrication: TDateTime read Get_DO_DateFabrication write Set_DO_DateFabrication;
  end;

// *********************************************************************//
// DispIntf :    IBODocumentStockLigne3Disp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {91CC00D3-8F8A-41ED-8F98-1B5AFB96CD7F}
// *********************************************************************//
  IBODocumentStockLigne3Disp = dispinterface
    ['{91CC00D3-8F8A-41ED-8F98-1B5AFB96CD7F}']
    property DocumentStock: IBODocumentStock3 readonly dispid 200;
    property DL_NoColis: WideString dispid 204;
    property DL_TNomencl: WordBool readonly dispid 205;
    property ArticleCompose: IBOArticle3 dispid 206;
    property DL_DateAvancement: TDateTime dispid 207;
    property DO_DateFabrication: TDateTime dispid 208;
    property Document: IBODocument3 readonly dispid 101;
    property FactoryDocumentLigne: IBODocumentLigneFactory readonly dispid 131;
    property DO_Domaine: DomaineType readonly dispid 102;
    property DO_Type: DocumentType readonly dispid 103;
    property DO_Ref: WideString dispid 104;
    property Article: IBOArticle3 readonly dispid 105;
    property DL_Design: WideString dispid 106;
    property DL_Qte: Double dispid 107;
    property DL_PoidsNet: Double dispid 108;
    property DL_PoidsBrut: Double dispid 109;
    property DL_PrixUnitaire: Double dispid 110;
    property ArticleGammeEnum1: IBOArticleGammeEnum3 readonly dispid 111;
    property ArticleGammeEnum2: IBOArticleGammeEnum3 readonly dispid 112;
    property DL_PrixRU: Double dispid 113;
    property DL_CMUP: Double dispid 114;
    property DL_MvtStock: DocumentLigneMvtStockType readonly dispid 115;
    property EU_Enumere: WideString dispid 116;
    property EU_Qte: Double dispid 117;
    property Depot: IBODepot3 dispid 118;
    property DL_MontantHT: Double readonly dispid 119;
    property LS_NoSerie: WideString dispid 120;
    property LS_Peremption: TDateTime dispid 121;
    property LS_Fabrication: TDateTime dispid 122;
    property Valorisee: WordBool dispid 123;
    property DL_FactPoids: WordBool readonly dispid 124;
    property InfoLibre: IBIValues readonly dispid 125;
    procedure SetDefaultArticleReference(const sRef: WideString; Qte: Double); dispid 126;
    procedure SetDefaultArticle(const pArticle: IBOArticle3; Qte: Double); dispid 127;
    procedure SetDefaultArticleMonoGamme(const pEnum: IBOArticleGammeEnum3; Qte: Double); dispid 128;
    procedure SetDefaultArticleDoubleGamme(const pEnum1: IBOArticleGammeEnum3; 
                                           const pEnum2: IBOArticleGammeEnum3; Qte: Double); dispid 129;
    procedure SetDefaultArticleConditionnement(const pArtCond: IBOArticleCond3; Qte: Double); dispid 130;
    property FactoryDocumentLigneEmplacement: IBITypeObjectFactory readonly dispid 132;
    property Lot: IBOArticleDepotLot dispid 133;
    procedure SetDefaultLot(const pLot: IBOArticleDepotLot; Qte: Double); dispid 134;
    property Collaborateur: IBOCollaborateur dispid 135;
    property TxtComplementaire: WideString dispid 136;
    property Ressource: IBIRessource dispid 137;
    property CompteA: IBOCompteA3 dispid 216;
    property FactoryDocumentLigneLienCM: IBITypeObjectFactory readonly dispid 138;
    property DO_Date: TDateTime dispid 139;
    property LS_ComplementOut: WideString readonly dispid 140;
    function MoveUp: WordBool; dispid 141;
    function MoveDown: WordBool; dispid 142;
    procedure WriteBefore(const pNextLigne: IBODocumentLigne3); dispid 143;
    procedure WriteDefaultBefore(const pNextLigne: IBODocumentLigne3); dispid 144;
    procedure SetRessourceDefault(const pRessource: IBIRessource); dispid 145;
    property DL_PieceOFProd: Integer dispid 146;
    property DL_Operation: WideString dispid 147;
    property DefaultCMUP: Double readonly dispid 148;
    procedure WriteTransact; dispid 149;
    procedure WriteDefaultTransact; dispid 150;
    procedure WriteCumulLot; dispid 151;
    procedure SetEmplacementEntree(const pDepotEmpl: IBODepotEmplacement); dispid 152;
    function HasEmplacementEntree: WordBool; dispid 153;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IBODocumentAcompte3
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {6703E377-CF13-4F07-8675-FBEF6D668F46}
// *********************************************************************//
  IBODocumentAcompte3 = interface(IBIPersistObject)
    ['{6703E377-CF13-4F07-8675-FBEF6D668F46}']
    function Get_FactoryDocumentAcompte: IBITypeObjectFactory; safecall;
    function Get_DocumentPart: IBODocumentPart3; safecall;
    function Get_DR_Date: TDateTime; safecall;
    procedure Set_DR_Date(pVal: TDateTime); safecall;
    function Get_DR_Libelle: WideString; safecall;
    procedure Set_DR_Libelle(const pVal: WideString); safecall;
    function Get_DR_Montant: Double; safecall;
    procedure Set_DR_Montant(pVal: Double); safecall;
    function Get_DR_MontantDev: Double; safecall;
    procedure Set_DR_MontantDev(pVal: Double); safecall;
    function Get_Reglement: IBPReglement3; safecall;
    procedure Set_Reglement(const pReglement: IBPReglement3); safecall;
    function Get_PieceAcompte: IBODocumentPart3; safecall;
    function Get_HasPieceAcompte: WordBool; safecall;
    property FactoryDocumentAcompte: IBITypeObjectFactory read Get_FactoryDocumentAcompte;
    property DocumentPart: IBODocumentPart3 read Get_DocumentPart;
    property DR_Date: TDateTime read Get_DR_Date write Set_DR_Date;
    property DR_Libelle: WideString read Get_DR_Libelle write Set_DR_Libelle;
    property DR_Montant: Double read Get_DR_Montant write Set_DR_Montant;
    property DR_MontantDev: Double read Get_DR_MontantDev write Set_DR_MontantDev;
    property Reglement: IBPReglement3 read Get_Reglement write Set_Reglement;
    property PieceAcompte: IBODocumentPart3 read Get_PieceAcompte;
    property HasPieceAcompte: WordBool read Get_HasPieceAcompte;
  end;

// *********************************************************************//
// DispIntf :    IBODocumentAcompte3Disp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {6703E377-CF13-4F07-8675-FBEF6D668F46}
// *********************************************************************//
  IBODocumentAcompte3Disp = dispinterface
    ['{6703E377-CF13-4F07-8675-FBEF6D668F46}']
    property FactoryDocumentAcompte: IBITypeObjectFactory readonly dispid 100;
    property DocumentPart: IBODocumentPart3 readonly dispid 101;
    property DR_Date: TDateTime dispid 102;
    property DR_Libelle: WideString dispid 103;
    property DR_Montant: Double dispid 104;
    property DR_MontantDev: Double dispid 105;
    property Reglement: IBPReglement3 dispid 106;
    property PieceAcompte: IBODocumentPart3 readonly dispid 107;
    property HasPieceAcompte: WordBool readonly dispid 108;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IBODocumentAchatLigne3
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {B8FCBA5A-B91C-469A-8FE3-3BA2A3D59275}
// *********************************************************************//
  IBODocumentAchatLigne3 = interface(IBODocumentPartLigne3)
    ['{B8FCBA5A-B91C-469A-8FE3-3BA2A3D59275}']
    function Get_DocumentAchat: IBODocumentAchat3; safecall;
    function Get_Fournisseur: IBOFournisseur3; safecall;
    function Get_StockValeur: Double; safecall;
    function Get_DL_Frais: Double; safecall;
    procedure Set_DL_Frais(pVal: Double); safecall;
    procedure SetDefaultRemise; safecall;
    function Get_Valorisation: IDocLigneValorisation; safecall;
    property DocumentAchat: IBODocumentAchat3 read Get_DocumentAchat;
    property Fournisseur: IBOFournisseur3 read Get_Fournisseur;
    property StockValeur: Double read Get_StockValeur;
    property DL_Frais: Double read Get_DL_Frais write Set_DL_Frais;
    property Valorisation: IDocLigneValorisation read Get_Valorisation;
  end;

// *********************************************************************//
// DispIntf :    IBODocumentAchatLigne3Disp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {B8FCBA5A-B91C-469A-8FE3-3BA2A3D59275}
// *********************************************************************//
  IBODocumentAchatLigne3Disp = dispinterface
    ['{B8FCBA5A-B91C-469A-8FE3-3BA2A3D59275}']
    property DocumentAchat: IBODocumentAchat3 readonly dispid 300;
    property Fournisseur: IBOFournisseur3 readonly dispid 301;
    property StockValeur: Double readonly dispid 302;
    property DL_Frais: Double dispid 303;
    procedure SetDefaultRemise; dispid 304;
    property Valorisation: IDocLigneValorisation readonly dispid 305;
    property DocumentPart: IBODocumentPart3 readonly dispid 200;
    property Tiers: IBOTiersPart3 readonly dispid 201;
    property DL_DateBC: TDateTime readonly dispid 203;
    property DL_DateBL: TDateTime readonly dispid 204;
    property DL_PieceBC: WideString readonly dispid 205;
    property DL_PieceBL: WideString readonly dispid 206;
    property IsRemisePied: WordBool dispid 207;
    property IsRemiseExceptionnelle: WordBool dispid 208;
    property IsTotalisatrice: WordBool dispid 209;
    property DL_QteBC: Double dispid 210;
    property DL_QteBL: Double dispid 211;
    property Remise: IRemise2 dispid 212;
    property DL_PUBC: Double readonly dispid 213;
    property AF_RefFourniss: WideString dispid 214;
    property DL_TypePL: DocumentLigneProvenanceType readonly dispid 215;
    property DL_Escompte: WordBool readonly dispid 217;
    property DL_PUDevise: Double dispid 218;
    property DL_PUTTC: Double dispid 219;
    property DO_DateLivr: TDateTime dispid 220;
    property DL_NonLivre: WordBool readonly dispid 221;
    property DL_MontantTTC: Double readonly dispid 223;
    procedure SetDefaultArticleReferenceFournisseur(const sRef: WideString; Qte: Double); dispid 224;
    property Taxe[sElt: Smallint]: IBOTaxe3 dispid 225;
    property Document: IBODocument3 readonly dispid 101;
    property FactoryDocumentLigne: IBODocumentLigneFactory readonly dispid 131;
    property DO_Domaine: DomaineType readonly dispid 102;
    property DO_Type: DocumentType readonly dispid 103;
    property DO_Ref: WideString dispid 104;
    property Article: IBOArticle3 readonly dispid 105;
    property DL_Design: WideString dispid 106;
    property DL_Qte: Double dispid 107;
    property DL_PoidsNet: Double dispid 108;
    property DL_PoidsBrut: Double dispid 109;
    property DL_PrixUnitaire: Double dispid 110;
    property ArticleGammeEnum1: IBOArticleGammeEnum3 readonly dispid 111;
    property ArticleGammeEnum2: IBOArticleGammeEnum3 readonly dispid 112;
    property DL_PrixRU: Double dispid 113;
    property DL_CMUP: Double dispid 114;
    property DL_MvtStock: DocumentLigneMvtStockType readonly dispid 115;
    property EU_Enumere: WideString dispid 116;
    property EU_Qte: Double dispid 117;
    property Depot: IBODepot3 dispid 118;
    property DL_MontantHT: Double readonly dispid 119;
    property LS_NoSerie: WideString dispid 120;
    property LS_Peremption: TDateTime dispid 121;
    property LS_Fabrication: TDateTime dispid 122;
    property Valorisee: WordBool dispid 123;
    property DL_FactPoids: WordBool readonly dispid 124;
    property InfoLibre: IBIValues readonly dispid 125;
    procedure SetDefaultArticleReference(const sRef: WideString; Qte: Double); dispid 126;
    procedure SetDefaultArticle(const pArticle: IBOArticle3; Qte: Double); dispid 127;
    procedure SetDefaultArticleMonoGamme(const pEnum: IBOArticleGammeEnum3; Qte: Double); dispid 128;
    procedure SetDefaultArticleDoubleGamme(const pEnum1: IBOArticleGammeEnum3; 
                                           const pEnum2: IBOArticleGammeEnum3; Qte: Double); dispid 129;
    procedure SetDefaultArticleConditionnement(const pArtCond: IBOArticleCond3; Qte: Double); dispid 130;
    property FactoryDocumentLigneEmplacement: IBITypeObjectFactory readonly dispid 132;
    property Lot: IBOArticleDepotLot dispid 133;
    procedure SetDefaultLot(const pLot: IBOArticleDepotLot; Qte: Double); dispid 134;
    property Collaborateur: IBOCollaborateur dispid 135;
    property TxtComplementaire: WideString dispid 136;
    property Ressource: IBIRessource dispid 137;
    property CompteA: IBOCompteA3 dispid 216;
    property FactoryDocumentLigneLienCM: IBITypeObjectFactory readonly dispid 138;
    property DO_Date: TDateTime dispid 139;
    property LS_ComplementOut: WideString readonly dispid 140;
    function MoveUp: WordBool; dispid 141;
    function MoveDown: WordBool; dispid 142;
    procedure WriteBefore(const pNextLigne: IBODocumentLigne3); dispid 143;
    procedure WriteDefaultBefore(const pNextLigne: IBODocumentLigne3); dispid 144;
    procedure SetRessourceDefault(const pRessource: IBIRessource); dispid 145;
    property DL_PieceOFProd: Integer dispid 146;
    property DL_Operation: WideString dispid 147;
    property DefaultCMUP: Double readonly dispid 148;
    procedure WriteTransact; dispid 149;
    procedure WriteDefaultTransact; dispid 150;
    procedure WriteCumulLot; dispid 151;
    procedure SetEmplacementEntree(const pDepotEmpl: IBODepotEmplacement); dispid 152;
    function HasEmplacementEntree: WordBool; dispid 153;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IBODocumentInterneLigne3
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {5CECD75E-537E-421D-B851-BB0EEA6C0E09}
// *********************************************************************//
  IBODocumentInterneLigne3 = interface(IBODocumentPartLigne3)
    ['{5CECD75E-537E-421D-B851-BB0EEA6C0E09}']
    function Get_DocumentInterne: IBODocumentInterne3; safecall;
    function Get_Client: IBOClient3; safecall;
    procedure Set_Client(const pClient: IBOClient3); safecall;
    function Get_AC_RefClient: WideString; safecall;
    procedure Set_AC_RefClient(const pVal: WideString); safecall;
    function Get_ArticleCompose: IBOArticle3; safecall;
    procedure Set_ArticleCompose(const pArticle: IBOArticle3); safecall;
    function Get_IsComposeDeCompose: WordBool; safecall;
    function Get_IsComposeDeComposant: WordBool; safecall;
    function Get_LignesComposants: IBICollection; safecall;
    function Get_DL_QteRessource: Integer; safecall;
    procedure Set_DL_QteRessource(pVal: Integer); safecall;
    function Get_Marge: Double; safecall;
    function Get_PrixRevient: Double; safecall;
    procedure SetDefaultArticleReferenceClient(const sRef: WideString; Qte: Double); safecall;
    property DocumentInterne: IBODocumentInterne3 read Get_DocumentInterne;
    property Client: IBOClient3 read Get_Client write Set_Client;
    property AC_RefClient: WideString read Get_AC_RefClient write Set_AC_RefClient;
    property ArticleCompose: IBOArticle3 read Get_ArticleCompose write Set_ArticleCompose;
    property IsComposeDeCompose: WordBool read Get_IsComposeDeCompose;
    property IsComposeDeComposant: WordBool read Get_IsComposeDeComposant;
    property LignesComposants: IBICollection read Get_LignesComposants;
    property DL_QteRessource: Integer read Get_DL_QteRessource write Set_DL_QteRessource;
    property Marge: Double read Get_Marge;
    property PrixRevient: Double read Get_PrixRevient;
  end;

// *********************************************************************//
// DispIntf :    IBODocumentInterneLigne3Disp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {5CECD75E-537E-421D-B851-BB0EEA6C0E09}
// *********************************************************************//
  IBODocumentInterneLigne3Disp = dispinterface
    ['{5CECD75E-537E-421D-B851-BB0EEA6C0E09}']
    property DocumentInterne: IBODocumentInterne3 readonly dispid 300;
    property Client: IBOClient3 dispid 301;
    property AC_RefClient: WideString dispid 302;
    property ArticleCompose: IBOArticle3 dispid 305;
    property IsComposeDeCompose: WordBool readonly dispid 306;
    property IsComposeDeComposant: WordBool readonly dispid 307;
    property LignesComposants: IBICollection readonly dispid 308;
    property DL_QteRessource: Integer dispid 315;
    property Marge: Double readonly dispid 316;
    property PrixRevient: Double readonly dispid 317;
    procedure SetDefaultArticleReferenceClient(const sRef: WideString; Qte: Double); dispid 318;
    property DocumentPart: IBODocumentPart3 readonly dispid 200;
    property Tiers: IBOTiersPart3 readonly dispid 201;
    property DL_DateBC: TDateTime readonly dispid 203;
    property DL_DateBL: TDateTime readonly dispid 204;
    property DL_PieceBC: WideString readonly dispid 205;
    property DL_PieceBL: WideString readonly dispid 206;
    property IsRemisePied: WordBool dispid 207;
    property IsRemiseExceptionnelle: WordBool dispid 208;
    property IsTotalisatrice: WordBool dispid 209;
    property DL_QteBC: Double dispid 210;
    property DL_QteBL: Double dispid 211;
    property Remise: IRemise2 dispid 212;
    property DL_PUBC: Double readonly dispid 213;
    property AF_RefFourniss: WideString dispid 214;
    property DL_TypePL: DocumentLigneProvenanceType readonly dispid 215;
    property DL_Escompte: WordBool readonly dispid 217;
    property DL_PUDevise: Double dispid 218;
    property DL_PUTTC: Double dispid 219;
    property DO_DateLivr: TDateTime dispid 220;
    property DL_NonLivre: WordBool readonly dispid 221;
    property DL_MontantTTC: Double readonly dispid 223;
    procedure SetDefaultArticleReferenceFournisseur(const sRef: WideString; Qte: Double); dispid 224;
    property Taxe[sElt: Smallint]: IBOTaxe3 dispid 225;
    property Document: IBODocument3 readonly dispid 101;
    property FactoryDocumentLigne: IBODocumentLigneFactory readonly dispid 131;
    property DO_Domaine: DomaineType readonly dispid 102;
    property DO_Type: DocumentType readonly dispid 103;
    property DO_Ref: WideString dispid 104;
    property Article: IBOArticle3 readonly dispid 105;
    property DL_Design: WideString dispid 106;
    property DL_Qte: Double dispid 107;
    property DL_PoidsNet: Double dispid 108;
    property DL_PoidsBrut: Double dispid 109;
    property DL_PrixUnitaire: Double dispid 110;
    property ArticleGammeEnum1: IBOArticleGammeEnum3 readonly dispid 111;
    property ArticleGammeEnum2: IBOArticleGammeEnum3 readonly dispid 112;
    property DL_PrixRU: Double dispid 113;
    property DL_CMUP: Double dispid 114;
    property DL_MvtStock: DocumentLigneMvtStockType readonly dispid 115;
    property EU_Enumere: WideString dispid 116;
    property EU_Qte: Double dispid 117;
    property Depot: IBODepot3 dispid 118;
    property DL_MontantHT: Double readonly dispid 119;
    property LS_NoSerie: WideString dispid 120;
    property LS_Peremption: TDateTime dispid 121;
    property LS_Fabrication: TDateTime dispid 122;
    property Valorisee: WordBool dispid 123;
    property DL_FactPoids: WordBool readonly dispid 124;
    property InfoLibre: IBIValues readonly dispid 125;
    procedure SetDefaultArticleReference(const sRef: WideString; Qte: Double); dispid 126;
    procedure SetDefaultArticle(const pArticle: IBOArticle3; Qte: Double); dispid 127;
    procedure SetDefaultArticleMonoGamme(const pEnum: IBOArticleGammeEnum3; Qte: Double); dispid 128;
    procedure SetDefaultArticleDoubleGamme(const pEnum1: IBOArticleGammeEnum3; 
                                           const pEnum2: IBOArticleGammeEnum3; Qte: Double); dispid 129;
    procedure SetDefaultArticleConditionnement(const pArtCond: IBOArticleCond3; Qte: Double); dispid 130;
    property FactoryDocumentLigneEmplacement: IBITypeObjectFactory readonly dispid 132;
    property Lot: IBOArticleDepotLot dispid 133;
    procedure SetDefaultLot(const pLot: IBOArticleDepotLot; Qte: Double); dispid 134;
    property Collaborateur: IBOCollaborateur dispid 135;
    property TxtComplementaire: WideString dispid 136;
    property Ressource: IBIRessource dispid 137;
    property CompteA: IBOCompteA3 dispid 216;
    property FactoryDocumentLigneLienCM: IBITypeObjectFactory readonly dispid 138;
    property DO_Date: TDateTime dispid 139;
    property LS_ComplementOut: WideString readonly dispid 140;
    function MoveUp: WordBool; dispid 141;
    function MoveDown: WordBool; dispid 142;
    procedure WriteBefore(const pNextLigne: IBODocumentLigne3); dispid 143;
    procedure WriteDefaultBefore(const pNextLigne: IBODocumentLigne3); dispid 144;
    procedure SetRessourceDefault(const pRessource: IBIRessource); dispid 145;
    property DL_PieceOFProd: Integer dispid 146;
    property DL_Operation: WideString dispid 147;
    property DefaultCMUP: Double readonly dispid 148;
    procedure WriteTransact; dispid 149;
    procedure WriteDefaultTransact; dispid 150;
    procedure WriteCumulLot; dispid 151;
    procedure SetEmplacementEntree(const pDepotEmpl: IBODepotEmplacement); dispid 152;
    function HasEmplacementEntree: WordBool; dispid 153;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IBOModeleEcritureLigne3
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {4792B8D7-633B-4133-8002-B9BB0DF4BD95}
// *********************************************************************//
  IBOModeleEcritureLigne3 = interface(IBIPersistObject)
    ['{4792B8D7-633B-4133-8002-B9BB0DF4BD95}']
    function Get_FactoryModeleEcritureLigne: IBITypeObjectFactory; safecall;
    function Get_FactoryModeleEcritureLigneA: IBITypeObjectFactory; safecall;
    function Get_ModeleEcriture: IBOModeleEcriture3; safecall;
    function Get_PG_Jour: WideString; safecall;
    procedure Set_PG_Jour(const pVal: WideString); safecall;
    function Get_PG_Piece: WideString; safecall;
    procedure Set_PG_Piece(const pVal: WideString); safecall;
    function Get_PG_RefPiece: WideString; safecall;
    procedure Set_PG_RefPiece(const pVal: WideString); safecall;
    function Get_CG_Num: WideString; safecall;
    procedure Set_CG_Num(const pVal: WideString); safecall;
    function Get_CG_NumCont: WideString; safecall;
    procedure Set_CG_NumCont(const pVal: WideString); safecall;
    function Get_CT_Num: WideString; safecall;
    procedure Set_CT_Num(const pVal: WideString); safecall;
    function Get_PG_Intitule: WideString; safecall;
    procedure Set_PG_Intitule(const pVal: WideString); safecall;
    function Get_Reglement: IBPReglement3; safecall;
    procedure Set_Reglement(const pReglement: IBPReglement3); safecall;
    function Get_CalculReglement: WordBool; safecall;
    procedure Set_CalculReglement(pVal: WordBool); safecall;
    function Get_PG_Echeance: WideString; safecall;
    procedure Set_PG_Echeance(const pVal: WideString); safecall;
    function Get_PG_Parite: WideString; safecall;
    procedure Set_PG_Parite(const pVal: WideString); safecall;
    function Get_PG_Quantite: WideString; safecall;
    procedure Set_PG_Quantite(const pVal: WideString); safecall;
    function Get_PG_Sens: EcritureSensType; safecall;
    procedure Set_PG_Sens(pVal: EcritureSensType); safecall;
    function Get_PG_Montant: WideString; safecall;
    procedure Set_PG_Montant(const pVal: WideString); safecall;
    function Get_CT_NumCont: WideString; safecall;
    procedure Set_CT_NumCont(const pVal: WideString); safecall;
    function Get_PG_Devise: WideString; safecall;
    procedure Set_PG_Devise(const pVal: WideString); safecall;
    function Get_TA_Code: WideString; safecall;
    procedure Set_TA_Code(const pVal: WideString); safecall;
    function Get_TA_Provenance: TaxeProvenanceType; safecall;
    procedure Set_TA_Provenance(pVal: TaxeProvenanceType); safecall;
    function Get_HasTA_Provenance: WordBool; safecall;
    procedure Set_HasTA_Provenance(pVal: WordBool); safecall;
    function Get_CalculTA_Provenance: WordBool; safecall;
    procedure Set_CalculTA_Provenance(pVal: WordBool); safecall;
    function Get_Devise: IBPDevise2; safecall;
    procedure Set_Devise(const pDevise: IBPDevise2); safecall;
    function Get_CalculDevise: WordBool; safecall;
    procedure Set_CalculDevise(pVal: WordBool); safecall;
    function Get_InfoLibre(sElt: Smallint): WideString; safecall;
    procedure Set_InfoLibre(sElt: Smallint; const pVal: WideString); safecall;
    function Get_PG_Reference: WideString; safecall;
    procedure Set_PG_Reference(const pVal: WideString); safecall;
    property FactoryModeleEcritureLigne: IBITypeObjectFactory read Get_FactoryModeleEcritureLigne;
    property FactoryModeleEcritureLigneA: IBITypeObjectFactory read Get_FactoryModeleEcritureLigneA;
    property ModeleEcriture: IBOModeleEcriture3 read Get_ModeleEcriture;
    property PG_Jour: WideString read Get_PG_Jour write Set_PG_Jour;
    property PG_Piece: WideString read Get_PG_Piece write Set_PG_Piece;
    property PG_RefPiece: WideString read Get_PG_RefPiece write Set_PG_RefPiece;
    property CG_Num: WideString read Get_CG_Num write Set_CG_Num;
    property CG_NumCont: WideString read Get_CG_NumCont write Set_CG_NumCont;
    property CT_Num: WideString read Get_CT_Num write Set_CT_Num;
    property PG_Intitule: WideString read Get_PG_Intitule write Set_PG_Intitule;
    property Reglement: IBPReglement3 read Get_Reglement write Set_Reglement;
    property CalculReglement: WordBool read Get_CalculReglement write Set_CalculReglement;
    property PG_Echeance: WideString read Get_PG_Echeance write Set_PG_Echeance;
    property PG_Parite: WideString read Get_PG_Parite write Set_PG_Parite;
    property PG_Quantite: WideString read Get_PG_Quantite write Set_PG_Quantite;
    property PG_Sens: EcritureSensType read Get_PG_Sens write Set_PG_Sens;
    property PG_Montant: WideString read Get_PG_Montant write Set_PG_Montant;
    property CT_NumCont: WideString read Get_CT_NumCont write Set_CT_NumCont;
    property PG_Devise: WideString read Get_PG_Devise write Set_PG_Devise;
    property TA_Code: WideString read Get_TA_Code write Set_TA_Code;
    property TA_Provenance: TaxeProvenanceType read Get_TA_Provenance write Set_TA_Provenance;
    property HasTA_Provenance: WordBool read Get_HasTA_Provenance write Set_HasTA_Provenance;
    property CalculTA_Provenance: WordBool read Get_CalculTA_Provenance write Set_CalculTA_Provenance;
    property Devise: IBPDevise2 read Get_Devise write Set_Devise;
    property CalculDevise: WordBool read Get_CalculDevise write Set_CalculDevise;
    property InfoLibre[sElt: Smallint]: WideString read Get_InfoLibre write Set_InfoLibre;
    property PG_Reference: WideString read Get_PG_Reference write Set_PG_Reference;
  end;

// *********************************************************************//
// DispIntf :    IBOModeleEcritureLigne3Disp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {4792B8D7-633B-4133-8002-B9BB0DF4BD95}
// *********************************************************************//
  IBOModeleEcritureLigne3Disp = dispinterface
    ['{4792B8D7-633B-4133-8002-B9BB0DF4BD95}']
    property FactoryModeleEcritureLigne: IBITypeObjectFactory readonly dispid 100;
    property FactoryModeleEcritureLigneA: IBITypeObjectFactory readonly dispid 101;
    property ModeleEcriture: IBOModeleEcriture3 readonly dispid 102;
    property PG_Jour: WideString dispid 103;
    property PG_Piece: WideString dispid 104;
    property PG_RefPiece: WideString dispid 105;
    property CG_Num: WideString dispid 106;
    property CG_NumCont: WideString dispid 107;
    property CT_Num: WideString dispid 108;
    property PG_Intitule: WideString dispid 109;
    property Reglement: IBPReglement3 dispid 110;
    property CalculReglement: WordBool dispid 111;
    property PG_Echeance: WideString dispid 112;
    property PG_Parite: WideString dispid 113;
    property PG_Quantite: WideString dispid 114;
    property PG_Sens: EcritureSensType dispid 115;
    property PG_Montant: WideString dispid 116;
    property CT_NumCont: WideString dispid 117;
    property PG_Devise: WideString dispid 118;
    property TA_Code: WideString dispid 119;
    property TA_Provenance: TaxeProvenanceType dispid 120;
    property HasTA_Provenance: WordBool dispid 121;
    property CalculTA_Provenance: WordBool dispid 122;
    property Devise: IBPDevise2 dispid 123;
    property CalculDevise: WordBool dispid 124;
    property InfoLibre[sElt: Smallint]: WideString dispid 125;
    property PG_Reference: WideString dispid 126;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IBOModeleEcritureLigneA3
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {6CFCA978-7FC5-41C1-97CA-79AF7F74B12F}
// *********************************************************************//
  IBOModeleEcritureLigneA3 = interface(IBIPersistObject)
    ['{6CFCA978-7FC5-41C1-97CA-79AF7F74B12F}']
    function Get_FactoryModeleEcritureLigneA: IBITypeObjectFactory; safecall;
    function Get_ModeleEcritureLigne: IBOModeleEcritureLigne3; safecall;
    function Get_Analytique: IBPAnalytique3; safecall;
    procedure Set_Analytique(const pVal: IBPAnalytique3); safecall;
    function Get_CA_Num: WideString; safecall;
    procedure Set_CA_Num(const pVal: WideString); safecall;
    function Get_PA_Montant: WideString; safecall;
    procedure Set_PA_Montant(const pVal: WideString); safecall;
    function Get_PA_Quantite: WideString; safecall;
    procedure Set_PA_Quantite(const pVal: WideString); safecall;
    property FactoryModeleEcritureLigneA: IBITypeObjectFactory read Get_FactoryModeleEcritureLigneA;
    property ModeleEcritureLigne: IBOModeleEcritureLigne3 read Get_ModeleEcritureLigne;
    property Analytique: IBPAnalytique3 read Get_Analytique write Set_Analytique;
    property CA_Num: WideString read Get_CA_Num write Set_CA_Num;
    property PA_Montant: WideString read Get_PA_Montant write Set_PA_Montant;
    property PA_Quantite: WideString read Get_PA_Quantite write Set_PA_Quantite;
  end;

// *********************************************************************//
// DispIntf :    IBOModeleEcritureLigneA3Disp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {6CFCA978-7FC5-41C1-97CA-79AF7F74B12F}
// *********************************************************************//
  IBOModeleEcritureLigneA3Disp = dispinterface
    ['{6CFCA978-7FC5-41C1-97CA-79AF7F74B12F}']
    property FactoryModeleEcritureLigneA: IBITypeObjectFactory readonly dispid 100;
    property ModeleEcritureLigne: IBOModeleEcritureLigne3 readonly dispid 101;
    property Analytique: IBPAnalytique3 dispid 102;
    property CA_Num: WideString dispid 105;
    property PA_Montant: WideString dispid 103;
    property PA_Quantite: WideString dispid 104;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IBOFamilleTarifCategorie
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {6F3F0DB1-7921-45AC-B002-23AED4EA291C}
// *********************************************************************//
  IBOFamilleTarifCategorie = interface(IBIFamilleTarifVente)
    ['{6F3F0DB1-7921-45AC-B002-23AED4EA291C}']
    function Get_CategorieTarif: IBPCategorieTarif; safecall;
    procedure Set_CategorieTarif(const pCategorieTarif: IBPCategorieTarif); safecall;
    property CategorieTarif: IBPCategorieTarif read Get_CategorieTarif write Set_CategorieTarif;
  end;

// *********************************************************************//
// DispIntf :    IBOFamilleTarifCategorieDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {6F3F0DB1-7921-45AC-B002-23AED4EA291C}
// *********************************************************************//
  IBOFamilleTarifCategorieDisp = dispinterface
    ['{6F3F0DB1-7921-45AC-B002-23AED4EA291C}']
    property CategorieTarif: IBPCategorieTarif dispid 131;
    property Coefficient: Double dispid 121;
    property PrixTTC: WordBool dispid 122;
    property Arrondi: IBPArrondi dispid 123;
    property Calcul: WordBool dispid 124;
    property FactoryFamilleTarifQte: IBITypeObjectFactory readonly dispid 101;
    property Famille: IBOFamille3 dispid 102;
    property GammeRemise: IBPGamme dispid 104;
    property Devise: IBPDevise2 dispid 106;
    property Remise: IRemise2 dispid 107;
    property IsHorsRemise: WordBool dispid 108;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IBOFamilleTarifQteCategorie
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {5CFDB24E-7FB9-48FA-A4C8-F3670D80DD99}
// *********************************************************************//
  IBOFamilleTarifQteCategorie = interface(IBIFamilleTarifQte)
    ['{5CFDB24E-7FB9-48FA-A4C8-F3670D80DD99}']
    function Get_FactoryFamilleTarifQteCategorie: IBITypeObjectFactory; safecall;
    function Get_CategorieTarif: IBPCategorieTarif; safecall;
    property FactoryFamilleTarifQteCategorie: IBITypeObjectFactory read Get_FactoryFamilleTarifQteCategorie;
    property CategorieTarif: IBPCategorieTarif read Get_CategorieTarif;
  end;

// *********************************************************************//
// DispIntf :    IBOFamilleTarifQteCategorieDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {5CFDB24E-7FB9-48FA-A4C8-F3670D80DD99}
// *********************************************************************//
  IBOFamilleTarifQteCategorieDisp = dispinterface
    ['{5CFDB24E-7FB9-48FA-A4C8-F3670D80DD99}']
    property FactoryFamilleTarifQteCategorie: IBITypeObjectFactory readonly dispid 130;
    property CategorieTarif: IBPCategorieTarif readonly dispid 131;
    property Famille: IBOFamille3 readonly dispid 100;
    property FamilleTarif: IBIFamilleTarif readonly dispid 101;
    property BorneSup: Double dispid 102;
    property Remise: IRemise2 dispid 103;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IBOFamilleTarifQteFournisseur
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {B0E09EDC-DB04-4F0A-9AB4-1BB575D41C88}
// *********************************************************************//
  IBOFamilleTarifQteFournisseur = interface(IBIFamilleTarifQte)
    ['{B0E09EDC-DB04-4F0A-9AB4-1BB575D41C88}']
    function Get_FactoryFamilleTarifQteFournisseur: IBITypeObjectFactory; safecall;
    function Get_Fournisseur: IBOFournisseur3; safecall;
    property FactoryFamilleTarifQteFournisseur: IBITypeObjectFactory read Get_FactoryFamilleTarifQteFournisseur;
    property Fournisseur: IBOFournisseur3 read Get_Fournisseur;
  end;

// *********************************************************************//
// DispIntf :    IBOFamilleTarifQteFournisseurDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {B0E09EDC-DB04-4F0A-9AB4-1BB575D41C88}
// *********************************************************************//
  IBOFamilleTarifQteFournisseurDisp = dispinterface
    ['{B0E09EDC-DB04-4F0A-9AB4-1BB575D41C88}']
    property FactoryFamilleTarifQteFournisseur: IBITypeObjectFactory readonly dispid 120;
    property Fournisseur: IBOFournisseur3 readonly dispid 121;
    property Famille: IBOFamille3 readonly dispid 100;
    property FamilleTarif: IBIFamilleTarif readonly dispid 101;
    property BorneSup: Double dispid 102;
    property Remise: IRemise2 dispid 103;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IBOModeleGrilleLigne
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {7B17FAE8-DABF-4CFB-9567-B3BEDCED138E}
// *********************************************************************//
  IBOModeleGrilleLigne = interface(IBIPersistObject)
    ['{7B17FAE8-DABF-4CFB-9567-B3BEDCED138E}']
    function Get_FactoryModeleGrilleLigne: IBOModeleGrilleLigneFactory; safecall;
    function Get_ModeleGrille: IBOModeleGrille; safecall;
    function Get_CompteG: IBOCompteG3; safecall;
    procedure Set_CompteG(const pCompteG: IBOCompteG3); safecall;
    function Get_CompteA: IBOCompteA3; safecall;
    procedure Set_CompteA(const pCompteA: IBOCompteA3); safecall;
    function Get_EG_TRepart: RepartitionType; safecall;
    procedure Set_EG_TRepart(pVal: RepartitionType); safecall;
    function Get_EG_VRepart: Double; safecall;
    procedure Set_EG_VRepart(pVal: Double); safecall;
    property FactoryModeleGrilleLigne: IBOModeleGrilleLigneFactory read Get_FactoryModeleGrilleLigne;
    property ModeleGrille: IBOModeleGrille read Get_ModeleGrille;
    property CompteG: IBOCompteG3 read Get_CompteG write Set_CompteG;
    property CompteA: IBOCompteA3 read Get_CompteA write Set_CompteA;
    property EG_TRepart: RepartitionType read Get_EG_TRepart write Set_EG_TRepart;
    property EG_VRepart: Double read Get_EG_VRepart write Set_EG_VRepart;
  end;

// *********************************************************************//
// DispIntf :    IBOModeleGrilleLigneDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {7B17FAE8-DABF-4CFB-9567-B3BEDCED138E}
// *********************************************************************//
  IBOModeleGrilleLigneDisp = dispinterface
    ['{7B17FAE8-DABF-4CFB-9567-B3BEDCED138E}']
    property FactoryModeleGrilleLigne: IBOModeleGrilleLigneFactory readonly dispid 100;
    property ModeleGrille: IBOModeleGrille readonly dispid 101;
    property CompteG: IBOCompteG3 dispid 102;
    property CompteA: IBOCompteA3 dispid 103;
    property EG_TRepart: RepartitionType dispid 104;
    property EG_VRepart: Double dispid 105;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IBOModeleReglementLigne
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {37820001-5870-449F-981C-1BDF4C12F35A}
// *********************************************************************//
  IBOModeleReglementLigne = interface(IBIReglement)
    ['{37820001-5870-449F-981C-1BDF4C12F35A}']
    function Get_FactoryModeleReglementLigne: IBITypeObjectFactory; safecall;
    function Get_ModeleReglement: IBOModeleReglement; safecall;
    property FactoryModeleReglementLigne: IBITypeObjectFactory read Get_FactoryModeleReglementLigne;
    property ModeleReglement: IBOModeleReglement read Get_ModeleReglement;
  end;

// *********************************************************************//
// DispIntf :    IBOModeleReglementLigneDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {37820001-5870-449F-981C-1BDF4C12F35A}
// *********************************************************************//
  IBOModeleReglementLigneDisp = dispinterface
    ['{37820001-5870-449F-981C-1BDF4C12F35A}']
    property FactoryModeleReglementLigne: IBITypeObjectFactory readonly dispid 200;
    property ModeleReglement: IBOModeleReglement readonly dispid 201;
    property Reglement: IBPReglement3 dispid 100;
    property Condition: ReglementConditionType dispid 101;
    property NbJour: Smallint dispid 102;
    property JourTb[sElt: Smallint]: Smallint dispid 103;
    property TRepart: ReglementRepartitionType dispid 104;
    property VRepart: Double dispid 105;
    function Echeance(dDate: TDateTime): TDateTime; dispid 106;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IBOBaremeCommissionQte
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {89E28BE1-2A85-460A-97DE-925D385DDB03}
// *********************************************************************//
  IBOBaremeCommissionQte = interface(IBIPersistObject)
    ['{89E28BE1-2A85-460A-97DE-925D385DDB03}']
    function Get_BaremeCommission: IBOBaremeCommission; safecall;
    function Get_BorneSup: Double; safecall;
    procedure Set_BorneSup(pVal: Double); safecall;
    function Get_Remise: IRemise2; safecall;
    procedure Set_Remise(const pObject: IRemise2); safecall;
    property BaremeCommission: IBOBaremeCommission read Get_BaremeCommission;
    property BorneSup: Double read Get_BorneSup write Set_BorneSup;
    property Remise: IRemise2 read Get_Remise write Set_Remise;
  end;

// *********************************************************************//
// DispIntf :    IBOBaremeCommissionQteDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {89E28BE1-2A85-460A-97DE-925D385DDB03}
// *********************************************************************//
  IBOBaremeCommissionQteDisp = dispinterface
    ['{89E28BE1-2A85-460A-97DE-925D385DDB03}']
    property BaremeCommission: IBOBaremeCommission readonly dispid 101;
    property BorneSup: Double dispid 102;
    property Remise: IRemise2 dispid 103;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IBOBaremeRabaisQte
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {C5223E93-5506-413B-8993-6BEAB4551E58}
// *********************************************************************//
  IBOBaremeRabaisQte = interface(IBIPersistObject)
    ['{C5223E93-5506-413B-8993-6BEAB4551E58}']
    function Get_BaremeRabais: IBOBaremeRabais; safecall;
    function Get_BorneSup: Double; safecall;
    procedure Set_BorneSup(pVal: Double); safecall;
    function Get_Remise: IRemise2; safecall;
    procedure Set_Remise(const pObject: IRemise2); safecall;
    property BaremeRabais: IBOBaremeRabais read Get_BaremeRabais;
    property BorneSup: Double read Get_BorneSup write Set_BorneSup;
    property Remise: IRemise2 read Get_Remise write Set_Remise;
  end;

// *********************************************************************//
// DispIntf :    IBOBaremeRabaisQteDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {C5223E93-5506-413B-8993-6BEAB4551E58}
// *********************************************************************//
  IBOBaremeRabaisQteDisp = dispinterface
    ['{C5223E93-5506-413B-8993-6BEAB4551E58}']
    property BaremeRabais: IBOBaremeRabais readonly dispid 101;
    property BorneSup: Double dispid 102;
    property Remise: IRemise2 dispid 103;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IBOEcritureMedia
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {45D795D8-23CD-4530-BECB-BEB548FD788F}
// *********************************************************************//
  IBOEcritureMedia = interface(IBIMedia)
    ['{45D795D8-23CD-4530-BECB-BEB548FD788F}']
    function Get_FactoryEcritureMedia: IBITypeObjectFactory; safecall;
    function Get_Ecriture: IBOEcriture3; safecall;
    property FactoryEcritureMedia: IBITypeObjectFactory read Get_FactoryEcritureMedia;
    property Ecriture: IBOEcriture3 read Get_Ecriture;
  end;

// *********************************************************************//
// DispIntf :    IBOEcritureMediaDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {45D795D8-23CD-4530-BECB-BEB548FD788F}
// *********************************************************************//
  IBOEcritureMediaDisp = dispinterface
    ['{45D795D8-23CD-4530-BECB-BEB548FD788F}']
    property FactoryEcritureMedia: IBITypeObjectFactory readonly dispid 200;
    property Ecriture: IBOEcriture3 readonly dispid 201;
    property ME_Commentaire: WideString dispid 100;
    property ME_Fichier: WideString dispid 101;
    property ME_TypeMIME: WideString readonly dispid 102;
    property ME_Origine: WideString dispid 103;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IBOBanqueContact
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {72B11AB9-C89B-4764-8219-5E486D12B678}
// *********************************************************************//
  IBOBanqueContact = interface(IBIContact2)
    ['{72B11AB9-C89B-4764-8219-5E486D12B678}']
    function Get_FactoryBanqueContact: IBITypeObjectFactory; safecall;
    function Get_Banque: IBOBanque; safecall;
    property FactoryBanqueContact: IBITypeObjectFactory read Get_FactoryBanqueContact;
    property Banque: IBOBanque read Get_Banque;
  end;

// *********************************************************************//
// DispIntf :    IBOBanqueContactDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {72B11AB9-C89B-4764-8219-5E486D12B678}
// *********************************************************************//
  IBOBanqueContactDisp = dispinterface
    ['{72B11AB9-C89B-4764-8219-5E486D12B678}']
    property FactoryBanqueContact: IBITypeObjectFactory readonly dispid 110;
    property Banque: IBOBanque readonly dispid 111;
    property Nom: WideString dispid 100;
    property Prenom: WideString dispid 101;
    property ServiceContact: IBPServiceContact dispid 102;
    property Fonction: WideString dispid 103;
    property Telecom: ITelecom dispid 104;
    property Civilite: ContactCivilite dispid 108;
    property TypeContact: IBPContact dispid 109;
    property Facebook: WideString dispid 122;
    property LinkedIn: WideString dispid 123;
    property Skype: WideString dispid 124;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IBOCompteAContact
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {29AD8292-C9B8-4FD5-8D7A-83F7D772395D}
// *********************************************************************//
  IBOCompteAContact = interface(IBIContact2)
    ['{29AD8292-C9B8-4FD5-8D7A-83F7D772395D}']
    function Get_FactoryCompteAContact: IBITypeObjectFactory; safecall;
    function Get_CompteA: IBOCompteA3; safecall;
    property FactoryCompteAContact: IBITypeObjectFactory read Get_FactoryCompteAContact;
    property CompteA: IBOCompteA3 read Get_CompteA;
  end;

// *********************************************************************//
// DispIntf :    IBOCompteAContactDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {29AD8292-C9B8-4FD5-8D7A-83F7D772395D}
// *********************************************************************//
  IBOCompteAContactDisp = dispinterface
    ['{29AD8292-C9B8-4FD5-8D7A-83F7D772395D}']
    property FactoryCompteAContact: IBITypeObjectFactory readonly dispid 110;
    property CompteA: IBOCompteA3 readonly dispid 111;
    property Nom: WideString dispid 100;
    property Prenom: WideString dispid 101;
    property ServiceContact: IBPServiceContact dispid 102;
    property Fonction: WideString dispid 103;
    property Telecom: ITelecom dispid 104;
    property Civilite: ContactCivilite dispid 108;
    property TypeContact: IBPContact dispid 109;
    property Facebook: WideString dispid 122;
    property LinkedIn: WideString dispid 123;
    property Skype: WideString dispid 124;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IBOCompteAMedia
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {652D08CE-08D6-4799-B54B-8D65812DD776}
// *********************************************************************//
  IBOCompteAMedia = interface(IBIMedia)
    ['{652D08CE-08D6-4799-B54B-8D65812DD776}']
    function Get_FactoryCompteAMedia: IBITypeObjectFactory; safecall;
    function Get_CompteA: IBOCompteA3; safecall;
    property FactoryCompteAMedia: IBITypeObjectFactory read Get_FactoryCompteAMedia;
    property CompteA: IBOCompteA3 read Get_CompteA;
  end;

// *********************************************************************//
// DispIntf :    IBOCompteAMediaDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {652D08CE-08D6-4799-B54B-8D65812DD776}
// *********************************************************************//
  IBOCompteAMediaDisp = dispinterface
    ['{652D08CE-08D6-4799-B54B-8D65812DD776}']
    property FactoryCompteAMedia: IBITypeObjectFactory readonly dispid 110;
    property CompteA: IBOCompteA3 readonly dispid 111;
    property ME_Commentaire: WideString dispid 100;
    property ME_Fichier: WideString dispid 101;
    property ME_TypeMIME: WideString readonly dispid 102;
    property ME_Origine: WideString dispid 103;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IBOEcritureOD
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {1502538D-5FF2-4771-A5CE-F767C839A0F9}
// *********************************************************************//
  IBOEcritureOD = interface(IBIPersistObject)
    ['{1502538D-5FF2-4771-A5CE-F767C839A0F9}']
    function Get_Journal: IBOJournalA; safecall;
    procedure Set_Journal(const pJournal: IBOJournalA); safecall;
    function Get_Date: TDateTime; safecall;
    procedure Set_Date(pVal: TDateTime); safecall;
    function Get_ER_Piece: WideString; safecall;
    procedure Set_ER_Piece(const pVal: WideString); safecall;
    function Get_ER_RefPiece: WideString; safecall;
    procedure Set_ER_RefPiece(const pVal: WideString); safecall;
    function Get_CompteG: IBOCompteG3; safecall;
    procedure Set_CompteG(const pCompteG: IBOCompteG3); safecall;
    function Get_ER_Intitule: WideString; safecall;
    procedure Set_ER_Intitule(const pVal: WideString); safecall;
    function Get_ER_Sens: EcritureSensType; safecall;
    procedure Set_ER_Sens(pVal: EcritureSensType); safecall;
    function Get_ER_Type: EcritureODType; safecall;
    function Get_ER_Norme: EcritureNormeType; safecall;
    procedure Set_ER_Norme(pVal: EcritureNormeType); safecall;
    function Get_CompteA: IBOCompteA3; safecall;
    procedure Set_CompteA(const pCompteA: IBOCompteA3); safecall;
    function Get_ER_MontantA: Double; safecall;
    procedure Set_ER_MontantA(pVal: Double); safecall;
    function Get_ER_QuantiteA: Double; safecall;
    procedure Set_ER_QuantiteA(pVal: Double); safecall;
    property Journal: IBOJournalA read Get_Journal write Set_Journal;
    property Date: TDateTime read Get_Date write Set_Date;
    property ER_Piece: WideString read Get_ER_Piece write Set_ER_Piece;
    property ER_RefPiece: WideString read Get_ER_RefPiece write Set_ER_RefPiece;
    property CompteG: IBOCompteG3 read Get_CompteG write Set_CompteG;
    property ER_Intitule: WideString read Get_ER_Intitule write Set_ER_Intitule;
    property ER_Sens: EcritureSensType read Get_ER_Sens write Set_ER_Sens;
    property ER_Type: EcritureODType read Get_ER_Type;
    property ER_Norme: EcritureNormeType read Get_ER_Norme write Set_ER_Norme;
    property CompteA: IBOCompteA3 read Get_CompteA write Set_CompteA;
    property ER_MontantA: Double read Get_ER_MontantA write Set_ER_MontantA;
    property ER_QuantiteA: Double read Get_ER_QuantiteA write Set_ER_QuantiteA;
  end;

// *********************************************************************//
// DispIntf :    IBOEcritureODDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {1502538D-5FF2-4771-A5CE-F767C839A0F9}
// *********************************************************************//
  IBOEcritureODDisp = dispinterface
    ['{1502538D-5FF2-4771-A5CE-F767C839A0F9}']
    property Journal: IBOJournalA dispid 101;
    property Date: TDateTime dispid 102;
    property ER_Piece: WideString dispid 103;
    property ER_RefPiece: WideString dispid 104;
    property CompteG: IBOCompteG3 dispid 105;
    property ER_Intitule: WideString dispid 106;
    property ER_Sens: EcritureSensType dispid 107;
    property ER_Type: EcritureODType readonly dispid 108;
    property ER_Norme: EcritureNormeType dispid 109;
    property CompteA: IBOCompteA3 dispid 110;
    property ER_MontantA: Double dispid 111;
    property ER_QuantiteA: Double dispid 112;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IBODocumentMedia
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {7176322D-DEE2-4535-BE67-6E60F46C948F}
// *********************************************************************//
  IBODocumentMedia = interface(IBIMedia)
    ['{7176322D-DEE2-4535-BE67-6E60F46C948F}']
    function Get_Document: IBODocument3; safecall;
    function Get_IsATransmettre: WordBool; safecall;
    procedure Set_IsATransmettre(pVal: WordBool); safecall;
    property Document: IBODocument3 read Get_Document;
    property IsATransmettre: WordBool read Get_IsATransmettre write Set_IsATransmettre;
  end;

// *********************************************************************//
// DispIntf :    IBODocumentMediaDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {7176322D-DEE2-4535-BE67-6E60F46C948F}
// *********************************************************************//
  IBODocumentMediaDisp = dispinterface
    ['{7176322D-DEE2-4535-BE67-6E60F46C948F}']
    property Document: IBODocument3 readonly dispid 201;
    property IsATransmettre: WordBool dispid 202;
    property ME_Commentaire: WideString dispid 100;
    property ME_Fichier: WideString dispid 101;
    property ME_TypeMIME: WideString readonly dispid 102;
    property ME_Origine: WideString dispid 103;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IBPBonAPayer
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {6387187C-D5B6-40A7-AF5C-78275D75C255}
// *********************************************************************//
  IBPBonAPayer = interface(IBIPersistObject)
    ['{6387187C-D5B6-40A7-AF5C-78275D75C255}']
    function Get_FactoryBonAPayer: IBITypeObjectFactory; safecall;
    function Get_Autorisation: eBAPAutorisationType; safecall;
    procedure Set_Autorisation(pVal: eBAPAutorisationType); safecall;
    function Get_Responsable: IBOCollaborateur; safecall;
    procedure Set_Responsable(const pCollaborateur: IBOCollaborateur); safecall;
    function Get_Facture: eBAPAValider; safecall;
    procedure Set_Facture(pVal: eBAPAValider); safecall;
    function Get_SeuilValidation: Double; safecall;
    procedure Set_SeuilValidation(pVal: Double); safecall;
    property FactoryBonAPayer: IBITypeObjectFactory read Get_FactoryBonAPayer;
    property Autorisation: eBAPAutorisationType read Get_Autorisation write Set_Autorisation;
    property Responsable: IBOCollaborateur read Get_Responsable write Set_Responsable;
    property Facture: eBAPAValider read Get_Facture write Set_Facture;
    property SeuilValidation: Double read Get_SeuilValidation write Set_SeuilValidation;
  end;

// *********************************************************************//
// DispIntf :    IBPBonAPayerDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {6387187C-D5B6-40A7-AF5C-78275D75C255}
// *********************************************************************//
  IBPBonAPayerDisp = dispinterface
    ['{6387187C-D5B6-40A7-AF5C-78275D75C255}']
    property FactoryBonAPayer: IBITypeObjectFactory readonly dispid 100;
    property Autorisation: eBAPAutorisationType dispid 101;
    property Responsable: IBOCollaborateur dispid 102;
    property Facture: eBAPAValider dispid 103;
    property SeuilValidation: Double dispid 104;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IBOAgenda
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {C0B75F00-3BAA-4943-9DCC-630A85D6B226}
// *********************************************************************//
  IBOAgenda = interface(IBIPersistObject)
    ['{C0B75F00-3BAA-4943-9DCC-630A85D6B226}']
    function Get_FactoryAgenda: IBOAgendaFactory; safecall;
    function Get_Agenda: IBPAgenda; safecall;
    procedure Set_Agenda(const pVal: IBPAgenda); safecall;
    function Get_AgendaEnum: WideString; safecall;
    procedure Set_AgendaEnum(const pVal: WideString); safecall;
    function Get_TypeInteresse: AgendaTypeInteresse; safecall;
    procedure Set_TypeInteresse(pVal: AgendaTypeInteresse); safecall;
    function Get_Depot: IBODepot3; safecall;
    procedure Set_Depot(const pVal: IBODepot3); safecall;
    function Get_Client: IBOClient3; safecall;
    procedure Set_Client(const pVal: IBOClient3); safecall;
    function Get_Fournisseur: IBOFournisseur3; safecall;
    procedure Set_Fournisseur(const pVal: IBOFournisseur3); safecall;
    function Get_Collaborateur: IBOCollaborateur; safecall;
    procedure Set_Collaborateur(const pVal: IBOCollaborateur); safecall;
    function Get_Article: IBOArticle3; safecall;
    procedure Set_Article(const pVal: IBOArticle3); safecall;
    function Get_Ressource: IBIRessource; safecall;
    procedure Set_Ressource(const pVal: IBIRessource); safecall;
    function Get_AG_Period: IDateTimePeriod; safecall;
    procedure Set_AG_Period(const pTimePeriod: IDateTimePeriod); safecall;
    function Get_AG_Veille: WordBool; safecall;
    procedure Set_AG_Veille(pVal: WordBool); safecall;
    function Get_AG_Comment: WideString; safecall;
    procedure Set_AG_Comment(const pVal: WideString); safecall;
    function Get_AgendaType: AgendaType; safecall;
    function Get_AG_Confirme: WordBool; safecall;
    procedure Set_AG_Confirme(pVal: WordBool); safecall;
    function Get_AG_Ignorer: WordBool; safecall;
    procedure Set_AG_Ignorer(pVal: WordBool); safecall;
    function Get_AG_Continue: WordBool; safecall;
    procedure Set_AG_Continue(pVal: WordBool); safecall;
    function Get_Ligne: IBODocumentPartLigne3; safecall;
    property FactoryAgenda: IBOAgendaFactory read Get_FactoryAgenda;
    property Agenda: IBPAgenda read Get_Agenda write Set_Agenda;
    property AgendaEnum: WideString read Get_AgendaEnum write Set_AgendaEnum;
    property TypeInteresse: AgendaTypeInteresse read Get_TypeInteresse write Set_TypeInteresse;
    property Depot: IBODepot3 read Get_Depot write Set_Depot;
    property Client: IBOClient3 read Get_Client write Set_Client;
    property Fournisseur: IBOFournisseur3 read Get_Fournisseur write Set_Fournisseur;
    property Collaborateur: IBOCollaborateur read Get_Collaborateur write Set_Collaborateur;
    property Article: IBOArticle3 read Get_Article write Set_Article;
    property Ressource: IBIRessource read Get_Ressource write Set_Ressource;
    property AG_Period: IDateTimePeriod read Get_AG_Period write Set_AG_Period;
    property AG_Veille: WordBool read Get_AG_Veille write Set_AG_Veille;
    property AG_Comment: WideString read Get_AG_Comment write Set_AG_Comment;
    property AgendaType: AgendaType read Get_AgendaType;
    property AG_Confirme: WordBool read Get_AG_Confirme write Set_AG_Confirme;
    property AG_Ignorer: WordBool read Get_AG_Ignorer write Set_AG_Ignorer;
    property AG_Continue: WordBool read Get_AG_Continue write Set_AG_Continue;
    property Ligne: IBODocumentPartLigne3 read Get_Ligne;
  end;

// *********************************************************************//
// DispIntf :    IBOAgendaDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {C0B75F00-3BAA-4943-9DCC-630A85D6B226}
// *********************************************************************//
  IBOAgendaDisp = dispinterface
    ['{C0B75F00-3BAA-4943-9DCC-630A85D6B226}']
    property FactoryAgenda: IBOAgendaFactory readonly dispid 120;
    property Agenda: IBPAgenda dispid 121;
    property AgendaEnum: WideString dispid 122;
    property TypeInteresse: AgendaTypeInteresse dispid 123;
    property Depot: IBODepot3 dispid 124;
    property Client: IBOClient3 dispid 125;
    property Fournisseur: IBOFournisseur3 dispid 126;
    property Collaborateur: IBOCollaborateur dispid 127;
    property Article: IBOArticle3 dispid 128;
    property Ressource: IBIRessource dispid 129;
    property AG_Period: IDateTimePeriod dispid 130;
    property AG_Veille: WordBool dispid 132;
    property AG_Comment: WideString dispid 133;
    property AgendaType: AgendaType readonly dispid 134;
    property AG_Confirme: WordBool dispid 135;
    property AG_Ignorer: WordBool dispid 138;
    property AG_Continue: WordBool dispid 139;
    property Ligne: IBODocumentPartLigne3 readonly dispid 140;
    property Factory: IBITypeObjectFactory readonly dispid 1;
    property OID: IBIObjectID readonly dispid 2;
    property IsModified: WordBool readonly dispid 3;
    property IsPersistant: WordBool readonly dispid 4;
    property Stream: IBIPersistStream readonly dispid 5;
    function Cmp(const pObj: IBIPersistObject): Smallint; dispid 6;
    procedure Remove; dispid 7;
    procedure Write; dispid 8;
    procedure WriteDefault; dispid 12;
    procedure Read; dispid 9;
    procedure CouldModified; dispid 10;
    procedure SetDefault; dispid 11;
    procedure Refresh; dispid 13;
    property OIDExternal: IBIObjectIDExternal readonly dispid 14;
    procedure _SetSynchronized; dispid 15;
    procedure WriteTo(const pStream: IStream); dispid 16;
    property DateCreation: TDateTime readonly dispid 17;
    property DateModification: TDateTime readonly dispid 18;
  end;

// *********************************************************************//
// Interface :   IUserLot
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {2960B194-C946-4357-800D-9B2D21438256}
// *********************************************************************//
  IUserLot = interface(IDispatch)
    ['{2960B194-C946-4357-800D-9B2D21438256}']
    function Get_Lot: IBOArticleDepotLot; safecall;
    procedure Set_Lot(const pLot: IBOArticleDepotLot); safecall;
    function Get_LS_ComplementOut: WideString; safecall;
    procedure Set_LS_ComplementOut(const pLS_Complement: WideString); safecall;
    function Get_QteToUse: Double; safecall;
    procedure Set_QteToUse(dQteToUse: Double); safecall;
    procedure Set_(const pLot: IBOArticleDepotLot; dQteToUse: Double; 
                   const sLS_Complement: WideString); safecall;
    property Lot: IBOArticleDepotLot read Get_Lot write Set_Lot;
    property LS_ComplementOut: WideString read Get_LS_ComplementOut write Set_LS_ComplementOut;
    property QteToUse: Double read Get_QteToUse write Set_QteToUse;
  end;

// *********************************************************************//
// DispIntf :    IUserLotDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {2960B194-C946-4357-800D-9B2D21438256}
// *********************************************************************//
  IUserLotDisp = dispinterface
    ['{2960B194-C946-4357-800D-9B2D21438256}']
    property Lot: IBOArticleDepotLot dispid 100;
    property LS_ComplementOut: WideString dispid 101;
    property QteToUse: Double dispid 102;
    procedure Set_(const pLot: IBOArticleDepotLot; dQteToUse: Double; 
                   const sLS_Complement: WideString); dispid 103;
  end;

// *********************************************************************//
// Interface :   IUserEmplacement
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {2477FBD0-0291-4223-B866-F4AB8182153D}
// *********************************************************************//
  IUserEmplacement = interface(IDispatch)
    ['{2477FBD0-0291-4223-B866-F4AB8182153D}']
    function Get_Emplacement: IBODepotEmplacement; safecall;
    procedure Set_Emplacement(const pEmpl: IBODepotEmplacement); safecall;
    function Get_QteToUse: Double; safecall;
    procedure Set_QteToUse(dQteToUse: Double); safecall;
    procedure Set_(const pEmpl: IBODepotEmplacement; dQteToUse: Double); safecall;
    property Emplacement: IBODepotEmplacement read Get_Emplacement write Set_Emplacement;
    property QteToUse: Double read Get_QteToUse write Set_QteToUse;
  end;

// *********************************************************************//
// DispIntf :    IUserEmplacementDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {2477FBD0-0291-4223-B866-F4AB8182153D}
// *********************************************************************//
  IUserEmplacementDisp = dispinterface
    ['{2477FBD0-0291-4223-B866-F4AB8182153D}']
    property Emplacement: IBODepotEmplacement dispid 100;
    property QteToUse: Double dispid 102;
    procedure Set_(const pEmpl: IBODepotEmplacement; dQteToUse: Double); dispid 103;
  end;

// *********************************************************************//
// Interface :   IUserColis
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {B879AC0E-A9C4-410A-B9F2-B8781FFF523C}
// *********************************************************************//
  IUserColis = interface(IDispatch)
    ['{B879AC0E-A9C4-410A-B9F2-B8781FFF523C}']
    function Get_NumColis: WideString; safecall;
    procedure Set_NumColis(const pNumColis: WideString); safecall;
    function Get_Qte: Double; safecall;
    procedure Set_Qte(dQteColis: Double); safecall;
    procedure Set_(const sNumColis: WideString; dQteColis: Double); safecall;
    property NumColis: WideString read Get_NumColis write Set_NumColis;
    property Qte: Double read Get_Qte write Set_Qte;
  end;

// *********************************************************************//
// DispIntf :    IUserColisDisp
// Indicateurs : (4544) Dual NonExtensible OleAutomation Dispatchable
// GUID :        {B879AC0E-A9C4-410A-B9F2-B8781FFF523C}
// *********************************************************************//
  IUserColisDisp = dispinterface
    ['{B879AC0E-A9C4-410A-B9F2-B8781FFF523C}']
    property NumColis: WideString dispid 100;
    property Qte: Double dispid 101;
    procedure Set_(const sNumColis: WideString; dQteColis: Double); dispid 102;
  end;

// *********************************************************************//
// La classe CoBSCPTAApplication100c fournit une méthode Create et CreateRemote pour
// créer des instances de l'interface par défaut IBSCPTAApplication3 exposée
// par la CoClasse BSCPTAApplication100c. Les fonctions sont destinées à être utilisées par
// les clients désirant automatiser les objets CoClasse exposés par
// le serveur de cette bibliothèque de types.
// *********************************************************************//
  CoBSCPTAApplication100c = class
    class function Create: IBSCPTAApplication3;
    class function CreateRemote(const MachineName: string): IBSCPTAApplication3;
  end;

// *********************************************************************//
// La classe CoBSCIALApplication100c fournit une méthode Create et CreateRemote pour
// créer des instances de l'interface par défaut IBSCIALApplication3 exposée
// par la CoClasse BSCIALApplication100c. Les fonctions sont destinées à être utilisées par
// les clients désirant automatiser les objets CoClasse exposés par
// le serveur de cette bibliothèque de types.
// *********************************************************************//
  CoBSCIALApplication100c = class
    class function Create: IBSCIALApplication3;
    class function CreateRemote(const MachineName: string): IBSCIALApplication3;
  end;

implementation

uses System.Win.ComObj;

class function CoBSCPTAApplication100c.Create: IBSCPTAApplication3;
begin
  Result := CreateComObject(CLASS_BSCPTAApplication100c) as IBSCPTAApplication3;
end;

class function CoBSCPTAApplication100c.CreateRemote(const MachineName: string): IBSCPTAApplication3;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_BSCPTAApplication100c) as IBSCPTAApplication3;
end;

class function CoBSCIALApplication100c.Create: IBSCIALApplication3;
begin
  Result := CreateComObject(CLASS_BSCIALApplication100c) as IBSCIALApplication3;
end;

class function CoBSCIALApplication100c.CreateRemote(const MachineName: string): IBSCIALApplication3;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_BSCIALApplication100c) as IBSCIALApplication3;
end;

end.
